{
  "numFailedTestSuites": 76,
  "numFailedTests": 48,
  "numPassedTestSuites": 368,
  "numPassedTests": 2437,
  "numPendingTestSuites": 18,
  "numPendingTests": 108,
  "numRuntimeErrorTestSuites": 60,
  "numTodoTests": 0,
  "numTotalTestSuites": 462,
  "numTotalTests": 2593,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1744009662146,
  "success": false,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 3,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009663565,
        "runtime": 1111,
        "slow": false,
        "start": 1744009662454
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\user-flows\\auth.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Authentication and Authorization"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication and Authorization should reject requests without API key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should reject requests without API key"
        },
        {
          "ancestorTitles": [
            "Authentication and Authorization"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication and Authorization should accept requests with valid API key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should accept requests with valid API key"
        },
        {
          "ancestorTitles": [
            "Authentication and Authorization"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication and Authorization should reject requests with insufficient permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should reject requests with insufficient permissions"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 1,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009664127,
        "runtime": 844,
        "slow": false,
        "start": 1744009663283
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\dist\\test-generator\\Core\\Template.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Template"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template should initialize properly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should initialize properly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 6,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009664246,
        "runtime": 967,
        "slow": false,
        "start": 1744009663279
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useLoginAttempts.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useLoginAttempts"
          ],
          "duration": 21,
          "failureDetails": [
            {}
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a number or bigint\n\nReceived has value: \u001b[31mundefined\u001b[39m\n    at Object.toBeGreaterThan (C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useLoginAttempts.test.ts:106:51)"
          ],
          "fullName": "useLoginAttempts fetches login attempts successfully - with debug",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "failed",
          "title": "fetches login attempts successfully - with debug"
        },
        {
          "ancestorTitles": [
            "useLoginAttempts"
          ],
          "duration": 5,
          "failureDetails": [
            {}
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a number or bigint\n\nReceived has value: \u001b[31mundefined\u001b[39m\n    at Object.toBeGreaterThan (C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useLoginAttempts.test.ts:213:51)"
          ],
          "fullName": "useLoginAttempts loads more data when loadMore is called - with debug",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "loads more data when loadMore is called - with debug"
        },
        {
          "ancestorTitles": [
            "useLoginAttempts"
          ],
          "duration": 5,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": {
                  "loginAttempts": [
                    {
                      "id": "3",
                      "timestamp": "2023-06-01T12:00:00Z",
                      "username": "user3",
                      "ip": "192.168.1.3",
                      "userAgent": "Firefox/89.0",
                      "success": true,
                      "ipRiskLevel": "low",
                      "location": {
                        "country": "United Kingdom",
                        "city": "London",
                        "latitude": 51.5074,
                        "longitude": -0.1278
                      }
                    }
                  ],
                  "hasMore": false
                },
                "expected": [],
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[]\u001b[39m\nReceived: \u001b[31m{\"hasMore\": false, \"loginAttempts\": [{\"id\": \"3\", \"ip\": \"192.168.1.3\", \"ipRiskLevel\": \"low\", \"location\": {\"city\": \"London\", \"country\": \"United Kingdom\", \"latitude\": 51.5074, \"longitude\": -0.1278}, \"success\": true, \"timestamp\": \"2023-06-01T12:00:00Z\", \"userAgent\": \"Firefox/89.0\", \"username\": \"user3\"}]}\u001b[39m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[]\u001b[39m\nReceived: \u001b[31m{\"hasMore\": false, \"loginAttempts\": [{\"id\": \"3\", \"ip\": \"192.168.1.3\", \"ipRiskLevel\": \"low\", \"location\": {\"city\": \"London\", \"country\": \"United Kingdom\", \"latitude\": 51.5074, \"longitude\": -0.1278}, \"success\": true, \"timestamp\": \"2023-06-01T12:00:00Z\", \"userAgent\": \"Firefox/89.0\", \"username\": \"user3\"}]}\u001b[39m\n    at Object.toEqual (C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useLoginAttempts.test.ts:289:42)"
          ],
          "fullName": "useLoginAttempts handles API errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "handles API errors"
        },
        {
          "ancestorTitles": [
            "useLoginAttempts"
          ],
          "duration": 5,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": [],
                "expected": [
                  {
                    "id": "1",
                    "timestamp": "2023-06-01T10:00:00Z",
                    "username": "user1",
                    "ip": "192.168.1.1",
                    "userAgent": "Mozilla/5.0",
                    "success": true,
                    "ipRiskLevel": "low",
                    "location": {
                      "country": "United States",
                      "city": "New York",
                      "latitude": 40.7128,
                      "longitude": -74.006
                    }
                  },
                  {
                    "id": "2",
                    "timestamp": "2023-06-01T11:00:00Z",
                    "username": "user2",
                    "ip": "192.168.1.2",
                    "userAgent": "Chrome/91.0",
                    "success": false,
                    "ipRiskLevel": "high",
                    "location": {
                      "country": "Canada",
                      "city": "Toronto",
                      "latitude": 43.6532,
                      "longitude": -79.3832
                    }
                  }
                ],
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 32\u001b[39m\n\u001b[31m+ Received  +  1\u001b[39m\n\n\u001b[32m- Array [\u001b[39m\n\u001b[32m-   Object {\u001b[39m\n\u001b[32m-     \"id\": \"1\",\u001b[39m\n\u001b[32m-     \"ip\": \"192.168.1.1\",\u001b[39m\n\u001b[32m-     \"ipRiskLevel\": \"low\",\u001b[39m\n\u001b[32m-     \"location\": Object {\u001b[39m\n\u001b[32m-       \"city\": \"New York\",\u001b[39m\n\u001b[32m-       \"country\": \"United States\",\u001b[39m\n\u001b[32m-       \"latitude\": 40.7128,\u001b[39m\n\u001b[32m-       \"longitude\": -74.006,\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     \"success\": true,\u001b[39m\n\u001b[32m-     \"timestamp\": \"2023-06-01T10:00:00Z\",\u001b[39m\n\u001b[32m-     \"userAgent\": \"Mozilla/5.0\",\u001b[39m\n\u001b[32m-     \"username\": \"user1\",\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   Object {\u001b[39m\n\u001b[32m-     \"id\": \"2\",\u001b[39m\n\u001b[32m-     \"ip\": \"192.168.1.2\",\u001b[39m\n\u001b[32m-     \"ipRiskLevel\": \"high\",\u001b[39m\n\u001b[32m-     \"location\": Object {\u001b[39m\n\u001b[32m-       \"city\": \"Toronto\",\u001b[39m\n\u001b[32m-       \"country\": \"Canada\",\u001b[39m\n\u001b[32m-       \"latitude\": 43.6532,\u001b[39m\n\u001b[32m-       \"longitude\": -79.3832,\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     \"success\": false,\u001b[39m\n\u001b[32m-     \"timestamp\": \"2023-06-01T11:00:00Z\",\u001b[39m\n\u001b[32m-     \"userAgent\": \"Chrome/91.0\",\u001b[39m\n\u001b[32m-     \"username\": \"user2\",\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m- ]\u001b[39m\n\u001b[31m+ Array []\u001b[39m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 32\u001b[39m\n\u001b[31m+ Received  +  1\u001b[39m\n\n\u001b[32m- Array [\u001b[39m\n\u001b[32m-   Object {\u001b[39m\n\u001b[32m-     \"id\": \"1\",\u001b[39m\n\u001b[32m-     \"ip\": \"192.168.1.1\",\u001b[39m\n\u001b[32m-     \"ipRiskLevel\": \"low\",\u001b[39m\n\u001b[32m-     \"location\": Object {\u001b[39m\n\u001b[32m-       \"city\": \"New York\",\u001b[39m\n\u001b[32m-       \"country\": \"United States\",\u001b[39m\n\u001b[32m-       \"latitude\": 40.7128,\u001b[39m\n\u001b[32m-       \"longitude\": -74.006,\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     \"success\": true,\u001b[39m\n\u001b[32m-     \"timestamp\": \"2023-06-01T10:00:00Z\",\u001b[39m\n\u001b[32m-     \"userAgent\": \"Mozilla/5.0\",\u001b[39m\n\u001b[32m-     \"username\": \"user1\",\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m-   Object {\u001b[39m\n\u001b[32m-     \"id\": \"2\",\u001b[39m\n\u001b[32m-     \"ip\": \"192.168.1.2\",\u001b[39m\n\u001b[32m-     \"ipRiskLevel\": \"high\",\u001b[39m\n\u001b[32m-     \"location\": Object {\u001b[39m\n\u001b[32m-       \"city\": \"Toronto\",\u001b[39m\n\u001b[32m-       \"country\": \"Canada\",\u001b[39m\n\u001b[32m-       \"latitude\": 43.6532,\u001b[39m\n\u001b[32m-       \"longitude\": -79.3832,\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     \"success\": false,\u001b[39m\n\u001b[32m-     \"timestamp\": \"2023-06-01T11:00:00Z\",\u001b[39m\n\u001b[32m-     \"userAgent\": \"Chrome/91.0\",\u001b[39m\n\u001b[32m-     \"username\": \"user2\",\u001b[39m\n\u001b[32m-   },\u001b[39m\n\u001b[32m- ]\u001b[39m\n\u001b[31m+ Array []\u001b[39m\n    at Object.toEqual (C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useLoginAttempts.test.ts:336:42)"
          ],
          "fullName": "useLoginAttempts refreshes data when refresh is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "refreshes data when refresh is called"
        },
        {
          "ancestorTitles": [
            "useLoginAttempts"
          ],
          "duration": 4,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32mStringContaining \"/api/admin/security/login-attempts?limit=10\"\u001b[39m, \u001b[32mAnything\u001b[39m\nReceived: \u001b[31m\"/api/security/login-attempts?page=1&pageSize=10\"\u001b[39m\n\nNumber of calls: \u001b[31m1\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32mStringContaining \"/api/admin/security/login-attempts?limit=10\"\u001b[39m, \u001b[32mAnything\u001b[39m\nReceived: \u001b[31m\"/api/security/login-attempts?page=1&pageSize=10\"\u001b[39m\n\nNumber of calls: \u001b[31m1\u001b[39m\n    at Object.toHaveBeenCalledWith (C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useLoginAttempts.test.ts:377:26)"
          ],
          "fullName": "useLoginAttempts applies filters correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "applies filters correctly"
        },
        {
          "ancestorTitles": [
            "useLoginAttempts"
          ],
          "duration": 2,
          "failureDetails": [
            {}
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a number or bigint\n\nReceived has value: \u001b[31mundefined\u001b[39m\n    at Object.toBeGreaterThan (C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useLoginAttempts.test.ts:463:51)"
          ],
          "fullName": "useLoginAttempts updates when filter changes - with debug",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "updates when filter changes - with debug"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museLoginAttempts › fetches login attempts successfully - with debug\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a number or bigint\n\n    Received has value: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 104 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39misLoading) {\u001b[22m\n\u001b[2m     \u001b[90m 105 |\u001b[39m       \u001b[90m// Check that we got at least one login attempt\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 106 |\u001b[39m       expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mloginAttempts\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 107 |\u001b[39m       \u001b[90m// And check that the first item matches what we expect\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m       expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mloginAttempts[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoEqual(mockLoginAttempts[\u001b[35m0\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 109 |\u001b[39m       expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mhasMore)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/admin/security/hooks/__tests__/useLoginAttempts.test.ts\u001b[39m\u001b[0m\u001b[2m:106:51)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museLoginAttempts › loads more data when loadMore is called - with debug\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a number or bigint\n\n    Received has value: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 211 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'[TEST] Checking initial data'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 212 |\u001b[39m       \u001b[90m// Check that we got at least one login attempt\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 213 |\u001b[39m       expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mloginAttempts\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 214 |\u001b[39m       \u001b[90m// And check that the first item matches what we expect\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 215 |\u001b[39m       expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mloginAttempts[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoEqual(mockLoginAttempts[\u001b[35m0\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 216 |\u001b[39m       expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mhasMore)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/admin/security/hooks/__tests__/useLoginAttempts.test.ts\u001b[39m\u001b[0m\u001b[2m:213:51)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museLoginAttempts › handles API errors\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[]\u001b[39m\n    Received: \u001b[31m{\"hasMore\": false, \"loginAttempts\": [{\"id\": \"3\", \"ip\": \"192.168.1.3\", \"ipRiskLevel\": \"low\", \"location\": {\"city\": \"London\", \"country\": \"United Kingdom\", \"latitude\": 51.5074, \"longitude\": -0.1278}, \"success\": true, \"timestamp\": \"2023-06-01T12:00:00Z\", \"userAgent\": \"Firefox/89.0\", \"username\": \"user3\"}]}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 287 |\u001b[39m     \u001b[90m// After error\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 288 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39misLoading)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 289 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mloginAttempts)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 290 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mError\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 291 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39merror\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Internal server error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 292 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/admin/security/hooks/__tests__/useLoginAttempts.test.ts\u001b[39m\u001b[0m\u001b[2m:289:42)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museLoginAttempts › refreshes data when refresh is called\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 32\u001b[39m\n    \u001b[31m+ Received  +  1\u001b[39m\n\n    \u001b[32m- Array [\u001b[39m\n    \u001b[32m-   Object {\u001b[39m\n    \u001b[32m-     \"id\": \"1\",\u001b[39m\n    \u001b[32m-     \"ip\": \"192.168.1.1\",\u001b[39m\n    \u001b[32m-     \"ipRiskLevel\": \"low\",\u001b[39m\n    \u001b[32m-     \"location\": Object {\u001b[39m\n    \u001b[32m-       \"city\": \"New York\",\u001b[39m\n    \u001b[32m-       \"country\": \"United States\",\u001b[39m\n    \u001b[32m-       \"latitude\": 40.7128,\u001b[39m\n    \u001b[32m-       \"longitude\": -74.006,\u001b[39m\n    \u001b[32m-     },\u001b[39m\n    \u001b[32m-     \"success\": true,\u001b[39m\n    \u001b[32m-     \"timestamp\": \"2023-06-01T10:00:00Z\",\u001b[39m\n    \u001b[32m-     \"userAgent\": \"Mozilla/5.0\",\u001b[39m\n    \u001b[32m-     \"username\": \"user1\",\u001b[39m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m-   Object {\u001b[39m\n    \u001b[32m-     \"id\": \"2\",\u001b[39m\n    \u001b[32m-     \"ip\": \"192.168.1.2\",\u001b[39m\n    \u001b[32m-     \"ipRiskLevel\": \"high\",\u001b[39m\n    \u001b[32m-     \"location\": Object {\u001b[39m\n    \u001b[32m-       \"city\": \"Toronto\",\u001b[39m\n    \u001b[32m-       \"country\": \"Canada\",\u001b[39m\n    \u001b[32m-       \"latitude\": 43.6532,\u001b[39m\n    \u001b[32m-       \"longitude\": -79.3832,\u001b[39m\n    \u001b[32m-     },\u001b[39m\n    \u001b[32m-     \"success\": false,\u001b[39m\n    \u001b[32m-     \"timestamp\": \"2023-06-01T11:00:00Z\",\u001b[39m\n    \u001b[32m-     \"userAgent\": \"Chrome/91.0\",\u001b[39m\n    \u001b[32m-     \"username\": \"user2\",\u001b[39m\n    \u001b[32m-   },\u001b[39m\n    \u001b[32m- ]\u001b[39m\n    \u001b[31m+ Array []\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 334 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 335 |\u001b[39m     \u001b[90m// Initial data loaded\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 336 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mloginAttempts)\u001b[33m.\u001b[39mtoEqual(mockLoginAttempts)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 337 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 338 |\u001b[39m     \u001b[90m// Call refresh\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 339 |\u001b[39m     act(() \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/admin/security/hooks/__tests__/useLoginAttempts.test.ts\u001b[39m\u001b[0m\u001b[2m:336:42)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museLoginAttempts › applies filters correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32mStringContaining \"/api/admin/security/login-attempts?limit=10\"\u001b[39m, \u001b[32mAnything\u001b[39m\n    Received: \u001b[31m\"/api/security/login-attempts?page=1&pageSize=10\"\u001b[39m\n\n    Number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 375 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 376 |\u001b[39m     \u001b[90m// Verify API call with filters\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 377 |\u001b[39m     expect(global\u001b[33m.\u001b[39mfetch)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 378 |\u001b[39m       expect\u001b[33m.\u001b[39mstringContaining(\u001b[32m'/api/admin/security/login-attempts?limit=10'\u001b[39m)\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 379 |\u001b[39m       expect\u001b[33m.\u001b[39manything()\u001b[22m\n\u001b[2m     \u001b[90m 380 |\u001b[39m     )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/admin/security/hooks/__tests__/useLoginAttempts.test.ts\u001b[39m\u001b[0m\u001b[2m:377:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museLoginAttempts › updates when filter changes - with debug\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a number or bigint\n\n    Received has value: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 461 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'[TEST] Checking initial data'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 462 |\u001b[39m       \u001b[90m// Check that we got at least one login attempt\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 463 |\u001b[39m       expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mloginAttempts\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 464 |\u001b[39m       \u001b[90m// And check that the first item matches what we expect\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 465 |\u001b[39m       expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mloginAttempts[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoEqual(mockLoginAttempts[\u001b[35m0\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 466 |\u001b[39m     } \u001b[36melse\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/admin/security/hooks/__tests__/useLoginAttempts.test.ts\u001b[39m\u001b[0m\u001b[2m:463:51)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 5,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009664269,
        "runtime": 979,
        "slow": false,
        "start": 1744009663290
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useSecurityMetrics.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useSecurityMetrics"
          ],
          "duration": 31,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": {
                  "metrics": {
                    "totalAttempts": 100,
                    "successfulAttempts": 70,
                    "failedAttempts": 30,
                    "blockedAttempts": 10,
                    "captchaRequiredCount": 15,
                    "highRiskIPs": 5
                  }
                },
                "expected": {
                  "totalAttempts": 100,
                  "successfulAttempts": 70,
                  "failedAttempts": 30,
                  "blockedAttempts": 10,
                  "captchaRequiredCount": 15,
                  "highRiskIPs": 5
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 0\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[31m+   \"metrics\": Object {\u001b[39m\n\u001b[2m      \"blockedAttempts\": 10,\u001b[22m\n\u001b[2m      \"captchaRequiredCount\": 15,\u001b[22m\n\u001b[2m      \"failedAttempts\": 30,\u001b[22m\n\u001b[2m      \"highRiskIPs\": 5,\u001b[22m\n\u001b[2m      \"successfulAttempts\": 70,\u001b[22m\n\u001b[2m      \"totalAttempts\": 100,\u001b[22m\n\u001b[31m+   },\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 0\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[31m+   \"metrics\": Object {\u001b[39m\n\u001b[2m      \"blockedAttempts\": 10,\u001b[22m\n\u001b[2m      \"captchaRequiredCount\": 15,\u001b[22m\n\u001b[2m      \"failedAttempts\": 30,\u001b[22m\n\u001b[2m      \"highRiskIPs\": 5,\u001b[22m\n\u001b[2m      \"successfulAttempts\": 70,\u001b[22m\n\u001b[2m      \"totalAttempts\": 100,\u001b[22m\n\u001b[31m+   },\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.toEqual (C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useSecurityMetrics.test.ts:40:36)"
          ],
          "fullName": "useSecurityMetrics fetches security metrics successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "failed",
          "title": "fetches security metrics successfully"
        },
        {
          "ancestorTitles": [
            "useSecurityMetrics"
          ],
          "duration": 5,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mError\u001b[39m\n\nReceived value has no prototype\nReceived value: \u001b[31m\"An error occurred while processing your request (500)\"\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mError\u001b[39m\n\nReceived value has no prototype\nReceived value: \u001b[31m\"An error occurred while processing your request (500)\"\u001b[39m\n    at Object.toBeInstanceOf (C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useSecurityMetrics.test.ts:73:34)"
          ],
          "fullName": "useSecurityMetrics handles API errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "failed",
          "title": "handles API errors"
        },
        {
          "ancestorTitles": [
            "useSecurityMetrics"
          ],
          "duration": 3,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mError\u001b[39m\n\nReceived value has no prototype\nReceived value: \u001b[31m\"Network error\"\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mError\u001b[39m\n\nReceived value has no prototype\nReceived value: \u001b[31m\"Network error\"\u001b[39m\n    at Object.toBeInstanceOf (C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useSecurityMetrics.test.ts:91:34)"
          ],
          "fullName": "useSecurityMetrics handles network errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "failed",
          "title": "handles network errors"
        },
        {
          "ancestorTitles": [
            "useSecurityMetrics"
          ],
          "duration": 3,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": {
                  "metrics": {
                    "totalAttempts": 100,
                    "successfulAttempts": 70,
                    "failedAttempts": 30,
                    "blockedAttempts": 10,
                    "captchaRequiredCount": 15,
                    "highRiskIPs": 5
                  }
                },
                "expected": {
                  "totalAttempts": 100,
                  "successfulAttempts": 70,
                  "failedAttempts": 30,
                  "blockedAttempts": 10,
                  "captchaRequiredCount": 15,
                  "highRiskIPs": 5
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 0\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[31m+   \"metrics\": Object {\u001b[39m\n\u001b[2m      \"blockedAttempts\": 10,\u001b[22m\n\u001b[2m      \"captchaRequiredCount\": 15,\u001b[22m\n\u001b[2m      \"failedAttempts\": 30,\u001b[22m\n\u001b[2m      \"highRiskIPs\": 5,\u001b[22m\n\u001b[2m      \"successfulAttempts\": 70,\u001b[22m\n\u001b[2m      \"totalAttempts\": 100,\u001b[22m\n\u001b[31m+   },\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 0\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[31m+   \"metrics\": Object {\u001b[39m\n\u001b[2m      \"blockedAttempts\": 10,\u001b[22m\n\u001b[2m      \"captchaRequiredCount\": 15,\u001b[22m\n\u001b[2m      \"failedAttempts\": 30,\u001b[22m\n\u001b[2m      \"highRiskIPs\": 5,\u001b[22m\n\u001b[2m      \"successfulAttempts\": 70,\u001b[22m\n\u001b[2m      \"totalAttempts\": 100,\u001b[22m\n\u001b[31m+   },\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.toEqual (C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useSecurityMetrics.test.ts:124:36)"
          ],
          "fullName": "useSecurityMetrics refetches data when refetch is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "refetches data when refetch is called"
        },
        {
          "ancestorTitles": [
            "useSecurityMetrics"
          ],
          "duration": 3,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": {
                  "metrics": {
                    "totalAttempts": 110,
                    "successfulAttempts": 70,
                    "failedAttempts": 30,
                    "blockedAttempts": 10,
                    "captchaRequiredCount": 15,
                    "highRiskIPs": 5
                  }
                },
                "expected": {
                  "totalAttempts": 100
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 8\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"totalAttempts\": 100,\u001b[39m\n\u001b[31m+   \"metrics\": Object {\u001b[39m\n\u001b[31m+     \"blockedAttempts\": 10,\u001b[39m\n\u001b[31m+     \"captchaRequiredCount\": 15,\u001b[39m\n\u001b[31m+     \"failedAttempts\": 30,\u001b[39m\n\u001b[31m+     \"highRiskIPs\": 5,\u001b[39m\n\u001b[31m+     \"successfulAttempts\": 70,\u001b[39m\n\u001b[31m+     \"totalAttempts\": 110,\u001b[39m\n\u001b[31m+   },\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 8\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"totalAttempts\": 100,\u001b[39m\n\u001b[31m+   \"metrics\": Object {\u001b[39m\n\u001b[31m+     \"blockedAttempts\": 10,\u001b[39m\n\u001b[31m+     \"captchaRequiredCount\": 15,\u001b[39m\n\u001b[31m+     \"failedAttempts\": 30,\u001b[39m\n\u001b[31m+     \"highRiskIPs\": 5,\u001b[39m\n\u001b[31m+     \"successfulAttempts\": 70,\u001b[39m\n\u001b[31m+     \"totalAttempts\": 110,\u001b[39m\n\u001b[31m+   },\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.toEqual (C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useSecurityMetrics.test.ts:170:38)"
          ],
          "fullName": "useSecurityMetrics updates when date range changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "updates when date range changes"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museSecurityMetrics › fetches security metrics successfully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 0\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[31m+   \"metrics\": Object {\u001b[39m\n    \u001b[2m      \"blockedAttempts\": 10,\u001b[22m\n    \u001b[2m      \"captchaRequiredCount\": 15,\u001b[22m\n    \u001b[2m      \"failedAttempts\": 30,\u001b[22m\n    \u001b[2m      \"highRiskIPs\": 5,\u001b[22m\n    \u001b[2m      \"successfulAttempts\": 70,\u001b[22m\n    \u001b[2m      \"totalAttempts\": 100,\u001b[22m\n    \u001b[31m+   },\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 38 |\u001b[39m     \u001b[90m// After data is loaded\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 39 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39misLoading)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 40 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmetrics)\u001b[33m.\u001b[39mtoEqual(mockMetrics)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 41 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 43 |\u001b[39m     \u001b[90m// Verify API call\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/admin/security/hooks/__tests__/useSecurityMetrics.test.ts\u001b[39m\u001b[0m\u001b[2m:40:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museSecurityMetrics › handles API errors\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mError\u001b[39m\n\n    Received value has no prototype\n    Received value: \u001b[31m\"An error occurred while processing your request (500)\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 71 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39misLoading)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 72 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmetrics)\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 73 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mError\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 74 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39merror\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Internal server error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 75 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 76 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeInstanceOf (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/admin/security/hooks/__tests__/useSecurityMetrics.test.ts\u001b[39m\u001b[0m\u001b[2m:73:34)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museSecurityMetrics › handles network errors\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeInstanceOf\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mError\u001b[39m\n\n    Received value has no prototype\n    Received value: \u001b[31m\"Network error\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39misLoading)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 90 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmetrics)\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 91 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mError\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 92 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39merror\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Network error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 93 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 94 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeInstanceOf (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/admin/security/hooks/__tests__/useSecurityMetrics.test.ts\u001b[39m\u001b[0m\u001b[2m:91:34)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museSecurityMetrics › refetches data when refetch is called\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 0\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[31m+   \"metrics\": Object {\u001b[39m\n    \u001b[2m      \"blockedAttempts\": 10,\u001b[22m\n    \u001b[2m      \"captchaRequiredCount\": 15,\u001b[22m\n    \u001b[2m      \"failedAttempts\": 30,\u001b[22m\n    \u001b[2m      \"highRiskIPs\": 5,\u001b[22m\n    \u001b[2m      \"successfulAttempts\": 70,\u001b[22m\n    \u001b[2m      \"totalAttempts\": 100,\u001b[22m\n    \u001b[31m+   },\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 122 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 123 |\u001b[39m     \u001b[90m// Initial data loaded\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 124 |\u001b[39m     expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmetrics)\u001b[33m.\u001b[39mtoEqual(mockMetrics)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 125 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 126 |\u001b[39m     \u001b[90m// Call refetch\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 127 |\u001b[39m     act(() \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/admin/security/hooks/__tests__/useSecurityMetrics.test.ts\u001b[39m\u001b[0m\u001b[2m:124:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1museSecurityMetrics › updates when date range changes\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 8\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"totalAttempts\": 100,\u001b[39m\n    \u001b[31m+   \"metrics\": Object {\u001b[39m\n    \u001b[31m+     \"blockedAttempts\": 10,\u001b[39m\n    \u001b[31m+     \"captchaRequiredCount\": 15,\u001b[39m\n    \u001b[31m+     \"failedAttempts\": 30,\u001b[39m\n    \u001b[31m+     \"highRiskIPs\": 5,\u001b[39m\n    \u001b[31m+     \"successfulAttempts\": 70,\u001b[39m\n    \u001b[31m+     \"totalAttempts\": 110,\u001b[39m\n    \u001b[31m+   },\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 |\u001b[39m     \u001b[90m// Initial data should be loaded or still loading\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 169 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39misLoading) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 170 |\u001b[39m       expect(result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmetrics)\u001b[33m.\u001b[39mtoEqual(mockMetrics1)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 171 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 172 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 173 |\u001b[39m     \u001b[90m// Change date range\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/admin/security/hooks/__tests__/useSecurityMetrics.test.ts\u001b[39m\u001b[0m\u001b[2m:170:38)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 3,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009664396,
        "runtime": 1117,
        "slow": false,
        "start": 1744009663279
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\layout\\WithAuth.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "WithAuth Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WithAuth Component initially renders a loading spinner",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "initially renders a loading spinner"
        },
        {
          "ancestorTitles": [
            "WithAuth Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WithAuth Component renders children when authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders children when authenticated"
        },
        {
          "ancestorTitles": [
            "WithAuth Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WithAuth Component redirects to login when not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "redirects to login when not authenticated"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 13,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009664439,
        "runtime": 1134,
        "slow": false,
        "start": 1744009663305
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\SiteForm.container.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteForm Container Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Container Component renders the form with correct title in create mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders the form with correct title in create mode"
        },
        {
          "ancestorTitles": [
            "SiteForm Container Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Container Component renders the form with correct title in edit mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders the form with correct title in edit mode"
        },
        {
          "ancestorTitles": [
            "SiteForm Container Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Container Component displays error message when error occurs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "displays error message when error occurs"
        },
        {
          "ancestorTitles": [
            "SiteForm Container Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Container Component displays success message when operation is successful",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "displays success message when operation is successful"
        },
        {
          "ancestorTitles": [
            "SiteForm Container Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Container Component navigates to next step when Next button is clicked and validation passes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "navigates to next step when Next button is clicked and validation passes"
        },
        {
          "ancestorTitles": [
            "SiteForm Container Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Container Component stays on current step when validation fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "stays on current step when validation fails"
        },
        {
          "ancestorTitles": [
            "SiteForm Container Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Container Component calls createSite on form submission in create mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "calls createSite on form submission in create mode"
        },
        {
          "ancestorTitles": [
            "SiteForm Container Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Container Component calls saveSite on form submission in edit mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "calls saveSite on form submission in edit mode"
        },
        {
          "ancestorTitles": [
            "SiteForm Container Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Container Component passes onSuccess callback to the form",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "passes onSuccess callback to the form"
        },
        {
          "ancestorTitles": [
            "SiteForm Container Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Container Component calls onCancel callback when Cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "calls onCancel callback when Cancel button is clicked"
        },
        {
          "ancestorTitles": [
            "SiteForm Container Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Container Component handles input changes correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "handles input changes correctly"
        },
        {
          "ancestorTitles": [
            "SiteForm Container Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Container Component renders loading state correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders loading state correctly"
        },
        {
          "ancestorTitles": [
            "SiteForm Container Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Container Component shows proper error messages from validation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "shows proper error messages from validation"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 2,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009664448,
        "runtime": 1160,
        "slow": false,
        "start": 1744009663288
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\DomainStep.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "DomainStep Component - Interaction"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainStep Component - Interaction calls onChange when domains are added",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "calls onChange when domains are added"
        },
        {
          "ancestorTitles": [
            "DomainStep Component - Interaction"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainStep Component - Interaction calls onChange when a domain is removed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "calls onChange when a domain is removed"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 8,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009664464,
        "runtime": 1185,
        "slow": false,
        "start": 1744009663279
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryTable.basic.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTable Basic Rendering"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Basic Rendering renders the component with all expected sections",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders the component with all expected sections"
        },
        {
          "ancestorTitles": [
            "CategoryTable Basic Rendering"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Basic Rendering renders the loading state when isLoading is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders the loading state when isLoading is true"
        },
        {
          "ancestorTitles": [
            "CategoryTable Basic Rendering"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Basic Rendering renders the error state when error is present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders the error state when error is present"
        },
        {
          "ancestorTitles": [
            "CategoryTable Basic Rendering"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Basic Rendering renders the empty state when categories array is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders the empty state when categories array is empty"
        },
        {
          "ancestorTitles": [
            "CategoryTable Basic Rendering"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Basic Rendering renders the correct number of category rows",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders the correct number of category rows"
        },
        {
          "ancestorTitles": [
            "CategoryTable Basic Rendering"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Basic Rendering conditionally shows site column depending on mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "conditionally shows site column depending on mode"
        },
        {
          "ancestorTitles": [
            "CategoryTable Basic Rendering"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Basic Rendering uses correct data-testid attributes for accessibility and testing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "uses correct data-testid attributes for accessibility and testing"
        },
        {
          "ancestorTitles": [
            "CategoryTable Basic Rendering"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Basic Rendering contains proper semantic structure for accessibility",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "contains proper semantic structure for accessibility"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 4,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009664475,
        "runtime": 1174,
        "slow": false,
        "start": 1744009663301
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\filtering\\FilterReset.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Filter Reset Functionality"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Filter Reset Functionality should reset a single filter when its specific reset button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should reset a single filter when its specific reset button is clicked"
        },
        {
          "ancestorTitles": [
            "Integration: Filter Reset Functionality"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Filter Reset Functionality should reset all filters when the reset all button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should reset all filters when the reset all button is clicked"
        },
        {
          "ancestorTitles": [
            "Integration: Filter Reset Functionality"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Filter Reset Functionality should update the URL query parameters when filters are reset",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should update the URL query parameters when filters are reset"
        },
        {
          "ancestorTitles": [
            "Integration: Filter Reset Functionality"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Filter Reset Functionality should show reset buttons only when filters are active",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should show reset buttons only when filters are active"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 2,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009664489,
        "runtime": 1172,
        "slow": false,
        "start": 1744009663317
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\Logout.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Logout Functionality"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logout Functionality correctly handles logout action",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "correctly handles logout action"
        },
        {
          "ancestorTitles": [
            "Logout Functionality"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logout Functionality automatically redirects to login when token is missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "automatically redirects to login when token is missing"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009666069,
        "runtime": 1554,
        "slow": false,
        "start": 1744009664515
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\DomainManager.validation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "DomainManager Validation"
          ],
          "duration": 88,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Validation validates required fields and shows error messages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "validates required fields and shows error messages"
        },
        {
          "ancestorTitles": [
            "DomainManager Validation"
          ],
          "duration": 346,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Validation validates domain format with appropriate error messages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "validates domain format with appropriate error messages"
        },
        {
          "ancestorTitles": [
            "DomainManager Validation"
          ],
          "duration": 245,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Validation allows adding valid domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "allows adding valid domains"
        },
        {
          "ancestorTitles": [
            "DomainManager Validation"
          ],
          "duration": 583,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Validation prevents adding duplicate domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "prevents adding duplicate domains"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009666136,
        "runtime": 1634,
        "slow": false,
        "start": 1744009664502
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\SEOSettings.api.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SEOSettings API Interactions"
          ],
          "duration": 1162,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings API Interactions submits form data to API with correct values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "submits form data to API with correct values"
        },
        {
          "ancestorTitles": [
            "SEOSettings API Interactions"
          ],
          "duration": 57,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings API Interactions handles API errors properly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors properly"
        },
        {
          "ancestorTitles": [
            "SEOSettings API Interactions"
          ],
          "duration": 76,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings API Interactions handles network errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors gracefully"
        },
        {
          "ancestorTitles": [
            "SEOSettings API Interactions"
          ],
          "duration": 67,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings API Interactions uses the provided API endpoint",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses the provided API endpoint"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009666239,
        "runtime": 1732,
        "slow": false,
        "start": 1744009664507
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\SiteSettings.validation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteSettings Component - Validation"
          ],
          "duration": 246,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSettings Component - Validation performs form validation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "performs form validation"
        },
        {
          "ancestorTitles": [
            "SiteSettings Component - Validation"
          ],
          "duration": 119,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSettings Component - Validation validates CSS properly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "validates CSS properly"
        },
        {
          "ancestorTitles": [
            "SiteSettings Component - Validation"
          ],
          "duration": 336,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSettings Component - Validation clears validation state when values change",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "clears validation state when values change"
        },
        {
          "ancestorTitles": [
            "SiteSettings Component - Validation"
          ],
          "duration": 754,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSettings Component - Validation validates email format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates email format"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009666545,
        "runtime": 2060,
        "slow": false,
        "start": 1744009664485
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoriesMobileView.keyboard.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoriesMobileView Keyboard Accessibility Tests"
          ],
          "duration": 306,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Keyboard Accessibility Tests supports keyboard navigation for action links",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "supports keyboard navigation for action links"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Keyboard Accessibility Tests"
          ],
          "duration": 258,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Keyboard Accessibility Tests maintains keyboard focus order across multiple category cards",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "maintains keyboard focus order across multiple category cards"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Keyboard Accessibility Tests"
          ],
          "duration": 90,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Keyboard Accessibility Tests supports Enter key activation for links",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "supports Enter key activation for links"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Keyboard Accessibility Tests"
          ],
          "duration": 184,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Keyboard Accessibility Tests supports Space key activation for delete buttons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "supports Space key activation for delete buttons"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Keyboard Accessibility Tests"
          ],
          "duration": 510,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Keyboard Accessibility Tests can tab backwards through interactive elements",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "can tab backwards through interactive elements"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Keyboard Accessibility Tests"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Keyboard Accessibility Tests handles keyboard focus with empty category list",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles keyboard focus with empty category list"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Keyboard Accessibility Tests"
          ],
          "duration": 336,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Keyboard Accessibility Tests supports both Enter and Space key activation for buttons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "supports both Enter and Space key activation for buttons"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009666623,
        "runtime": 2158,
        "slow": false,
        "start": 1744009664465
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\SEOSettings.noindex.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SEOSettings Noindex Pages Management"
          ],
          "duration": 695,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Noindex Pages Management allows adding noindex pages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "allows adding noindex pages"
        },
        {
          "ancestorTitles": [
            "SEOSettings Noindex Pages Management"
          ],
          "duration": 292,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Noindex Pages Management validates noindex path must start with /",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates noindex path must start with /"
        },
        {
          "ancestorTitles": [
            "SEOSettings Noindex Pages Management"
          ],
          "duration": 541,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Noindex Pages Management prevents adding duplicate noindex paths",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "prevents adding duplicate noindex paths"
        },
        {
          "ancestorTitles": [
            "SEOSettings Noindex Pages Management"
          ],
          "duration": 77,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Noindex Pages Management allows removing noindex pages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "allows removing noindex pages"
        },
        {
          "ancestorTitles": [
            "SEOSettings Noindex Pages Management"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Noindex Pages Management renders with pre-populated noindex pages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with pre-populated noindex pages"
        },
        {
          "ancestorTitles": [
            "SEOSettings Noindex Pages Management"
          ],
          "duration": 264,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Noindex Pages Management maintains empty input after adding a path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "maintains empty input after adding a path"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/redis/memory-store.ts\u001b[2m:16:10)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/redis/memory-store.test.ts\u001b[39m\u001b[0m\u001b[2m:5:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\redis\\memory-store.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009666835,
        "runtime": 2414,
        "slow": false,
        "start": 1744009664421
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\ZKPLogin.auth.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKPLogin Authentication Flow Tests"
          ],
          "duration": 598,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Authentication Flow Tests generates and submits ZKP proof on form submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "generates and submits ZKP proof on form submission"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Authentication Flow Tests"
          ],
          "duration": 473,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Authentication Flow Tests handles authentication failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles authentication failure"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Authentication Flow Tests"
          ],
          "duration": 463,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Authentication Flow Tests handles network errors during authentication",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors during authentication"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Authentication Flow Tests"
          ],
          "duration": 564,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Authentication Flow Tests shows loading state during authentication",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows loading state during authentication"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/redis/memory-store.ts\u001b[2m:16:10)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/connection-manager.ts\u001b[2m:60:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/client.ts\u001b[2m:36:28)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/index.ts\u001b[2m:9:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis.ts\u001b[2m:7:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/redis-fallback.test.ts\u001b[39m\u001b[0m\u001b[2m:16:16)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\redis-fallback.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009666880,
        "runtime": 2577,
        "slow": false,
        "start": 1744009664303
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\ZKPLogin.validation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKPLogin Validation Tests"
          ],
          "duration": 166,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Validation Tests shows validation errors for empty fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows validation errors for empty fields"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Validation Tests"
          ],
          "duration": 479,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Validation Tests validates username input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "validates username input"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Validation Tests"
          ],
          "duration": 389,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Validation Tests validates password length",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "validates password length"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Validation Tests"
          ],
          "duration": 325,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Validation Tests clears validation errors when input is corrected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "clears validation errors when input is corrected"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Validation Tests"
          ],
          "duration": 796,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Validation Tests handles password validation correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles password validation correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009667389,
        "runtime": 3227,
        "slow": false,
        "start": 1744009664162
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\ZKPLogin.enhanced.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKPLogin Component",
            "Rendering"
          ],
          "duration": 85,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component Rendering renders the login form with proper elements",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the login form with proper elements"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component",
            "Rendering"
          ],
          "duration": 340,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component Rendering shows loading state during authentication",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows loading state during authentication"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component",
            "Authentication"
          ],
          "duration": 457,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component Authentication calls the API with correct parameters on form submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls the API with correct parameters on form submission"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component",
            "Authentication"
          ],
          "duration": 475,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component Authentication redirects to dashboard on successful login",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "redirects to dashboard on successful login"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component",
            "Authentication"
          ],
          "duration": 515,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component Authentication shows error message on authentication failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows error message on authentication failure"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component",
            "Error Handling"
          ],
          "duration": 420,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component Error Handling handles network errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors gracefully"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component",
            "Error Handling"
          ],
          "duration": 462,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component Error Handling handles ZKP generation errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles ZKP generation errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 21,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009667419,
        "runtime": 1326,
        "slow": false,
        "start": 1744009666093
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\DeleteConfirmationModal.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component handles null callbacks gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles null callbacks gracefully"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component renders with different title and item name values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with different title and item name values"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 86,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component supports interaction via Enter key on modal buttons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "supports interaction via Enter key on modal buttons"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component preserves modal structure when handling long item names",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "preserves modal structure when handling long item names"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component renders correctly when open",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correctly when open"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component does not render when closed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not render when closed"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component calls onConfirm when Delete button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onConfirm when Delete button is clicked"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component calls onCancel when Cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel when Cancel button is clicked"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component calls onCancel when backdrop is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel when backdrop is clicked"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component calls onCancel when Escape key is pressed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel when Escape key is pressed"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component does not call onCancel when other keys are pressed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not call onCancel when other keys are pressed"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component properly prevents modal background click propagation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "properly prevents modal background click propagation"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component has proper accessibility attributes and structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 11,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper accessibility attributes and structure"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 74,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component sets focus on cancel button when opened",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "sets focus on cancel button when opened"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 153,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component maintains focus trap within modal when tabbing forward",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "maintains focus trap within modal when tabbing forward"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 167,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component can trigger Cancel button with keyboard",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "can trigger Cancel button with keyboard"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 137,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component can trigger Confirm button with keyboard",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "can trigger Confirm button with keyboard"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 233,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component maintains focus trap within modal when tabbing backward",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "maintains focus trap within modal when tabbing backward"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component handles different keyboard events correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles different keyboard events correctly"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 75,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component restores focus when the modal is closed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "restores focus when the modal is closed"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 151,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component properly manages focus when closed and reopened",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "properly manages focus when closed and reopened"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009667528,
        "runtime": 1370,
        "slow": false,
        "start": 1744009666158
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\zkp-mock-adapter-bcrypt.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "MockZKPAdapter bcrypt implementation",
            "derivePublicKey function"
          ],
          "duration": 167,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MockZKPAdapter bcrypt implementation derivePublicKey function should use bcrypt for hashing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use bcrypt for hashing"
        },
        {
          "ancestorTitles": [
            "MockZKPAdapter bcrypt implementation",
            "derivePublicKey function"
          ],
          "duration": 332,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MockZKPAdapter bcrypt implementation derivePublicKey function should generate different public keys for different passwords",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate different public keys for different passwords"
        },
        {
          "ancestorTitles": [
            "MockZKPAdapter bcrypt implementation",
            "derivePublicKey function"
          ],
          "duration": 360,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MockZKPAdapter bcrypt implementation derivePublicKey function should generate different public keys for different salts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate different public keys for different salts"
        },
        {
          "ancestorTitles": [
            "MockZKPAdapter bcrypt implementation",
            "derivePublicKey function"
          ],
          "duration": 346,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MockZKPAdapter bcrypt implementation derivePublicKey function should be verifiable with bcrypt.compare",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be verifiable with bcrypt.compare"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009667616,
        "runtime": 1355,
        "slow": false,
        "start": 1744009666261
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\zkp-bcrypt.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKP bcrypt implementation",
            "generatePublicKey function"
          ],
          "duration": 166,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP bcrypt implementation generatePublicKey function should use bcrypt for hashing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use bcrypt for hashing"
        },
        {
          "ancestorTitles": [
            "ZKP bcrypt implementation",
            "generatePublicKey function"
          ],
          "duration": 334,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP bcrypt implementation generatePublicKey function should generate different public keys for different passwords",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate different public keys for different passwords"
        },
        {
          "ancestorTitles": [
            "ZKP bcrypt implementation",
            "generatePublicKey function"
          ],
          "duration": 366,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP bcrypt implementation generatePublicKey function should generate different public keys for different salts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate different public keys for different salts"
        },
        {
          "ancestorTitles": [
            "ZKP bcrypt implementation",
            "generatePublicKey function"
          ],
          "duration": 334,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP bcrypt implementation generatePublicKey function should be verifiable with bcrypt.compare",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be verifiable with bcrypt.compare"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009667816,
        "runtime": 408,
        "slow": false,
        "start": 1744009667408
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\cross-cutting\\AuthorizationBoundaries.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Authorization Boundaries between Components"
          ],
          "duration": 39,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Authorization Boundaries between Components should only show edit actions for owned content to editors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should only show edit actions for owned content to editors"
        },
        {
          "ancestorTitles": [
            "Integration: Authorization Boundaries between Components"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Authorization Boundaries between Components should show all edit actions to admin users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should show all edit actions to admin users"
        },
        {
          "ancestorTitles": [
            "Integration: Authorization Boundaries between Components"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Authorization Boundaries between Components should show a message for users without required permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show a message for users without required permissions"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009667980,
        "runtime": 1337,
        "slow": false,
        "start": 1744009666643
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\security\\ReportSuspiciousActivity.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ReportSuspiciousActivity"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ReportSuspiciousActivity renders the form correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the form correctly"
        },
        {
          "ancestorTitles": [
            "ReportSuspiciousActivity"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ReportSuspiciousActivity validates required fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates required fields"
        },
        {
          "ancestorTitles": [
            "ReportSuspiciousActivity"
          ],
          "duration": 29,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ReportSuspiciousActivity submits the form successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "submits the form successfully"
        },
        {
          "ancestorTitles": [
            "ReportSuspiciousActivity"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ReportSuspiciousActivity handles submission errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles submission errors"
        },
        {
          "ancestorTitles": [
            "ReportSuspiciousActivity"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ReportSuspiciousActivity handles server errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles server errors"
        },
        {
          "ancestorTitles": [
            "ReportSuspiciousActivity"
          ],
          "duration": 45,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ReportSuspiciousActivity clears validation errors when fields are edited",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "clears validation errors when fields are edited"
        },
        {
          "ancestorTitles": [
            "ReportSuspiciousActivity"
          ],
          "duration": 1053,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ReportSuspiciousActivity disables the submit button while submitting",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "disables the submit button while submitting"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/components/admin/auth/hooks/useTenantPermission.test.tsx\u001b[39m\u001b[0m\u001b[2m:13:73)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\components\\admin\\auth\\hooks\\useTenantPermission.test.tsx",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009668081,
        "runtime": 1179,
        "slow": false,
        "start": 1744009666902
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoriesMobileView.accessibility.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoriesMobileView Accessibility Tests"
          ],
          "duration": 50,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Accessibility Tests provides proper semantic structure with article elements for each category card",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "provides proper semantic structure with article elements for each category card"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Accessibility Tests"
          ],
          "duration": 365,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Accessibility Tests ensures action buttons are keyboard accessible",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "ensures action buttons are keyboard accessible"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Accessibility Tests"
          ],
          "duration": 514,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Accessibility Tests maintains keyboard focus order across multiple category cards",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 12,
          "retryReasons": [],
          "status": "passed",
          "title": "maintains keyboard focus order across multiple category cards"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Accessibility Tests"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Accessibility Tests handles empty metadata gracefully for accessibility",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty metadata gracefully for accessibility"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Accessibility Tests"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Accessibility Tests handles special characters in category names properly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles special characters in category names properly"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Accessibility Tests"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Accessibility Tests handles edge case of very long category names",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles edge case of very long category names"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Accessibility Tests"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Accessibility Tests preserves parent-child relationships for accessibility and comprehension",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "preserves parent-child relationships for accessibility and comprehension"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Accessibility Tests"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Accessibility Tests ensures site information appears consistently when enabled",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "ensures site information appears consistently when enabled"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Accessibility Tests"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Accessibility Tests handles empty arrays gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty arrays gracefully"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Accessibility Tests"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Accessibility Tests displays action buttons with accessible hover and focus states",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "displays action buttons with accessible hover and focus states"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 13,
      "numPendingTests": 1,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009668174,
        "runtime": 1281,
        "slow": false,
        "start": 1744009666893
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\DomainManager.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component renders in create mode correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "renders in create mode correctly"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component renders in edit mode with initial domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "renders in edit mode with initial domains"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 305,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component allows adding a valid domain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "allows adding a valid domain"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 310,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component shows an error for an invalid domain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "shows an error for an invalid domain"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 297,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component prevents adding duplicate domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "prevents adding duplicate domains"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 46,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component allows removing a domain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "allows removing a domain"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 62,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component calls onCancel callback when cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel callback when cancel button is clicked"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component directly tests useDomains hook submission functionality",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "directly tests useDomains hook submission functionality"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component tests useDomains hook error handling",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "tests useDomains hook error handling"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component tests useDomains hook network error handling",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "tests useDomains hook network error handling"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 58,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component prevents submission when no domains are added",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "prevents submission when no domains are added"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component uses custom API endpoint when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses custom API endpoint when provided"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component tests domain validation with custom validation function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "tests domain validation with custom validation function"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component tests domain handling with empty input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "tests domain handling with empty input"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 19,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009668197,
        "runtime": 1342,
        "slow": false,
        "start": 1744009666855
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\crypto\\zkp-security-measures.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "IP Blocking"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests IP Blocking should block an IP after too many failed login attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should block an IP after too many failed login attempts"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "IP Blocking"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests IP Blocking should not block an IP with few failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should not block an IP with few failed attempts"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "IP Blocking"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests IP Blocking should reset failed attempts after successful login",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset failed attempts after successful login"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "IP Blocking"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests IP Blocking should allow admin users to bypass IP blocking",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow admin users to bypass IP blocking"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "CAPTCHA Verification"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests CAPTCHA Verification should require CAPTCHA after threshold failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should require CAPTCHA after threshold failed attempts"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "CAPTCHA Verification"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests CAPTCHA Verification should not require CAPTCHA with few failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not require CAPTCHA with few failed attempts"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "CAPTCHA Verification"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests CAPTCHA Verification should record failed attempts for CAPTCHA tracking",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should record failed attempts for CAPTCHA tracking"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "CAPTCHA Verification"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests CAPTCHA Verification should reset CAPTCHA requirement after successful verification",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset CAPTCHA requirement after successful verification"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "CAPTCHA Verification"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests CAPTCHA Verification should validate CAPTCHA tokens",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate CAPTCHA tokens"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "Audit Logging"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests Audit Logging should log authentication attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should log authentication attempts"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "Audit Logging"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests Audit Logging should log security events",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log security events"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "Audit Logging"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests Audit Logging should log ZKP verification events",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should log ZKP verification events"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "Progressive Delays"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests Progressive Delays should implement progressive delays for failed login attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should implement progressive delays for failed login attempts"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "Progressive Delays"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests Progressive Delays should reset progressive delays after successful login",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset progressive delays after successful login"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "Integration with ZKP Authentication"
          ],
          "duration": 511,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests Integration with ZKP Authentication should authenticate successfully with valid credentials",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should authenticate successfully with valid credentials"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "Integration with ZKP Authentication"
          ],
          "duration": 514,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests Integration with ZKP Authentication should reject authentication with invalid credentials",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject authentication with invalid credentials"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "Integration with ZKP Authentication"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests Integration with ZKP Authentication should require CAPTCHA after multiple failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should require CAPTCHA after multiple failed attempts"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "Integration with ZKP Authentication"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests Integration with ZKP Authentication should block IP after too many failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should block IP after too many failed attempts"
        },
        {
          "ancestorTitles": [
            "ZKP Authentication Security Measures Tests",
            "Integration with ZKP Authentication"
          ],
          "duration": 111,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Authentication Security Measures Tests Integration with ZKP Authentication should apply progressive delays for failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply progressive delays for failed attempts"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/utils/tenantAccessControl.ts\u001b[2m:31:34)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/guards/PermissionGuard.tsx\u001b[2m:24:30)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/components/admin/auth/guards/__tests__/permission-guard/basic-permissions.test.tsx\u001b[39m\u001b[0m\u001b[2m:12:26)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/components/admin/auth/guards/__tests__/PermissionGuard.test.tsx\u001b[39m\u001b[0m\u001b[2m:8:1)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\guards\\__tests__\\PermissionGuard.test.tsx",
      "testResults": []
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/components/admin/auth/hooks/__tests__/useTenantPermission.test.tsx\u001b[39m\u001b[0m\u001b[2m:13:73)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\hooks\\__tests__\\useTenantPermission.test.tsx",
      "testResults": []
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/utils/tenantAccessControl.ts\u001b[2m:31:34)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/guards/PermissionGuard.tsx\u001b[2m:24:30)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22m\u001b[0m\u001b[36mtests/unit/components/admin/auth/guards/PermissionGuard.test.jsx\u001b[39m\u001b[0m\u001b[2m:8:29)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\components\\admin\\auth\\guards\\PermissionGuard.test.jsx",
      "testResults": []
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/guards/TenantGuard.tsx\u001b[2m:24:73)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/guards/index.ts\u001b[2m:21:61)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/components/admin/auth/guards/__tests__/TenantGuard.test.tsx\u001b[39m\u001b[0m\u001b[2m:13:11)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\guards\\__tests__\\TenantGuard.test.tsx",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 1,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009668466,
        "runtime": 4190,
        "slow": false,
        "start": 1744009664276
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\SiteForm.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component renders in create mode correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "renders in create mode correctly"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component renders in edit mode with initial data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders in edit mode with initial data"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 470,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component navigates to domains step when clicking next",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "navigates to domains step when clicking next"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 57,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component calls onCancel callback when cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel callback when cancel button is clicked"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 70,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component validates required fields when trying to proceed to next step",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates required fields when trying to proceed to next step"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 482,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component validates slug format when trying to proceed to next step",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates slug format when trying to proceed to next step"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 46,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component clears validation errors when fields are changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "clears validation errors when fields are changed"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 1075,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component completes the first step of the multi-step form",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "completes the first step of the multi-step form"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 1477,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m\n\nIgnored nodes: comments, script, style\n\u001b[36m<html>\u001b[39m\n  \u001b[36m<head />\u001b[39m\n  \u001b[36m<body>\u001b[39m\n    \u001b[36m<div>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mclass\u001b[39m=\u001b[32m\"w-full max-w-2xl mx-auto p-6 bg-white rounded shadow\"\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-form\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[36m<h1\u001b[39m\n          \u001b[33mclass\u001b[39m=\u001b[32m\"text-xl font-bold mb-6\"\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"siteForm-header\"\u001b[39m\n          \u001b[33mid\u001b[39m=\u001b[32m\"siteForm-header\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mCreate\u001b[0m\n          \u001b[0m Site\u001b[0m\n        \u001b[36m</h1>\u001b[39m\n        \u001b[36m<nav\u001b[39m\n          \u001b[33maria-label\u001b[39m=\u001b[32m\"Form Steps\"\u001b[39m\n          \u001b[33mclass\u001b[39m=\u001b[32m\"mb-6\"\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-form-steps-navigation\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[36m<ol\u001b[39m\n            \u001b[33mclass\u001b[39m=\u001b[32m\"flex flex-wrap border-b border-gray-200\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<li\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-basic_info\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"\n                  py-3 w-full text-sm font-medium\n                  text-gray-700 hover:text-blue-500\n                \"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-basic_info\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<svg\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"w-4 h-4 text-green-500\"\u001b[39m\n                    \u001b[33mfill\u001b[39m=\u001b[32m\"currentColor\"\u001b[39m\n                    \u001b[33mviewBox\u001b[39m=\u001b[32m\"0 0 20 20\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[36m<path\u001b[39m\n                      \u001b[33mclip-rule\u001b[39m=\u001b[32m\"evenodd\"\u001b[39m\n                      \u001b[33md\u001b[39m=\u001b[32m\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\u001b[39m\n                      \u001b[33mfill-rule\u001b[39m=\u001b[32m\"evenodd\"\u001b[39m\n                    \u001b[36m/>\u001b[39m\n                  \u001b[36m</svg>\u001b[39m\n                \u001b[36m</span>\u001b[39m\n                \u001b[0mBasic Information\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</li>\u001b[39m\n            \u001b[36m<li\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-domains\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33maria-current\u001b[39m=\u001b[32m\"step\"\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"\n                  py-3 w-full text-sm font-medium\n                  text-blue-600 border-b-2 border-blue-600\n                \"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-domains\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<span\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"text-blue-600\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0m2\u001b[0m\n                  \u001b[36m</span>\u001b[39m\n                \u001b[36m</span>\u001b[39m\n                \u001b[0mDomains\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</li>\u001b[39m\n            \u001b[36m<li\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-theme\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"\n                  py-3 w-full text-sm font-medium\n                  text-gray-400\n                \"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-theme\"\u001b[39m\n                \u001b[33mdisabled\u001b[39m=\u001b[32m\"\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<span\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"text-gray-400\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0m3\u001b[0m\n                  \u001b[36m</span>\u001b[39m\n                \u001b[36m</span>\u001b[39m\n                \u001b[0mAppearance\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</li>\u001b[39m\n            \u001b[36m<li\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-seo\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"\n                  py-3 w-full text-sm font-medium\n                  text-gray-400\n                \"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-seo\"\u001b[39m\n                \u001b[33mdisabled\u001b[39m=\u001b[32m\"\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<span\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"text-gray-400\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0m4\u001b[0m\n                  \u001b[36m</span>\u001b[39m\n                \u001b[36m</span>\u001b[39m\n                \u001b[0mSEO\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</li>\u001b[39m\n            \u001b[36m<li\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-preview\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"\n                  py-3 w-full text-sm font-medium\n                  text-gray-400\n                \"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-preview\"\u001b[39m\n                \u001b[33mdisabled\u001b[39m=\u001b[32m\"\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<span\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"text-gray-400\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0m5\u001b[0m\n                  \u001b[36m</span>\u001b[39m\n                \u001b[36m</span>\u001b[39m\n                \u001b[0mPreview\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</li>\u001b[39m\n          \u001b[36m</ol>\u001b[39m\n        \u001b[36m</nav>\u001b[39m\n        \u001b[36m<form\u001b[39m\n          \u001b[33maria-labelledby\u001b[39m=\u001b[32m\"siteForm-header\"\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"siteForm-form\"\u001b[39m\n          \u001b[33mrole\u001b[39m=\u001b[32m\"form\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mclass\u001b[39m=\u001b[32m\"mb-6\"\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-content\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<div\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"domain-step\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<h2>\u001b[39m\n                \u001b[0mDomain Configuration\u001b[0m\n              \u001b[36m</h2>\u001b[39m\n              \u001b[36m<div>\u001b[39m\n                \u001b[0mNo domains configured\u001b[0m\n              \u001b[36m</div>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"add-domain-button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mAdd Domain\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</div>\u001b[39m\n          \u001b[36m</div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mclass\u001b[39m=\u001b[32m\"flex justify-between mt-8\"\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"form-actions\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<div\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"flex justify-start\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded focus:outline-none focus:ring-2\"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"form-back-button\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m← Back\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</div>\u001b[39m\n            \u001b[36m<div\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"flex justify-end space-x-3\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-4 py-2 bg-gray-200 hover:bg-gray-300 rounded focus:outline-none focus:ring-2\"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"cancel-button\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mCancel\u001b[0m\n              \u001b[36m</button>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded focus:outline-none focus:ring-2 disabled:opacity-50\"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"next-button\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mNext →\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</div>\u001b[39m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</form>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</div>\u001b[39m\n  \u001b[36m</body>\u001b[39m\n\u001b[36m</html>\u001b[39m\n    at toHaveBeenCalled (C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\SiteForm.test.tsx:297:30)\n    at runWithExpensiveErrorDiagnosticsDisabled (C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\config.js:47:12)\n    at checkCallback (C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\wait-for.js:124:77)\n    at checkRealTimersCallback (C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\wait-for.js:118:16)\n    at Timeout.task [as _onTimeout] (C:\\Users\\T\\directorymonster\\node_modules\\jsdom\\lib\\jsdom\\browser\\Window.js:520:19)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"
          ],
          "fullName": "SiteForm Component calls onSuccess callback when form submission succeeds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "calls onSuccess callback when form submission succeeds"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSiteForm Component › calls onSuccess callback when form submission succeeds\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\n    Expected number of calls: >= \u001b[32m1\u001b[39m\n    Received number of calls:    \u001b[31m0\u001b[39m\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mclass\u001b[39m=\u001b[32m\"w-full max-w-2xl mx-auto p-6 bg-white rounded shadow\"\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-form\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<h1\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"text-xl font-bold mb-6\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"siteForm-header\"\u001b[39m\n              \u001b[33mid\u001b[39m=\u001b[32m\"siteForm-header\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[0mCreate\u001b[0m\n              \u001b[0m Site\u001b[0m\n            \u001b[36m</h1>\u001b[39m\n            \u001b[36m<nav\u001b[39m\n              \u001b[33maria-label\u001b[39m=\u001b[32m\"Form Steps\"\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"mb-6\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-form-steps-navigation\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<ol\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"flex flex-wrap border-b border-gray-200\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<li\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n                  \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-basic_info\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"\n                      py-3 w-full text-sm font-medium\n                      text-gray-700 hover:text-blue-500\n                    \"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-basic_info\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[36m<span\u001b[39m\n                      \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                    \u001b[36m>\u001b[39m\n                      \u001b[36m<svg\u001b[39m\n                        \u001b[33mclass\u001b[39m=\u001b[32m\"w-4 h-4 text-green-500\"\u001b[39m\n                        \u001b[33mfill\u001b[39m=\u001b[32m\"currentColor\"\u001b[39m\n                        \u001b[33mviewBox\u001b[39m=\u001b[32m\"0 0 20 20\"\u001b[39m\n                      \u001b[36m>\u001b[39m\n                        \u001b[36m<path\u001b[39m\n                          \u001b[33mclip-rule\u001b[39m=\u001b[32m\"evenodd\"\u001b[39m\n                          \u001b[33md\u001b[39m=\u001b[32m\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\u001b[39m\n                          \u001b[33mfill-rule\u001b[39m=\u001b[32m\"evenodd\"\u001b[39m\n                        \u001b[36m/>\u001b[39m\n                      \u001b[36m</svg>\u001b[39m\n                    \u001b[36m</span>\u001b[39m\n                    \u001b[0mBasic Information\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</li>\u001b[39m\n                \u001b[36m<li\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n                  \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-domains\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33maria-current\u001b[39m=\u001b[32m\"step\"\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"\n                      py-3 w-full text-sm font-medium\n                      text-blue-600 border-b-2 border-blue-600\n                    \"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-domains\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[36m<span\u001b[39m\n                      \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                    \u001b[36m>\u001b[39m\n                      \u001b[36m<span\u001b[39m\n                        \u001b[33mclass\u001b[39m=\u001b[32m\"text-blue-600\"\u001b[39m\n                      \u001b[36m>\u001b[39m\n                        \u001b[0m2\u001b[0m\n                      \u001b[36m</span>\u001b[39m\n                    \u001b[36m</span>\u001b[39m\n                    \u001b[0mDomains\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</li>\u001b[39m\n                \u001b[36m<li\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n                  \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-theme\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"\n                      py-3 w-full text-sm font-medium\n                      text-gray-400\n                    \"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-theme\"\u001b[39m\n                    \u001b[33mdisabled\u001b[39m=\u001b[32m\"\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[36m<span\u001b[39m\n                      \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                    \u001b[36m>\u001b[39m\n                      \u001b[36m<span\u001b[39m\n                        \u001b[33mclass\u001b[39m=\u001b[32m\"text-gray-400\"\u001b[39m\n                      \u001b[36m>\u001b[39m\n                        \u001b[0m3\u001b[0m\n                      \u001b[36m</span>\u001b[39m\n                    \u001b[36m</span>\u001b[39m\n                    \u001b[0mAppearance\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</li>\u001b[39m\n                \u001b[36m<li\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n                  \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-seo\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"\n                      py-3 w-full text-sm font-medium\n                      text-gray-400\n                    \"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-seo\"\u001b[39m\n                    \u001b[33mdisabled\u001b[39m=\u001b[32m\"\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[36m<span\u001b[39m\n                      \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                    \u001b[36m>\u001b[39m\n                      \u001b[36m<span\u001b[39m\n                        \u001b[33mclass\u001b[39m=\u001b[32m\"text-gray-400\"\u001b[39m\n                      \u001b[36m>\u001b[39m\n                        \u001b[0m4\u001b[0m\n                      \u001b[36m</span>\u001b[39m\n                    \u001b[36m</span>\u001b[39m\n                    \u001b[0mSEO\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</li>\u001b[39m\n                \u001b[36m<li\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n                  \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-preview\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"\n                      py-3 w-full text-sm font-medium\n                      text-gray-400\n                    \"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-preview\"\u001b[39m\n                    \u001b[33mdisabled\u001b[39m=\u001b[32m\"\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[36m<span\u001b[39m\n                      \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                    \u001b[36m>\u001b[39m\n                      \u001b[36m<span\u001b[39m\n                        \u001b[33mclass\u001b[39m=\u001b[32m\"text-gray-400\"\u001b[39m\n                      \u001b[36m>\u001b[39m\n                        \u001b[0m5\u001b[0m\n                      \u001b[36m</span>\u001b[39m\n                    \u001b[36m</span>\u001b[39m\n                    \u001b[0mPreview\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</li>\u001b[39m\n              \u001b[36m</ol>\u001b[39m\n            \u001b[36m</nav>\u001b[39m\n            \u001b[36m<form\u001b[39m\n              \u001b[33maria-labelledby\u001b[39m=\u001b[32m\"siteForm-header\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"siteForm-form\"\u001b[39m\n              \u001b[33mrole\u001b[39m=\u001b[32m\"form\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<div\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"mb-6\"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-content\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<div\u001b[39m\n                  \u001b[33mdata-testid\u001b[39m=\u001b[32m\"domain-step\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<h2>\u001b[39m\n                    \u001b[0mDomain Configuration\u001b[0m\n                  \u001b[36m</h2>\u001b[39m\n                  \u001b[36m<div>\u001b[39m\n                    \u001b[0mNo domains configured\u001b[0m\n                  \u001b[36m</div>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"add-domain-button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0mAdd Domain\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</div>\u001b[39m\n              \u001b[36m</div>\u001b[39m\n              \u001b[36m<div\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"flex justify-between mt-8\"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"form-actions\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<div\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"flex justify-start\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded focus:outline-none focus:ring-2\"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"form-back-button\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0m← Back\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</div>\u001b[39m\n                \u001b[36m<div\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"flex justify-end space-x-3\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"px-4 py-2 bg-gray-200 hover:bg-gray-300 rounded focus:outline-none focus:ring-2\"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"cancel-button\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0mCancel\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded focus:outline-none focus:ring-2 disabled:opacity-50\"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"next-button\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0mNext →\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</div>\u001b[39m\n              \u001b[36m</div>\u001b[39m\n            \u001b[36m</form>\u001b[39m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 295 |\u001b[39m     \u001b[90m// Verify createSite was called\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 296 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 297 |\u001b[39m       expect(mockCreateSite)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 298 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 299 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 300 |\u001b[39m     \u001b[90m// Verify callback was called with response data\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toHaveBeenCalled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/admin/sites/SiteForm.test.tsx\u001b[39m\u001b[0m\u001b[2m:297:30)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat runWithExpensiveErrorDiagnosticsDisabled (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:47:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat checkCallback (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/wait-for.js\u001b[2m:124:77)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat checkRealTimersCallback (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/wait-for.js\u001b[2m:118:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Timeout.task [as _onTimeout] (\u001b[22m\u001b[2mnode_modules/jsdom/lib/jsdom/browser/Window.js\u001b[2m:520:19)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009668532,
        "runtime": 1085,
        "slow": false,
        "start": 1744009667447
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\SiteForm.accessibility.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteForm Accessibility"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Accessibility has proper form field labels associated with inputs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper form field labels associated with inputs"
        },
        {
          "ancestorTitles": [
            "SiteForm Accessibility"
          ],
          "duration": 92,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Accessibility supports keyboard navigation through all form fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "supports keyboard navigation through all form fields"
        },
        {
          "ancestorTitles": [
            "SiteForm Accessibility"
          ],
          "duration": 77,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Accessibility maintains focus order that matches visual layout",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "maintains focus order that matches visual layout"
        },
        {
          "ancestorTitles": [
            "SiteForm Accessibility"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Accessibility has appropriate ARIA attributes for form fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "has appropriate ARIA attributes for form fields"
        },
        {
          "ancestorTitles": [
            "SiteForm Accessibility"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Accessibility announces validation errors to screen readers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "announces validation errors to screen readers"
        },
        {
          "ancestorTitles": [
            "SiteForm Accessibility"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Accessibility provides clear focus indication on all interactive elements",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "provides clear focus indication on all interactive elements"
        },
        {
          "ancestorTitles": [
            "SiteForm Accessibility"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Accessibility uses semantic HTML elements appropriate for form structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "uses semantic HTML elements appropriate for form structure"
        },
        {
          "ancestorTitles": [
            "SiteForm Accessibility"
          ],
          "duration": 253,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Accessibility supports form navigation via keyboard",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "supports form navigation via keyboard"
        },
        {
          "ancestorTitles": [
            "SiteForm Accessibility"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Accessibility ensures form elements are properly accessible",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "ensures form elements are properly accessible"
        },
        {
          "ancestorTitles": [
            "SiteForm Accessibility"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Accessibility uses appropriate button types for form actions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "uses appropriate button types for form actions"
        },
        {
          "ancestorTitles": [
            "SiteForm Accessibility"
          ],
          "duration": 476,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Accessibility properly manages focus when navigating between form steps",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "properly manages focus when navigating between form steps"
        },
        {
          "ancestorTitles": [
            "SiteForm Accessibility"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Accessibility allows navigation via screen reader landmarks",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "allows navigation via screen reader landmarks"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009668621,
        "runtime": 1071,
        "slow": false,
        "start": 1744009667550
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\SiteSettings.api.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteSettings Component - API Interactions"
          ],
          "duration": 677,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSettings Component - API Interactions validates and handles form submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "validates and handles form submission"
        },
        {
          "ancestorTitles": [
            "SiteSettings Component - API Interactions"
          ],
          "duration": 65,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSettings Component - API Interactions handles API errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors"
        },
        {
          "ancestorTitles": [
            "SiteSettings Component - API Interactions"
          ],
          "duration": 170,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSettings Component - API Interactions displays loading state during form submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "displays loading state during form submission"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009668685,
        "runtime": 306,
        "slow": false,
        "start": 1744009668379
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-management\\DomainVerification.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Domain Verification Integration Test"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification Integration Test should render the domain manager with initial domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render the domain manager with initial domains"
        },
        {
          "ancestorTitles": [
            "Domain Verification Integration Test"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification Integration Test should add a new domain and display it",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should add a new domain and display it"
        },
        {
          "ancestorTitles": [
            "Domain Verification Integration Test"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification Integration Test should open the domain setup guide when configure is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should open the domain setup guide when configure is clicked"
        },
        {
          "ancestorTitles": [
            "Domain Verification Integration Test"
          ],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification Integration Test should verify a domain successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify a domain successfully"
        },
        {
          "ancestorTitles": [
            "Domain Verification Integration Test"
          ],
          "duration": 34,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification Integration Test should handle domain verification failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle domain verification failure"
        },
        {
          "ancestorTitles": [
            "Domain Verification Integration Test"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification Integration Test should copy DNS records to clipboard",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should copy DNS records to clipboard"
        },
        {
          "ancestorTitles": [
            "Domain Verification Integration Test"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification Integration Test should add a new domain successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should add a new domain successfully"
        },
        {
          "ancestorTitles": [
            "Domain Verification Integration Test"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification Integration Test should handle domain validation errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle domain validation errors"
        },
        {
          "ancestorTitles": [
            "Domain Verification Integration Test"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification Integration Test should remove a domain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a domain"
        },
        {
          "ancestorTitles": [
            "Domain Verification Integration Test"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification Integration Test should switch between different provider tabs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should switch between different provider tabs"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009668697,
        "runtime": 4340,
        "slow": false,
        "start": 1744009664357
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\PasswordReset.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Password Reset Form"
          ],
          "duration": 60,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Password Reset Form renders the request reset form correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the request reset form correctly"
        },
        {
          "ancestorTitles": [
            "Password Reset Form"
          ],
          "duration": 383,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Password Reset Form validates email input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates email input"
        },
        {
          "ancestorTitles": [
            "Password Reset Form"
          ],
          "duration": 351,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Password Reset Form submits request and shows confirmation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "submits request and shows confirmation"
        },
        {
          "ancestorTitles": [
            "Password Reset Form"
          ],
          "duration": 390,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Password Reset Form handles API errors during request",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors during request"
        },
        {
          "ancestorTitles": [
            "Password Reset Confirmation"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Password Reset Confirmation renders the reset confirmation form correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the reset confirmation form correctly"
        },
        {
          "ancestorTitles": [
            "Password Reset Confirmation"
          ],
          "duration": 924,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Password Reset Confirmation validates password fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates password fields"
        },
        {
          "ancestorTitles": [
            "Password Reset Confirmation"
          ],
          "duration": 818,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Password Reset Confirmation confirms reset and redirects to login",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "confirms reset and redirects to login"
        },
        {
          "ancestorTitles": [
            "Password Reset Confirmation"
          ],
          "duration": 812,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Password Reset Confirmation handles invalid or expired reset tokens",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles invalid or expired reset tokens"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009668714,
        "runtime": 1078,
        "slow": false,
        "start": 1744009667636
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\SiteSettings.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteSettings Component - Basic Rendering"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSettings Component - Basic Rendering renders correctly with default values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correctly with default values"
        },
        {
          "ancestorTitles": [
            "SiteSettings Component - Basic Rendering"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSettings Component - Basic Rendering renders correctly with provided initial data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 11,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correctly with provided initial data"
        },
        {
          "ancestorTitles": [
            "SiteSettings Component - Basic Rendering"
          ],
          "duration": 610,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSettings Component - Basic Rendering allows toggling all boolean settings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 10,
          "retryReasons": [],
          "status": "passed",
          "title": "allows toggling all boolean settings"
        },
        {
          "ancestorTitles": [
            "SiteSettings Component - Basic Rendering"
          ],
          "duration": 266,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSettings Component - Basic Rendering allows selecting different themes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "allows selecting different themes"
        },
        {
          "ancestorTitles": [
            "SiteSettings Component - Basic Rendering"
          ],
          "duration": 60,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSettings Component - Basic Rendering calls cancel callback when cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls cancel callback when cancel button is clicked"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009668884,
        "runtime": 420,
        "slow": false,
        "start": 1744009668464
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\security\\UserActivityTracker.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "UserActivityTracker"
          ],
          "duration": 25,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserActivityTracker renders the component correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the component correctly"
        },
        {
          "ancestorTitles": [
            "UserActivityTracker"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserActivityTracker fetches user activities when a userId is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches user activities when a userId is provided"
        },
        {
          "ancestorTitles": [
            "UserActivityTracker"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserActivityTracker handles search correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles search correctly"
        },
        {
          "ancestorTitles": [
            "UserActivityTracker"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserActivityTracker handles date filter correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles date filter correctly"
        },
        {
          "ancestorTitles": [
            "UserActivityTracker"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserActivityTracker handles load more correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles load more correctly"
        },
        {
          "ancestorTitles": [
            "UserActivityTracker"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserActivityTracker handles error state correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles error state correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009668905,
        "runtime": 906,
        "slow": false,
        "start": 1744009667999
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\ZKPLogin.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKPLogin Interaction Tests"
          ],
          "duration": 494,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Interaction Tests updates field values when user types",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "updates field values when user types"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Interaction Tests"
          ],
          "duration": 108,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Interaction Tests toggles remember me checkbox when clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "toggles remember me checkbox when clicked"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Interaction Tests"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Interaction Tests has a password input with type password",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "has a password input with type password"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Interaction Tests"
          ],
          "duration": 57,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Interaction Tests navigates to forgot password page when forgot password button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "navigates to forgot password page when forgot password button is clicked"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Interaction Tests"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Interaction Tests has a remember me checkbox",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "has a remember me checkbox"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669008,
        "runtime": 297,
        "slow": false,
        "start": 1744009668711
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\__tests__\\LoginAttemptsTable.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable renders login attempts table with correct columns",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "renders login attempts table with correct columns"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable displays login attempt data correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "displays login attempt data correctly"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable shows loading state when data is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows loading state when data is loading"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable shows error state when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows error state when there is an error"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable loads more data when \"Load More\" button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "loads more data when \"Load More\" button is clicked"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable applies filters correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies filters correctly"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable allows blocking an IP address",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "allows blocking an IP address"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669033,
        "runtime": 299,
        "slow": false,
        "start": 1744009668734
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\roles\\acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/roles/global ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/roles/global ACL Protection should use withSecureTenantPermission with role:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with role:read"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/roles/global ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/roles/global ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/roles/global ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/roles/global ACL Protection should use withSecureTenantPermission with role:create",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with role:create"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/roles/global ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/roles/global ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669052,
        "runtime": 805,
        "slow": false,
        "start": 1744009668247
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\hooks\\useCategories.init.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useCategories Hook - Initialization & State Management"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Initialization & State Management should initialize with provided categories data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 15,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize with provided categories data"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Initialization & State Management"
          ],
          "duration": 112,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Initialization & State Management should initialize with loading state and fetch categories when no initial data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize with loading state and fetch categories when no initial data"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Initialization & State Management"
          ],
          "duration": 111,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Initialization & State Management should fetch site-specific categories when siteSlug is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch site-specific categories when siteSlug is provided"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Initialization & State Management"
          ],
          "duration": 107,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Initialization & State Management should handle fetch errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle fetch errors gracefully"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Initialization & State Management"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Initialization & State Management should refetch categories when fetchCategories is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should refetch categories when fetchCategories is called"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Initialization & State Management"
          ],
          "duration": 106,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Initialization & State Management should fetch sites for multi-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch sites for multi-site mode"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Initialization & State Management"
          ],
          "duration": 109,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Initialization & State Management should not fetch sites when in single-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not fetch sites when in single-site mode"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Initialization & State Management"
          ],
          "duration": 106,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Initialization & State Management should handle sites fetch errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle sites fetch errors gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669071,
        "runtime": 419,
        "slow": false,
        "start": 1744009668652
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\__tests__\\ReportSuspiciousActivity.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ReportSuspiciousActivity"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ReportSuspiciousActivity renders the report form with all fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the report form with all fields"
        },
        {
          "ancestorTitles": [
            "ReportSuspiciousActivity"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ReportSuspiciousActivity validates required fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates required fields"
        },
        {
          "ancestorTitles": [
            "ReportSuspiciousActivity"
          ],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ReportSuspiciousActivity submits the form with valid data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "submits the form with valid data"
        },
        {
          "ancestorTitles": [
            "ReportSuspiciousActivity"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ReportSuspiciousActivity handles API errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors"
        },
        {
          "ancestorTitles": [
            "ReportSuspiciousActivity"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ReportSuspiciousActivity resets form after successful submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "resets form after successful submission"
        },
        {
          "ancestorTitles": [
            "ReportSuspiciousActivity"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ReportSuspiciousActivity displays different activity type options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "displays different activity type options"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669111,
        "runtime": 391,
        "slow": false,
        "start": 1744009668720
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\SiteTableHeader.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteTableHeader Component - Interaction"
          ],
          "duration": 221,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTableHeader Component - Interaction calls onSearchChange when search input changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onSearchChange when search input changes"
        },
        {
          "ancestorTitles": [
            "SiteTableHeader Component - Interaction"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTableHeader Component - Interaction has a create button with the correct href",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "has a create button with the correct href"
        },
        {
          "ancestorTitles": [
            "SiteTableHeader Component - Interaction"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTableHeader Component - Interaction allows custom create path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "allows custom create path"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669124,
        "runtime": 745,
        "slow": false,
        "start": 1744009668379
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\end-to-end\\page-rendering.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Page Rendering Tests"
          ],
          "duration": 69,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Page Rendering Tests should render homepage with site-specific content",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 12,
          "retryReasons": [],
          "status": "passed",
          "title": "should render homepage with site-specific content"
        },
        {
          "ancestorTitles": [
            "Page Rendering Tests"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Page Rendering Tests should maintain site isolation in rendered pages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should maintain site isolation in rendered pages"
        },
        {
          "ancestorTitles": [
            "Page Rendering Tests"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Page Rendering Tests should properly render SEO metadata",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly render SEO metadata"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669268,
        "runtime": 363,
        "slow": false,
        "start": 1744009668905
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\listings\\ListingTable.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component renders loading state initially when no data is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders loading state initially when no data is provided"
        },
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 28,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component renders the table with provided listings data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the table with provided listings data"
        },
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component handles search filtering correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles search filtering correctly"
        },
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component changes sort order when clicking on column headers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "changes sort order when clicking on column headers"
        },
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component displays an empty state when there are no listings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays an empty state when there are no listings"
        },
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component displays an error state when fetch fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays an error state when fetch fails"
        },
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 34,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component shows delete confirmation dialog when delete is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "shows delete confirmation dialog when delete is clicked"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669281,
        "runtime": 355,
        "slow": false,
        "start": 1744009668926
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\__tests__\\SecurityMetrics.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SecurityMetrics"
          ],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityMetrics renders all security metric cards",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "renders all security metric cards"
        },
        {
          "ancestorTitles": [
            "SecurityMetrics"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityMetrics displays correct metric values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "displays correct metric values"
        },
        {
          "ancestorTitles": [
            "SecurityMetrics"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityMetrics shows loading state when data is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows loading state when data is loading"
        },
        {
          "ancestorTitles": [
            "SecurityMetrics"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityMetrics shows error state when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows error state when there is an error"
        },
        {
          "ancestorTitles": [
            "SecurityMetrics"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityMetrics refreshes data when refresh button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "refreshes data when refresh button is clicked"
        },
        {
          "ancestorTitles": [
            "SecurityMetrics"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityMetrics applies date range correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies date range correctly"
        },
        {
          "ancestorTitles": [
            "SecurityMetrics"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityMetrics displays success rate percentage correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays success rate percentage correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669288,
        "runtime": 731,
        "slow": false,
        "start": 1744009668557
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\hooks\\useCategories.api.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useCategories Hook - API Integration"
          ],
          "duration": 81,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - API Integration should fetch categories data from the API on mount",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch categories data from the API on mount"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - API Integration"
          ],
          "duration": 76,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - API Integration should fetch site-specific categories when siteSlug is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch site-specific categories when siteSlug is provided"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - API Integration"
          ],
          "duration": 78,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - API Integration should fetch sites data in multi-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch sites data in multi-site mode"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - API Integration"
          ],
          "duration": 76,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - API Integration should not fetch sites in single-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should not fetch sites in single-site mode"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - API Integration"
          ],
          "duration": 78,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - API Integration should handle API error states correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle API error states correctly"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - API Integration"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - API Integration should use fetchCategories to reload data on demand",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should use fetchCategories to reload data on demand"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - API Integration"
          ],
          "duration": 75,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - API Integration should enrich API data with parent names and child counts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should enrich API data with parent names and child counts"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - API Integration"
          ],
          "duration": 94,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - API Integration should handle multiple API calls properly for categories and sites",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle multiple API calls properly for categories and sites"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - API Integration"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - API Integration should prioritize initial categories over API fetch",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should prioritize initial categories over API fetch"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669293,
        "runtime": 220,
        "slow": false,
        "start": 1744009669073
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\RoleAuthorization.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Role-Based Authorization"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-Based Authorization correctly assigns permissions for admin role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "correctly assigns permissions for admin role"
        },
        {
          "ancestorTitles": [
            "Role-Based Authorization"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-Based Authorization correctly assigns permissions for editor role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "correctly assigns permissions for editor role"
        },
        {
          "ancestorTitles": [
            "Role-Based Authorization"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-Based Authorization correctly assigns permissions for viewer role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "correctly assigns permissions for viewer role"
        },
        {
          "ancestorTitles": [
            "Role-Based Authorization"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-Based Authorization denies access when not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "denies access when not authenticated"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669303,
        "runtime": 815,
        "slow": false,
        "start": 1744009668488
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\hooks\\useAuth.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook initializes with correct default state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "initializes with correct default state"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 82,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook checks authentication status on mount",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "checks authentication status on mount"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 77,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook handles authentication failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles authentication failure"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 79,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook handles login success",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "handles login success"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 75,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook handles login failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "handles login failure"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 78,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook handles logout success",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "handles logout success"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 78,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook handles logout failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles logout failure"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 78,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook checks permission correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "checks permission correctly"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 78,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook returns false for permission check when not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false for permission check when not authenticated"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669442,
        "runtime": 409,
        "slow": false,
        "start": 1744009669033
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\globalRoles\\__tests__\\UserAssignment.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "UserAssignment Component"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserAssignment Component renders the component with users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the component with users"
        },
        {
          "ancestorTitles": [
            "UserAssignment Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserAssignment Component shows tenant selection modal when removing a role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "shows tenant selection modal when removing a role"
        },
        {
          "ancestorTitles": [
            "UserAssignment Component"
          ],
          "duration": 49,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserAssignment Component removes the role when tenant selection is confirmed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "removes the role when tenant selection is confirmed"
        },
        {
          "ancestorTitles": [
            "UserAssignment Component"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserAssignment Component cancels role removal when Cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "cancels role removal when Cancel button is clicked"
        },
        {
          "ancestorTitles": [
            "UserAssignment Component"
          ],
          "duration": 45,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserAssignment Component assigns a role when form is submitted",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "assigns a role when form is submitted"
        },
        {
          "ancestorTitles": [
            "UserAssignment Component"
          ],
          "duration": 35,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserAssignment Component shows error message when role assignment fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows error message when role assignment fails"
        },
        {
          "ancestorTitles": [
            "UserAssignment Component"
          ],
          "duration": 42,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserAssignment Component shows error message when role removal fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows error message when role removal fails"
        },
        {
          "ancestorTitles": [
            "UserAssignment Component"
          ],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserAssignment Component disables removal button when no tenant ID is entered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "disables removal button when no tenant ID is entered"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 2,
      "numPassingTests": 6,
      "numPendingTests": 3,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669455,
        "runtime": 325,
        "slow": false,
        "start": 1744009669130
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\performance\\concurrent-operations.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Parallel Reads"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Parallel Reads should handle parallel listing requests efficiently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should handle parallel listing requests efficiently"
        },
        {
          "ancestorTitles": [
            "Parallel Reads"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Parallel Reads should handle mixed read operations in parallel",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should handle mixed read operations in parallel"
        },
        {
          "ancestorTitles": [
            "Parallel Reads"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Parallel Reads should maintain consistent response structure during parallel reads",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should maintain consistent response structure during parallel reads"
        },
        {
          "ancestorTitles": [
            "Simultaneous Writes"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Simultaneous Writes should handle parallel listing creation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle parallel listing creation"
        },
        {
          "ancestorTitles": [
            "Simultaneous Writes"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Simultaneous Writes should prevent duplicate slug creation during concurrent writes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should prevent duplicate slug creation during concurrent writes"
        },
        {
          "ancestorTitles": [
            "Race Conditions"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Race Conditions should handle concurrent updates to the same listing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle concurrent updates to the same listing"
        },
        {
          "ancestorTitles": [
            "Race Conditions"
          ],
          "duration": 45,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Race Conditions should use transactions to maintain data consistency during race conditions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should use transactions to maintain data consistency during race conditions"
        },
        {
          "ancestorTitles": [
            "Transaction Isolation"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Transaction Isolation should maintain atomicity during listing creation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should maintain atomicity during listing creation"
        },
        {
          "ancestorTitles": [
            "Transaction Isolation"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 201,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\integration\\performance\\concurrent-operations\\transaction-isolation.test.ts:264:31)"
          ],
          "fullName": "Transaction Isolation should maintain consistency during complex operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should maintain consistency during complex operations"
        },
        {
          "ancestorTitles": [
            "Transaction Isolation"
          ],
          "duration": 2,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 201,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\integration\\performance\\concurrent-operations\\transaction-isolation.test.ts:442:32)"
          ],
          "fullName": "Transaction Isolation should maintain isolation between tenant data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should maintain isolation between tenant data"
        },
        {
          "ancestorTitles": [
            "Concurrent Operations"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrent Operations should successfully initialize test environment",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should successfully initialize test environment"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTransaction Isolation › should maintain consistency during complex operations\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m201\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 262 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 263 |\u001b[39m       \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createListing(request\u001b[33m,\u001b[39m { params\u001b[33m:\u001b[39m { siteSlug\u001b[33m:\u001b[39m site\u001b[33m.\u001b[39mslug } })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 264 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 265 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 266 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 267 |\u001b[39m     \u001b[90m// Now, delete some of the listings and check for consistency\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/performance/concurrent-operations/transaction-isolation.test.ts\u001b[39m\u001b[0m\u001b[2m:264:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTransaction Isolation › should maintain isolation between tenant data\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m201\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 440 |\u001b[39m       \u001b[36mconst\u001b[39m response2 \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createListing(request2\u001b[33m,\u001b[39m { params\u001b[33m:\u001b[39m { siteSlug\u001b[33m:\u001b[39m site2\u001b[33m.\u001b[39mslug } })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 441 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 442 |\u001b[39m       expect(response1\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 443 |\u001b[39m       expect(response2\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 444 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 445 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/performance/concurrent-operations/transaction-isolation.test.ts\u001b[39m\u001b[0m\u001b[2m:442:32)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/utils/tenantAccessControl.ts\u001b[2m:32:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/guards/TenantGuard.tsx\u001b[2m:25:30)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22m\u001b[0m\u001b[36mtests/unit/components/admin/auth/guards/TenantGuard.test.jsx\u001b[39m\u001b[0m\u001b[2m:8:25)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\components\\admin\\auth\\guards\\TenantGuard.test.jsx",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669597,
        "runtime": 6306,
        "slow": true,
        "start": 1744009663291
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\SEOSettings.validation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SEOSettings Validation"
          ],
          "duration": 1085,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Validation validates SEO title length (max 60 chars)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates SEO title length (max 60 chars)"
        },
        {
          "ancestorTitles": [
            "SEOSettings Validation"
          ],
          "duration": 2494,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Validation validates SEO description length (max 160 chars)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates SEO description length (max 160 chars)"
        },
        {
          "ancestorTitles": [
            "SEOSettings Validation"
          ],
          "duration": 291,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Validation validates Twitter site handle format (must start with @)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates Twitter site handle format (must start with @)"
        },
        {
          "ancestorTitles": [
            "SEOSettings Validation"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Validation validates structured data JSON format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates structured data JSON format"
        },
        {
          "ancestorTitles": [
            "SEOSettings Validation"
          ],
          "duration": 1256,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Validation clears validation errors when fields are corrected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "clears validation errors when fields are corrected"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/utils/tenantAccessControl.ts\u001b[2m:31:34)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/guards/PermissionGuard.tsx\u001b[2m:24:30)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/components/admin/auth/guards/__tests__/permission-guard/ui-behavior.test.tsx\u001b[39m\u001b[0m\u001b[2m:12:26)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\guards\\__tests__\\permission-guard\\ui-behavior.test.tsx",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 1,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669641,
        "runtime": 6318,
        "slow": true,
        "start": 1744009663323
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\DomainManager.domains.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "DomainManager - Domain Management"
          ],
          "duration": 42,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager - Domain Management renders empty domain list with message when no domains are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders empty domain list with message when no domains are provided"
        },
        {
          "ancestorTitles": [
            "DomainManager - Domain Management"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager - Domain Management renders domain list correctly with initial data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders domain list correctly with initial data"
        },
        {
          "ancestorTitles": [
            "DomainManager - Domain Management"
          ],
          "duration": 340,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager - Domain Management allows adding a new domain with valid format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "allows adding a new domain with valid format"
        },
        {
          "ancestorTitles": [
            "DomainManager - Domain Management"
          ],
          "duration": 1302,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager - Domain Management shows validation error for invalid domain format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 15,
          "retryReasons": [],
          "status": "passed",
          "title": "shows validation error for invalid domain format"
        },
        {
          "ancestorTitles": [
            "DomainManager - Domain Management"
          ],
          "duration": 277,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager - Domain Management prevents adding duplicate domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "prevents adding duplicate domains"
        },
        {
          "ancestorTitles": [
            "DomainManager - Domain Management"
          ],
          "duration": 2025,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager - Domain Management accepts valid domain formats",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 10,
          "retryReasons": [],
          "status": "passed",
          "title": "accepts valid domain formats"
        },
        {
          "ancestorTitles": [
            "DomainManager - Domain Management"
          ],
          "duration": 111,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager - Domain Management allows removing a domain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "allows removing a domain"
        },
        {
          "ancestorTitles": [
            "DomainManager - Domain Management"
          ],
          "duration": 352,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager - Domain Management validates domains on form submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates domains on form submission"
        },
        {
          "ancestorTitles": [
            "DomainManager - Domain Management"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager - Domain Management includes domains in form submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "includes domains in form submission"
        },
        {
          "ancestorTitles": [
            "DomainManager - Domain Management"
          ],
          "duration": 358,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager - Domain Management disables interaction elements during loading state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 10,
          "retryReasons": [],
          "status": "passed",
          "title": "disables interaction elements during loading state"
        },
        {
          "ancestorTitles": [
            "DomainManager - Domain Management"
          ],
          "duration": 76,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager - Domain Management handles API errors during submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors during submission"
        },
        {
          "ancestorTitles": [
            "DomainManager - Domain Management"
          ],
          "duration": 60,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager - Domain Management handles network errors during submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors during submission"
        },
        {
          "ancestorTitles": [
            "DomainManager - Domain Management"
          ],
          "duration": 140,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager - Domain Management clears error message when resubmitting form",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "clears error message when resubmitting form"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669668,
        "runtime": 518,
        "slow": false,
        "start": 1744009669150
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoryTableRow.actions.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Action Buttons and Interactions"
          ],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Action Buttons and Interactions generates correct URLs for view and edit actions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "generates correct URLs for view and edit actions"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Action Buttons and Interactions"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Action Buttons and Interactions generates site-specific URLs when siteSlug is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "generates site-specific URLs when siteSlug is provided"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Action Buttons and Interactions"
          ],
          "duration": 53,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Action Buttons and Interactions calls onDeleteClick when delete button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onDeleteClick when delete button is clicked"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Action Buttons and Interactions"
          ],
          "duration": 46,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Action Buttons and Interactions triggers delete action when Enter key is pressed on delete button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "triggers delete action when Enter key is pressed on delete button"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Action Buttons and Interactions"
          ],
          "duration": 47,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Action Buttons and Interactions triggers delete action when Space key is pressed on delete button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "triggers delete action when Space key is pressed on delete button"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Action Buttons and Interactions"
          ],
          "duration": 78,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Action Buttons and Interactions provides proper keyboard navigation between action buttons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "provides proper keyboard navigation between action buttons"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Action Buttons and Interactions"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Action Buttons and Interactions applies proper visual distinction between action buttons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "applies proper visual distinction between action buttons"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Action Buttons and Interactions"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Action Buttons and Interactions provides hover states for action buttons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "provides hover states for action buttons"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669729,
        "runtime": 427,
        "slow": false,
        "start": 1744009669302
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryTable.deletion.confirmation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTable Deletion - Confirmation"
          ],
          "duration": 109,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Deletion - Confirmation calls confirmDelete when delete button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "calls confirmDelete when delete button is clicked"
        },
        {
          "ancestorTitles": [
            "CategoryTable Deletion - Confirmation"
          ],
          "duration": 54,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Deletion - Confirmation renders the delete confirmation modal correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the delete confirmation modal correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669778,
        "runtime": 313,
        "slow": false,
        "start": 1744009669465
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoryTableRow.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 25,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering renders the category information correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the category information correctly"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering renders with correct semantic HTML structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with correct semantic HTML structure"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering formats dates in a human-readable format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "formats dates in a human-readable format"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering displays site name when showSiteColumn is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays site name when showSiteColumn is true"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering does not display site column when showSiteColumn is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not display site column when showSiteColumn is false"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering handles categories with extremely long names",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles categories with extremely long names"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering applies proper visual styling to the row",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "applies proper visual styling to the row"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 11,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669782,
        "runtime": 720,
        "slow": false,
        "start": 1744009669062
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\auth\\CaptchaWidget.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CaptchaWidget",
            "reCAPTCHA Mode"
          ],
          "duration": 79,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget reCAPTCHA Mode should render the reCAPTCHA widget",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should render the reCAPTCHA widget"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget",
            "reCAPTCHA Mode"
          ],
          "duration": 73,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget reCAPTCHA Mode should call onVerify when the CAPTCHA is verified",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call onVerify when the CAPTCHA is verified"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget",
            "reCAPTCHA Mode"
          ],
          "duration": 77,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget reCAPTCHA Mode should call onExpire when the CAPTCHA expires",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call onExpire when the CAPTCHA expires"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget",
            "reCAPTCHA Mode"
          ],
          "duration": 77,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget reCAPTCHA Mode should call onError when the CAPTCHA encounters an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call onError when the CAPTCHA encounters an error"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget",
            "reCAPTCHA Mode"
          ],
          "duration": 78,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget reCAPTCHA Mode should reset the CAPTCHA when the reset method is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset the CAPTCHA when the reset method is called"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget",
            "reCAPTCHA Mode"
          ],
          "duration": 78,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget reCAPTCHA Mode should execute the CAPTCHA when the execute method is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should execute the CAPTCHA when the execute method is called"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget",
            "Custom CAPTCHA Mode"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget Custom CAPTCHA Mode should render the custom CAPTCHA widget",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should render the custom CAPTCHA widget"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget",
            "Custom CAPTCHA Mode"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget Custom CAPTCHA Mode should verify the custom CAPTCHA when the correct code is entered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify the custom CAPTCHA when the correct code is entered"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget",
            "Custom CAPTCHA Mode"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget Custom CAPTCHA Mode should show an error when an incorrect code is entered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should show an error when an incorrect code is entered"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget",
            "Custom CAPTCHA Mode"
          ],
          "duration": 29,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget Custom CAPTCHA Mode should generate a new code when the reset button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a new code when the reset button is clicked"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget",
            "Custom CAPTCHA Mode"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget Custom CAPTCHA Mode should reset the custom CAPTCHA when the reset method is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset the custom CAPTCHA when the reset method is called"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669844,
        "runtime": 750,
        "slow": false,
        "start": 1744009669094
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryTable.deletion.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTable Deletion"
          ],
          "duration": 100,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Deletion calls confirmDelete when delete button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "calls confirmDelete when delete button is clicked"
        },
        {
          "ancestorTitles": [
            "CategoryTable Deletion"
          ],
          "duration": 48,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Deletion renders the delete confirmation modal correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the delete confirmation modal correctly"
        },
        {
          "ancestorTitles": [
            "CategoryTable Deletion"
          ],
          "duration": 90,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Deletion calls handleDelete when delete is confirmed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "calls handleDelete when delete is confirmed"
        },
        {
          "ancestorTitles": [
            "CategoryTable Deletion"
          ],
          "duration": 95,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Deletion calls cancelDelete when delete is cancelled",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "calls cancelDelete when delete is cancelled"
        },
        {
          "ancestorTitles": [
            "CategoryTable Deletion"
          ],
          "duration": 77,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Deletion closes the modal when escape key is pressed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "closes the modal when escape key is pressed"
        },
        {
          "ancestorTitles": [
            "CategoryTable Deletion"
          ],
          "duration": 93,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Deletion handles deletion of the last item on a page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles deletion of the last item on a page"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669905,
        "runtime": 249,
        "slow": false,
        "start": 1744009669656
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoryTableSortHeader.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTableSortHeader Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSortHeader Component renders the header with correct label",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the header with correct label"
        },
        {
          "ancestorTitles": [
            "CategoryTableSortHeader Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSortHeader Component highlights the header when it is the current sort field",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "highlights the header when it is the current sort field"
        },
        {
          "ancestorTitles": [
            "CategoryTableSortHeader Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSortHeader Component does not highlight the header when it is not the current sort field",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not highlight the header when it is not the current sort field"
        },
        {
          "ancestorTitles": [
            "CategoryTableSortHeader Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSortHeader Component calls onSort with the correct field when clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onSort with the correct field when clicked"
        },
        {
          "ancestorTitles": [
            "CategoryTableSortHeader Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSortHeader Component has proper ARIA attributes for accessibility",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper ARIA attributes for accessibility"
        },
        {
          "ancestorTitles": [
            "CategoryTableSortHeader Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSortHeader Component indicates descending sort order in ARIA label when currentSortOrder is desc",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "indicates descending sort order in ARIA label when currentSortOrder is desc"
        },
        {
          "ancestorTitles": [
            "CategoryTableSortHeader Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSortHeader Component does not indicate sort order in ARIA label when it is not the current sort field",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not indicate sort order in ARIA label when it is not the current sort field"
        },
        {
          "ancestorTitles": [
            "CategoryTableSortHeader Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSortHeader Component has accessible focus states",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "has accessible focus states"
        },
        {
          "ancestorTitles": [
            "CategoryTableSortHeader Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSortHeader Component renders with proper semantic structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with proper semantic structure"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669911,
        "runtime": 430,
        "slow": false,
        "start": 1744009669481
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\listings\\ListingTableRow.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ListingTableRow Component"
          ],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableRow Component renders the listing title correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the listing title correctly"
        },
        {
          "ancestorTitles": [
            "ListingTableRow Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableRow Component renders the category name correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the category name correctly"
        },
        {
          "ancestorTitles": [
            "ListingTableRow Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableRow Component shows site column when showSiteColumn is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows site column when showSiteColumn is true"
        },
        {
          "ancestorTitles": [
            "ListingTableRow Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableRow Component hides site column when showSiteColumn is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "hides site column when showSiteColumn is false"
        },
        {
          "ancestorTitles": [
            "ListingTableRow Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableRow Component displays verified status badge when backlinkVerifiedAt is set",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays verified status badge when backlinkVerifiedAt is set"
        },
        {
          "ancestorTitles": [
            "ListingTableRow Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableRow Component displays unverified status badge when backlinkVerifiedAt is not set",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays unverified status badge when backlinkVerifiedAt is not set"
        },
        {
          "ancestorTitles": [
            "ListingTableRow Component"
          ],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableRow Component renders action buttons with correct URLs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders action buttons with correct URLs"
        },
        {
          "ancestorTitles": [
            "ListingTableRow Component"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableRow Component uses site-specific URLs when siteSlug is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses site-specific URLs when siteSlug is provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669920,
        "runtime": 350,
        "slow": false,
        "start": 1744009669570
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\DeleteConfirmationModal.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component - Interaction"
          ],
          "duration": 67,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component - Interaction calls onConfirm when confirm button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onConfirm when confirm button is clicked"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component - Interaction"
          ],
          "duration": 45,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component - Interaction calls onCancel when cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel when cancel button is clicked"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669937,
        "runtime": 625,
        "slow": false,
        "start": 1744009669312
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryTable.deletion.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTable Deletion - Interaction"
          ],
          "duration": 139,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Deletion - Interaction calls handleDelete when delete is confirmed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "calls handleDelete when delete is confirmed"
        },
        {
          "ancestorTitles": [
            "CategoryTable Deletion - Interaction"
          ],
          "duration": 124,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Deletion - Interaction calls cancelDelete when delete is cancelled",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "calls cancelDelete when delete is cancelled"
        },
        {
          "ancestorTitles": [
            "CategoryTable Deletion - Interaction"
          ],
          "duration": 61,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Deletion - Interaction closes the modal when escape key is pressed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "closes the modal when escape key is pressed"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009669953,
        "runtime": 620,
        "slow": false,
        "start": 1744009669333
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryTable.pagination.navigation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTable Pagination - Navigation"
          ],
          "duration": 214,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Pagination - Navigation calls goToPage when pagination controls are clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "calls goToPage when pagination controls are clicked"
        },
        {
          "ancestorTitles": [
            "CategoryTable Pagination - Navigation"
          ],
          "duration": 76,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Pagination - Navigation disables pagination buttons appropriately",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "disables pagination buttons appropriately"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670073,
        "runtime": 144,
        "slow": false,
        "start": 1744009669929
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\layout\\AdminSidebar.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "AdminSidebar Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminSidebar Component renders with all navigation items",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with all navigation items"
        },
        {
          "ancestorTitles": [
            "AdminSidebar Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminSidebar Component highlights the active navigation item",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "highlights the active navigation item"
        },
        {
          "ancestorTitles": [
            "AdminSidebar Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminSidebar Component closes the sidebar when clicking the close button on mobile",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "closes the sidebar when clicking the close button on mobile"
        },
        {
          "ancestorTitles": [
            "AdminSidebar Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminSidebar Component has a closeSidebar function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "has a closeSidebar function"
        },
        {
          "ancestorTitles": [
            "AdminSidebar Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminSidebar Component applies the correct classes when sidebar is closed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "applies the correct classes when sidebar is closed"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670088,
        "runtime": 158,
        "slow": false,
        "start": 1744009669930
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\SiteTablePagination.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteTablePagination Component - Basic Rendering"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTablePagination Component - Basic Rendering renders pagination controls",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders pagination controls"
        },
        {
          "ancestorTitles": [
            "SiteTablePagination Component - Basic Rendering"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTablePagination Component - Basic Rendering disables previous button on first page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "disables previous button on first page"
        },
        {
          "ancestorTitles": [
            "SiteTablePagination Component - Basic Rendering"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTablePagination Component - Basic Rendering disables next button on last page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "disables next button on last page"
        },
        {
          "ancestorTitles": [
            "SiteTablePagination Component - Basic Rendering"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTablePagination Component - Basic Rendering shows correct item range information",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows correct item range information"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 1,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670084,
        "runtime": 310,
        "slow": false,
        "start": 1744009669774
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\user-flows\\error-handling.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "API Error Handling"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "API Error Handling should handle non-existent site gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle non-existent site gracefully"
        },
        {
          "ancestorTitles": [
            "API Error Handling"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 400,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\integration\\user-flows\\error-handling.test.ts:112:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "API Error Handling should handle validation errors when creating a listing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle validation errors when creating a listing"
        },
        {
          "ancestorTitles": [
            "API Error Handling"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "API Error Handling should handle Redis errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors gracefully"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAPI Error Handling › should handle validation errors when creating a listing\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m400\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 110 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 111 |\u001b[39m     \u001b[90m// Verify response is a 400 Bad Request\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 112 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 113 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 114 |\u001b[39m     \u001b[90m// Parse the response\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 115 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/user-flows/error-handling.test.ts\u001b[39m\u001b[0m\u001b[2m:112:29)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670106,
        "runtime": 476,
        "slow": false,
        "start": 1744009669630
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\DeleteConfirmationModal.keyboard.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component - Keyboard Accessibility"
          ],
          "duration": 109,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component - Keyboard Accessibility supports keyboard navigation between buttons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "supports keyboard navigation between buttons"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component - Keyboard Accessibility"
          ],
          "duration": 77,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component - Keyboard Accessibility responds to Enter key on focused buttons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "responds to Enter key on focused buttons"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component - Keyboard Accessibility"
          ],
          "duration": 46,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component - Keyboard Accessibility closes on Escape key press",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "closes on Escape key press"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670160,
        "runtime": 489,
        "slow": false,
        "start": 1744009669671
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\ThemeStep.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ThemeStep Component - Interaction"
          ],
          "duration": 87,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ThemeStep Component - Interaction calls onChange when a theme option is selected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onChange when a theme option is selected"
        },
        {
          "ancestorTitles": [
            "ThemeStep Component - Interaction"
          ],
          "duration": 170,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ThemeStep Component - Interaction calls onChange when custom CSS is edited",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onChange when custom CSS is edited"
        },
        {
          "ancestorTitles": [
            "ThemeStep Component - Interaction"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ThemeStep Component - Interaction renders the theme select correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the theme select correctly"
        },
        {
          "ancestorTitles": [
            "ThemeStep Component - Interaction"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ThemeStep Component - Interaction renders the custom CSS textarea correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the custom CSS textarea correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670178,
        "runtime": 481,
        "slow": false,
        "start": 1744009669697
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\auth\\CaptchaWidget.browser.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CaptchaWidget Browser Tests",
            "reCAPTCHA Mode"
          ],
          "duration": 157,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget Browser Tests reCAPTCHA Mode should render and verify with reCAPTCHA",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should render and verify with reCAPTCHA"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget Browser Tests",
            "reCAPTCHA Mode"
          ],
          "duration": 78,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget Browser Tests reCAPTCHA Mode should handle invisible reCAPTCHA execution",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle invisible reCAPTCHA execution"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget Browser Tests",
            "reCAPTCHA Mode"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget Browser Tests reCAPTCHA Mode should handle script loading error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle script loading error"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget Browser Tests",
            "Custom CAPTCHA Mode"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget Browser Tests Custom CAPTCHA Mode should render the custom CAPTCHA widget",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should render the custom CAPTCHA widget"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget Browser Tests",
            "Custom CAPTCHA Mode"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget Browser Tests Custom CAPTCHA Mode should verify the custom CAPTCHA when the correct code is entered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify the custom CAPTCHA when the correct code is entered"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget Browser Tests",
            "Custom CAPTCHA Mode"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget Browser Tests Custom CAPTCHA Mode should show an error when an incorrect code is entered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should show an error when an incorrect code is entered"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget Browser Tests",
            "Custom CAPTCHA Mode"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget Browser Tests Custom CAPTCHA Mode should generate a new code when the reset button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a new code when the reset button is clicked"
        },
        {
          "ancestorTitles": [
            "CaptchaWidget Browser Tests",
            "Accessibility"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CaptchaWidget Browser Tests Accessibility should have proper ARIA attributes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should have proper ARIA attributes"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670184,
        "runtime": 240,
        "slow": false,
        "start": 1744009669944
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\auth\\ZKPLogin-bcrypt.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKPLogin with bcrypt integration"
          ],
          "duration": 26,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin with bcrypt integration should use generateZKPWithBcrypt instead of generateProof",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should use generateZKPWithBcrypt instead of generateProof"
        },
        {
          "ancestorTitles": [
            "ZKPLogin with bcrypt integration"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin with bcrypt integration should handle successful login",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle successful login"
        },
        {
          "ancestorTitles": [
            "ZKPLogin with bcrypt integration"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin with bcrypt integration should handle login failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle login failure"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670365,
        "runtime": 257,
        "slow": false,
        "start": 1744009670108
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\guards\\__tests__\\permission-guard\\test-wrapper.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "TestWrapper"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TestWrapper should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": [
            "Permission Guard - TestWrapper"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Permission Guard - TestWrapper should render children correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should render children correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670403,
        "runtime": 593,
        "slow": false,
        "start": 1744009669810
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\SiteTablePagination.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteTablePagination Component - Interaction"
          ],
          "duration": 59,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTablePagination Component - Interaction calls onPageChange with next page when next button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onPageChange with next page when next button is clicked"
        },
        {
          "ancestorTitles": [
            "SiteTablePagination Component - Interaction"
          ],
          "duration": 62,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTablePagination Component - Interaction calls onPageChange with previous page when previous button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onPageChange with previous page when previous button is clicked"
        },
        {
          "ancestorTitles": [
            "SiteTablePagination Component - Interaction"
          ],
          "duration": 140,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTablePagination Component - Interaction does not call onPageChange when disabled buttons are clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not call onPageChange when disabled buttons are clicked"
        },
        {
          "ancestorTitles": [
            "SiteTablePagination Component - Interaction"
          ],
          "duration": 62,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTablePagination Component - Interaction calls onPageChange when page buttons are clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onPageChange when page buttons are clicked"
        },
        {
          "ancestorTitles": [
            "SiteTablePagination Component - Interaction"
          ],
          "duration": 77,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTablePagination Component - Interaction calls onPageSizeChange when page size selector is changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onPageSizeChange when page size selector is changed"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670410,
        "runtime": 438,
        "slow": false,
        "start": 1744009669972
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\listing-category\\CategoryFilteringNavigation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Category Filtering and Navigation"
          ],
          "duration": 89,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Category Filtering and Navigation should update URL when navigating through category hierarchy",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "should update URL when navigating through category hierarchy"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670434,
        "runtime": 565,
        "slow": false,
        "start": 1744009669869
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\FormActions.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "FormActions Component - Interaction"
          ],
          "duration": 40,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormActions Component - Interaction calls handleNext when next button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls handleNext when next button is clicked"
        },
        {
          "ancestorTitles": [
            "FormActions Component - Interaction"
          ],
          "duration": 62,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormActions Component - Interaction calls handleBack when back button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls handleBack when back button is clicked"
        },
        {
          "ancestorTitles": [
            "FormActions Component - Interaction"
          ],
          "duration": 48,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormActions Component - Interaction prevents clicking next button when submitting",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "prevents clicking next button when submitting"
        },
        {
          "ancestorTitles": [
            "FormActions Component - Interaction"
          ],
          "duration": 232,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormActions Component - Interaction handles keyboard navigation properly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "handles keyboard navigation properly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670476,
        "runtime": 264,
        "slow": false,
        "start": 1744009670212
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-listing\\EmptySiteListHandling.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Empty Site List Handling"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Empty Site List Handling should handle empty sites list gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle empty sites list gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670480,
        "runtime": 295,
        "slow": false,
        "start": 1744009670185
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\listings\\components\\form\\TextInput.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "TextInput Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextInput Component renders the input with label and value",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the input with label and value"
        },
        {
          "ancestorTitles": [
            "TextInput Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextInput Component calls onChange when input value changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onChange when input value changes"
        },
        {
          "ancestorTitles": [
            "TextInput Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextInput Component displays error message when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays error message when provided"
        },
        {
          "ancestorTitles": [
            "TextInput Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextInput Component marks the field as required when specified",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "marks the field as required when specified"
        },
        {
          "ancestorTitles": [
            "TextInput Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextInput Component disables the input when specified",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "disables the input when specified"
        },
        {
          "ancestorTitles": [
            "TextInput Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextInput Component applies placeholder when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies placeholder when provided"
        },
        {
          "ancestorTitles": [
            "TextInput Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextInput Component applies maxLength when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies maxLength when provided"
        },
        {
          "ancestorTitles": [
            "TextInput Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextInput Component applies correct CSS classes based on error state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "applies correct CSS classes based on error state"
        },
        {
          "ancestorTitles": [
            "TextInput Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextInput Component displays error message with correct ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays error message with correct ID"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670481,
        "runtime": 671,
        "slow": false,
        "start": 1744009669810
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryTable.loading.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTable Loading State"
          ],
          "duration": 37,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Loading State should show loading state initially and then transition to loaded state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state initially and then transition to loaded state"
        },
        {
          "ancestorTitles": [
            "CategoryTable Loading State"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Loading State should handle errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors gracefully"
        },
        {
          "ancestorTitles": [
            "CategoryTable Loading State"
          ],
          "duration": 47,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Loading State should display pagination controls when there are multiple pages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should display pagination controls when there are multiple pages"
        },
        {
          "ancestorTitles": [
            "CategoryTable Loading State"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Loading State should handle category deletion",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle category deletion"
        },
        {
          "ancestorTitles": [
            "CategoryTable Loading State"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Loading State should handle empty state gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle empty state gracefully"
        },
        {
          "ancestorTitles": [
            "CategoryTable Loading State"
          ],
          "duration": 221,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Loading State should filter categories when search term is entered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 10,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter categories when search term is entered"
        },
        {
          "ancestorTitles": [
            "CategoryTable Loading State"
          ],
          "duration": 75,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Loading State should toggle between table and card views",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should toggle between table and card views"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670495,
        "runtime": 399,
        "slow": false,
        "start": 1744009670096
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\tests\\auth-imports.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Auth Component Import Test"
          ],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Auth Component Import Test renders both named and default imports correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders both named and default imports correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670514,
        "runtime": 280,
        "slow": false,
        "start": 1744009670234
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\ThemeStep.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ThemeStep Component - Basic Rendering"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ThemeStep Component - Basic Rendering renders the theme select correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the theme select correctly"
        },
        {
          "ancestorTitles": [
            "ThemeStep Component - Basic Rendering"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ThemeStep Component - Basic Rendering selects the current theme option",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "selects the current theme option"
        },
        {
          "ancestorTitles": [
            "ThemeStep Component - Basic Rendering"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ThemeStep Component - Basic Rendering renders the custom CSS textarea",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the custom CSS textarea"
        },
        {
          "ancestorTitles": [
            "ThemeStep Component - Basic Rendering"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ThemeStep Component - Basic Rendering displays initial values in form fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays initial values in form fields"
        },
        {
          "ancestorTitles": [
            "ThemeStep Component - Basic Rendering"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ThemeStep Component - Basic Rendering displays error message when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays error message when provided"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/utils/tenantAccessControl.ts\u001b[2m:31:34)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/guards/PermissionGuard.tsx\u001b[2m:24:30)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/components/admin/auth/guards/PermissionGuard.test.tsx\u001b[39m\u001b[0m\u001b[2m:18:26)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\components\\admin\\auth\\guards\\PermissionGuard.test.tsx",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670573,
        "runtime": 611,
        "slow": false,
        "start": 1744009669962
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\crypto.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "crypto utility",
            "hashPassword function"
          ],
          "duration": 44,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "crypto utility hashPassword function returns a string with salt and hash",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "returns a string with salt and hash"
        },
        {
          "ancestorTitles": [
            "crypto utility",
            "hashPassword function"
          ],
          "duration": 88,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "crypto utility hashPassword function generates different hashes for the same password",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "generates different hashes for the same password"
        },
        {
          "ancestorTitles": [
            "crypto utility",
            "verifyPassword function"
          ],
          "duration": 122,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "crypto utility verifyPassword function returns true for matching password",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns true for matching password"
        },
        {
          "ancestorTitles": [
            "crypto utility",
            "verifyPassword function"
          ],
          "duration": 100,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "crypto utility verifyPassword function returns false for non-matching password",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false for non-matching password"
        },
        {
          "ancestorTitles": [
            "crypto utility",
            "verifyPassword function"
          ],
          "duration": 156,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "crypto utility verifyPassword function handles empty passwords correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty passwords correctly"
        },
        {
          "ancestorTitles": [
            "crypto utility",
            "generatePasswordResetToken function"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "crypto utility generatePasswordResetToken function generates a 64-character hex string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "generates a 64-character hex string"
        },
        {
          "ancestorTitles": [
            "crypto utility",
            "generatePasswordResetToken function"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "crypto utility generatePasswordResetToken function generates unique tokens",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "generates unique tokens"
        },
        {
          "ancestorTitles": [
            "crypto utility",
            "generateSessionToken function"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "crypto utility generateSessionToken function generates a 96-character hex string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "generates a 96-character hex string"
        },
        {
          "ancestorTitles": [
            "crypto utility",
            "generateSessionToken function"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "crypto utility generateSessionToken function generates unique tokens",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "generates unique tokens"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670673,
        "runtime": 562,
        "slow": false,
        "start": 1744009670111
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\StepNavigation.accessibility.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "StepNavigation Component - Accessibility"
          ],
          "duration": 93,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StepNavigation Component - Accessibility has no accessibility violations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "has no accessibility violations"
        },
        {
          "ancestorTitles": [
            "StepNavigation Component - Accessibility"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StepNavigation Component - Accessibility uses correct ARIA attributes for current step",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses correct ARIA attributes for current step"
        },
        {
          "ancestorTitles": [
            "StepNavigation Component - Accessibility"
          ],
          "duration": 131,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StepNavigation Component - Accessibility provides keyboard navigation support",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "provides keyboard navigation support"
        },
        {
          "ancestorTitles": [
            "StepNavigation Component - Accessibility"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StepNavigation Component - Accessibility indicates completed steps visually",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "indicates completed steps visually"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670801,
        "runtime": 288,
        "slow": false,
        "start": 1744009670513
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-listing\\ActiveSiteFilterDisplay.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ActiveSiteFilterDisplay"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActiveSiteFilterDisplay should display the active site filter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should display the active site filter"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 26,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670815,
        "runtime": 299,
        "slow": false,
        "start": 1744009670516
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\role\\role-service.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "RoleService",
            "createRole"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService createRole should create a new role in Redis",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a new role in Redis"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "updateRole"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService updateRole should update an existing role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should update an existing role"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "updateRole"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService updateRole should throw an error when role not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error when role not found"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "deleteRole"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService deleteRole should delete a role and remove all assignments",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should delete a role and remove all assignments"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "deleteRole"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService deleteRole should return false when role not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when role not found"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getRoleById"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getRoleById should return a role by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a role by ID"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getRoleById"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getRoleById should return null when role not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null when role not found"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getRoleByName"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getRoleByName should return a role by name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a role by name"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getRoleByName"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getRoleByName should return null when role name not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null when role name not found"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getRolesByTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getRolesByTenant should return all roles in a tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all roles in a tenant"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getRolesByTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getRolesByTenant should return empty array when no roles found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return empty array when no roles found"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "assignRoleToUser"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService assignRoleToUser should assign a role to a user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should assign a role to a user"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "assignRoleToUser"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService assignRoleToUser should throw error when role not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw error when role not found"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "removeRoleFromUser"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService removeRoleFromUser should remove a role from a user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a role from a user"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "removeRoleFromUser"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService removeRoleFromUser should remove user from tenant when no roles remain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove user from tenant when no roles remain"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getUserRoles"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getUserRoles should return all roles assigned to a user in a tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all roles assigned to a user in a tenant"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getUserRoles"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getUserRoles should return empty array when user has no roles",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return empty array when user has no roles"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getUserTenants"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getUserTenants should return all tenants a user belongs to",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all tenants a user belongs to"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getUsersWithRole"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getUsersWithRole should return all users with a specific role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all users with a specific role"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getTenantUsers"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getTenantUsers should return all users in a tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all users in a tenant"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "hasPermission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService hasPermission should return true when user has required permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true when user has required permission"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "hasPermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService hasPermission should return false when user does not have required permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when user does not have required permission"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "hasPermission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService hasPermission should return false when user has no roles",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when user has no roles"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getAccessibleResources"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getAccessibleResources should return specific resource IDs when user has resource-specific permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return specific resource IDs when user has resource-specific permissions"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getAccessibleResources"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getAccessibleResources should return [\"*\"] when user has global permission for resource type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return [\"*\"] when user has global permission for resource type"
        },
        {
          "ancestorTitles": [
            "RoleService",
            "getAccessibleResources"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService getAccessibleResources should return empty array when user has no relevant permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return empty array when user has no relevant permissions"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670822,
        "runtime": 423,
        "slow": false,
        "start": 1744009670399
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\SEOSettings.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SEOSettings Component"
          ],
          "duration": 42,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Component renders correctly with default values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correctly with default values"
        },
        {
          "ancestorTitles": [
            "SEOSettings Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Component renders with provided initial data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with provided initial data"
        },
        {
          "ancestorTitles": [
            "SEOSettings Component"
          ],
          "duration": 69,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Component calls onCancel when cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel when cancel button is clicked"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670827,
        "runtime": 296,
        "slow": false,
        "start": 1744009670531
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\steps\\BasicInfoStep.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "BasicInfoStep Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component renders all required fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders all required fields"
        },
        {
          "ancestorTitles": [
            "BasicInfoStep Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component updates form data when fields change",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "updates form data when fields change"
        },
        {
          "ancestorTitles": [
            "BasicInfoStep Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component generates a slug from the site name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "generates a slug from the site name"
        },
        {
          "ancestorTitles": [
            "BasicInfoStep Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component displays validation errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "displays validation errors"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mtests/integration/setup.ts\u001b[2m:41:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/integration/performance/concurrent-operations/race-conditions.test.ts\u001b[39m\u001b[0m\u001b[2m:10:16)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\performance\\concurrent-operations\\race-conditions.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670856,
        "runtime": 302,
        "slow": false,
        "start": 1744009670554
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\notifications\\NotificationContext.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "NotificationProvider"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NotificationProvider should render without crashing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render without crashing"
        },
        {
          "ancestorTitles": [
            "NotificationProvider"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NotificationProvider should add a notification when showNotification is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should add a notification when showNotification is called"
        },
        {
          "ancestorTitles": [
            "NotificationProvider"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NotificationProvider should remove a notification when dismissNotification is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a notification when dismissNotification is called"
        },
        {
          "ancestorTitles": [
            "NotificationProvider"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NotificationProvider should automatically remove a notification after its duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should automatically remove a notification after its duration"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009670900,
        "runtime": 317,
        "slow": false,
        "start": 1744009670583
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\BasicInfoStep.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "BasicInfoStep Component - Basic Rendering"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component - Basic Rendering renders all form fields correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "renders all form fields correctly"
        },
        {
          "ancestorTitles": [
            "BasicInfoStep Component - Basic Rendering"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component - Basic Rendering displays initial values in form fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "displays initial values in form fields"
        },
        {
          "ancestorTitles": [
            "BasicInfoStep Component - Basic Rendering"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component - Basic Rendering shows helper text for form fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows helper text for form fields"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671007,
        "runtime": 568,
        "slow": false,
        "start": 1744009670439
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoriesMobileView.navigation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoriesMobileView Navigation Tests"
          ],
          "duration": 40,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Navigation Tests constructs correct URLs for different site slug scenarios",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "constructs correct URLs for different site slug scenarios"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Navigation Tests"
          ],
          "duration": 134,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Navigation Tests navigates correctly when links are clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "navigates correctly when links are clicked"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Navigation Tests"
          ],
          "duration": 44,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Navigation Tests calls onDeleteClick with the correct category ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onDeleteClick with the correct category ID"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671094,
        "runtime": 575,
        "slow": false,
        "start": 1744009670519
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\listings\\ListingTableHeader.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ListingTableHeader Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableHeader Component renders the header with correct listing count",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the header with correct listing count"
        },
        {
          "ancestorTitles": [
            "ListingTableHeader Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableHeader Component renders the add new listing button with correct href",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the add new listing button with correct href"
        },
        {
          "ancestorTitles": [
            "ListingTableHeader Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableHeader Component uses site-specific URL when siteSlug is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses site-specific URL when siteSlug is provided"
        },
        {
          "ancestorTitles": [
            "ListingTableHeader Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableHeader Component calls setSearchTerm when search input changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls setSearchTerm when search input changes"
        },
        {
          "ancestorTitles": [
            "ListingTableHeader Component"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableHeader Component renders the clear search button when searchTerm has a value",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the clear search button when searchTerm has a value"
        },
        {
          "ancestorTitles": [
            "ListingTableHeader Component"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableHeader Component renders category filter dropdown with correct options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders category filter dropdown with correct options"
        },
        {
          "ancestorTitles": [
            "ListingTableHeader Component"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableHeader Component calls setCategoryFilter when category selection changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls setCategoryFilter when category selection changes"
        },
        {
          "ancestorTitles": [
            "ListingTableHeader Component"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableHeader Component renders site filter dropdown only in multi-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders site filter dropdown only in multi-site mode"
        },
        {
          "ancestorTitles": [
            "ListingTableHeader Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTableHeader Component uses responsive layout for filter controls",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses responsive layout for filter controls"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671253,
        "runtime": 361,
        "slow": false,
        "start": 1744009670892
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\auth\\ZKPLogin.returnUrl.validation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKPLogin with returnUrl validation"
          ],
          "duration": 65,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin with returnUrl validation should redirect to default path when returnUrl is invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to default path when returnUrl is invalid"
        },
        {
          "ancestorTitles": [
            "ZKPLogin with returnUrl validation"
          ],
          "duration": 46,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin with returnUrl validation should redirect to returnUrl when it is valid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to returnUrl when it is valid"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671269,
        "runtime": 403,
        "slow": false,
        "start": 1744009670866
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\__tests__\\SecurityAlerts.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SecurityAlerts"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityAlerts renders all components correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders all components correctly"
        },
        {
          "ancestorTitles": [
            "SecurityAlerts"
          ],
          "duration": 26,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityAlerts fetches alerts when tab changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches alerts when tab changes"
        },
        {
          "ancestorTitles": [
            "SecurityAlerts"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityAlerts updates alert status when acknowledge is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "updates alert status when acknowledge is clicked"
        },
        {
          "ancestorTitles": [
            "SecurityAlerts"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityAlerts handles errors when fetching alerts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles errors when fetching alerts"
        },
        {
          "ancestorTitles": [
            "SecurityAlerts"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityAlerts loads more alerts when load more is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "loads more alerts when load more is clicked"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671274,
        "runtime": 443,
        "slow": false,
        "start": 1744009670831
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\tenants\\acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/tenants ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/tenants ACL Protection should use withSecureTenantPermission with tenant:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with tenant:read"
        },
        {
          "ancestorTitles": [
            "GET /api/tenants ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/tenants ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "POST /api/tenants ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/tenants ACL Protection should use withSecureTenantPermission with tenant:create",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with tenant:create"
        },
        {
          "ancestorTitles": [
            "POST /api/tenants ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/tenants ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "GET /api/tenants/user ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/tenants/user ACL Protection should use withSecureTenantPermission with tenant:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with tenant:read"
        },
        {
          "ancestorTitles": [
            "GET /api/tenants/user ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/tenants/user ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "GET /api/tenants/[id]/sites ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/tenants/[id]/sites ACL Protection should use withSecureTenantPermission with site:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with site:read"
        },
        {
          "ancestorTitles": [
            "GET /api/tenants/[id]/sites ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/tenants/[id]/sites ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671308,
        "runtime": 275,
        "slow": false,
        "start": 1744009671033
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\search\\category-indexer.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryIndexer",
            "indexCategory"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryIndexer indexCategory adds category to main index and term indices",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "adds category to main index and term indices"
        },
        {
          "ancestorTitles": [
            "CategoryIndexer",
            "updateCategory"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryIndexer updateCategory removes old terms and re-indexes category",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "removes old terms and re-indexes category"
        },
        {
          "ancestorTitles": [
            "CategoryIndexer",
            "removeCategory"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryIndexer removeCategory removes category from all indices",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "removes category from all indices"
        },
        {
          "ancestorTitles": [
            "CategoryIndexer",
            "searchCategories"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryIndexer searchCategories returns empty array for empty query",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns empty array for empty query"
        },
        {
          "ancestorTitles": [
            "CategoryIndexer",
            "searchCategories"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryIndexer searchCategories returns empty array for too short query",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns empty array for too short query"
        },
        {
          "ancestorTitles": [
            "CategoryIndexer",
            "searchCategories"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryIndexer searchCategories searches by query terms and returns matching categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "searches by query terms and returns matching categories"
        },
        {
          "ancestorTitles": [
            "CategoryIndexer",
            "searchCategories"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryIndexer searchCategories sorts results by relevance (name match priority)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "sorts results by relevance (name match priority)"
        },
        {
          "ancestorTitles": [
            "CategoryIndexer",
            "searchCategories"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryIndexer searchCategories returns empty array when no matches found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns empty array when no matches found"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671318,
        "runtime": 453,
        "slow": false,
        "start": 1744009670865
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryTable.pagination.settings.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTable Pagination - Settings"
          ],
          "duration": 126,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Pagination - Settings calls setItemsPerPage when items per page selector is changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "calls setItemsPerPage when items per page selector is changed"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 13,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671306,
        "runtime": 692,
        "slow": false,
        "start": 1744009670614
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoryTableRow.accessibility.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Accessibility"
          ],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Accessibility provides proper ARIA attributes for rows",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "provides proper ARIA attributes for rows"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Accessibility"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Accessibility includes ARIA expanded attributes for categories with children",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "includes ARIA expanded attributes for categories with children"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Accessibility"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Accessibility has proper ARIA label for the delete button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper ARIA label for the delete button"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Accessibility"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Accessibility includes proper ARIA label for drag handle button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "includes proper ARIA label for drag handle button"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Accessibility"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Accessibility includes aria-sort attribute on sorted columns",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "includes aria-sort attribute on sorted columns"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Accessibility"
          ],
          "duration": 137,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Accessibility supports keyboard navigation through all interactive elements",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "supports keyboard navigation through all interactive elements"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Accessibility"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Accessibility provides interactive elements with appropriate styling",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "provides interactive elements with appropriate styling"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Accessibility"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Accessibility maintains semantic structure with proper heading levels",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "maintains semantic structure with proper heading levels"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Accessibility"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Accessibility provides visual distinction for parent-child relationships",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "provides visual distinction for parent-child relationships"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Accessibility"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Accessibility has proper text contrast for readability",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper text contrast for readability"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Accessibility"
          ],
          "duration": 76,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Accessibility supports keyboard control for action buttons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "supports keyboard control for action buttons"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Accessibility"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Accessibility provides proper indentation for screen readers via semantics",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "provides proper indentation for screen readers via semantics"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Accessibility"
          ],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Accessibility preserves accessibility when using drag handle for reordering",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "preserves accessibility when using drag handle for reordering"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671334,
        "runtime": 455,
        "slow": false,
        "start": 1744009670879
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-listing\\SiteListingCounts.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Site Listing Counts"
          ],
          "duration": 69,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Listing Counts should display correct listing counts for each site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should display correct listing counts for each site"
        },
        {
          "ancestorTitles": [
            "Integration: Site Listing Counts"
          ],
          "duration": 29,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Listing Counts should handle loading state when counting listings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle loading state when counting listings"
        },
        {
          "ancestorTitles": [
            "Integration: Site Listing Counts"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Listing Counts should handle error state when counting listings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle error state when counting listings"
        },
        {
          "ancestorTitles": [
            "Integration: Site Listing Counts"
          ],
          "duration": 62,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Listing Counts should update listing counts when counts change",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should update listing counts when counts change"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671382,
        "runtime": 669,
        "slow": false,
        "start": 1744009670713
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoriesMobileView.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoriesMobileView Interaction Tests"
          ],
          "duration": 38,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Interaction Tests navigates to the correct URL when view link is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "navigates to the correct URL when view link is clicked"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Interaction Tests"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Interaction Tests navigates to the correct URL when edit link is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "navigates to the correct URL when edit link is clicked"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Interaction Tests"
          ],
          "duration": 56,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Interaction Tests calls onDeleteClick with correct parameters when delete is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onDeleteClick with correct parameters when delete is clicked"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Interaction Tests"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Interaction Tests supports multiple ways to trigger delete action",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "supports multiple ways to trigger delete action"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Interaction Tests"
          ],
          "duration": 116,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Interaction Tests supports multiple delete operations on different items",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "supports multiple delete operations on different items"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Interaction Tests"
          ],
          "duration": 111,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Interaction Tests handles actions on dynamically added categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles actions on dynamically added categories"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 13,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671403,
        "runtime": 537,
        "slow": false,
        "start": 1744009670866
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoryTableError.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTableError Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableError Component renders the error message correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the error message correctly"
        },
        {
          "ancestorTitles": [
            "CategoryTableError Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableError Component calls onRetry function when retry button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onRetry function when retry button is clicked"
        },
        {
          "ancestorTitles": [
            "CategoryTableError Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableError Component handles the case when onRetry is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles the case when onRetry is not provided"
        },
        {
          "ancestorTitles": [
            "CategoryTableError Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableError Component has proper accessibility attributes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper accessibility attributes"
        },
        {
          "ancestorTitles": [
            "CategoryTableError Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableError Component uses appropriate colors for error state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "uses appropriate colors for error state"
        },
        {
          "ancestorTitles": [
            "CategoryTableError Component"
          ],
          "duration": 52,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableError Component supports keyboard interaction with Enter key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "supports keyboard interaction with Enter key"
        },
        {
          "ancestorTitles": [
            "CategoryTableError Component"
          ],
          "duration": 60,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableError Component supports keyboard interaction with Space key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "supports keyboard interaction with Space key"
        },
        {
          "ancestorTitles": [
            "CategoryTableError Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableError Component handles different types of error messages correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "handles different types of error messages correctly"
        },
        {
          "ancestorTitles": [
            "CategoryTableError Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableError Component provides proper focus indication for the retry button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "provides proper focus indication for the retry button"
        },
        {
          "ancestorTitles": [
            "CategoryTableError Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableError Component ignores keydown events that aren't Enter on the retry button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "ignores keydown events that aren't Enter on the retry button"
        },
        {
          "ancestorTitles": [
            "CategoryTableError Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableError Component meets accessibility guidelines for error messages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "meets accessibility guidelines for error messages"
        },
        {
          "ancestorTitles": [
            "CategoryTableError Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableError Component uses proper semantic structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "uses proper semantic structure"
        },
        {
          "ancestorTitles": [
            "CategoryTableError Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableError Component handles onKeyDown for keyboard interaction on the error container",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles onKeyDown for keyboard interaction on the error container"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671449,
        "runtime": 315,
        "slow": false,
        "start": 1744009671134
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\tenant\\__tests__\\SiteSelector.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteSelector"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSelector should not render when tenant has only one site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not render when tenant has only one site"
        },
        {
          "ancestorTitles": [
            "SiteSelector"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSelector should render a dropdown when tenant has multiple sites",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should render a dropdown when tenant has multiple sites"
        },
        {
          "ancestorTitles": [
            "SiteSelector"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSelector should call setCurrentSiteId when a site is selected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call setCurrentSiteId when a site is selected"
        },
        {
          "ancestorTitles": [
            "SiteSelector"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSelector should show loading state when sites are being loaded",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state when sites are being loaded"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671517,
        "runtime": 577,
        "slow": false,
        "start": 1744009670940
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\sites\\DomainSetupGuide.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "DomainSetupGuide"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainSetupGuide renders the domain setup guide with the correct domain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the domain setup guide with the correct domain"
        },
        {
          "ancestorTitles": [
            "DomainSetupGuide"
          ],
          "duration": 97,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainSetupGuide displays the correct verification status badge",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "displays the correct verification status badge"
        },
        {
          "ancestorTitles": [
            "DomainSetupGuide"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainSetupGuide calls onVerify when the verify button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onVerify when the verify button is clicked"
        },
        {
          "ancestorTitles": [
            "DomainSetupGuide"
          ],
          "duration": 35,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainSetupGuide handles copy to clipboard functionality",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles copy to clipboard functionality"
        },
        {
          "ancestorTitles": [
            "DomainSetupGuide"
          ],
          "duration": 29,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainSetupGuide disables the verify button when isVerifying is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "disables the verify button when isVerifying is true"
        },
        {
          "ancestorTitles": [
            "DomainSetupGuide"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainSetupGuide disables the verify button when verification status is verified",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "disables the verify button when verification status is verified"
        },
        {
          "ancestorTitles": [
            "DomainSetupGuide"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainSetupGuide shows DNS records with the correct values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "shows DNS records with the correct values"
        },
        {
          "ancestorTitles": [
            "DomainSetupGuide"
          ],
          "duration": 35,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainSetupGuide renders tabs for different providers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "renders tabs for different providers"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 1,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671634,
        "runtime": 316,
        "slow": false,
        "start": 1744009671318
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\listing-category\\CategorySelectionInListing.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Category Selection in Listing Creation"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Category Selection in Listing Creation should allow selecting a category for a listing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should allow selecting a category for a listing"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671652,
        "runtime": 301,
        "slow": false,
        "start": 1744009671351
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\auth\\verify.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Auth Verification API"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Auth Verification API should reject requests without required fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject requests without required fields"
        },
        {
          "ancestorTitles": [
            "Auth Verification API"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Auth Verification API should reject requests for non-existent users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject requests for non-existent users"
        },
        {
          "ancestorTitles": [
            "Auth Verification API"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Auth Verification API should reject verification for locked users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject verification for locked users"
        },
        {
          "ancestorTitles": [
            "Auth Verification API"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Auth Verification API should reject invalid proofs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject invalid proofs"
        },
        {
          "ancestorTitles": [
            "Auth Verification API"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Auth Verification API should verify valid credentials and return a token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify valid credentials and return a token"
        },
        {
          "ancestorTitles": [
            "Auth Verification API"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Auth Verification API should handle rate limiting for too many failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle rate limiting for too many failed attempts"
        },
        {
          "ancestorTitles": [
            "Auth Verification API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Auth Verification API should implement CSRF protection",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should implement CSRF protection"
        },
        {
          "ancestorTitles": [
            "Auth Verification API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Auth Verification API should handle ZKP verification errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle ZKP verification errors gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671652,
        "runtime": 364,
        "slow": false,
        "start": 1744009671288
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\SiteTable.error.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteTable Component - Error State"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTable Component - Error State displays an error message when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays an error message when there is an error"
        },
        {
          "ancestorTitles": [
            "SiteTable Component - Error State"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTable Component - Error State provides a retry button when error occurs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "provides a retry button when error occurs"
        },
        {
          "ancestorTitles": [
            "SiteTable Component - Error State"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTable Component - Error State does not render any site rows when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not render any site rows when there is an error"
        },
        {
          "ancestorTitles": [
            "SiteTable Component - Error State"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTable Component - Error State still renders the table header component during error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "still renders the table header component during error"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671653,
        "runtime": 291,
        "slow": false,
        "start": 1744009671362
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\test\\TestCard.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "TestCard"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TestCard renders the card with title and content",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the card with title and content"
        },
        {
          "ancestorTitles": [
            "TestCard"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TestCard calls onCardClick when card is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCardClick when card is clicked"
        },
        {
          "ancestorTitles": [
            "TestCard"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TestCard renders the footer when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the footer when provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671742,
        "runtime": 297,
        "slow": false,
        "start": 1744009671445
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-listing\\SiteListingLimits.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Site Listing Limits"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Listing Limits should enforce site-specific listing limits during listing updates",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should enforce site-specific listing limits during listing updates"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671782,
        "runtime": 298,
        "slow": false,
        "start": 1744009671484
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\BasicInfoStep.validation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "BasicInfoStep Component - Validation"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component - Validation displays error message for name field when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays error message for name field when provided"
        },
        {
          "ancestorTitles": [
            "BasicInfoStep Component - Validation"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component - Validation displays error message for slug field when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays error message for slug field when provided"
        },
        {
          "ancestorTitles": [
            "BasicInfoStep Component - Validation"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component - Validation adds error class to input fields with errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "adds error class to input fields with errors"
        },
        {
          "ancestorTitles": [
            "BasicInfoStep Component - Validation"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component - Validation does not show error elements when no errors are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "does not show error elements when no errors are provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671809,
        "runtime": 438,
        "slow": false,
        "start": 1744009671371
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-listing\\CombinedSiteAndCategoryFilter.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Combined Site and Category Filtering"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Combined Site and Category Filtering should support applying both site and category filters together",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should support applying both site and category filters together"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671858,
        "runtime": 480,
        "slow": false,
        "start": 1744009671378
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\TokenRefresh.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Token Refresh Functionality"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Token Refresh Functionality handles token refresh for soon-to-expire tokens",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles token refresh for soon-to-expire tokens"
        },
        {
          "ancestorTitles": [
            "Token Refresh Functionality"
          ],
          "duration": 79,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Token Refresh Functionality handles failed token refresh",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles failed token refresh"
        },
        {
          "ancestorTitles": [
            "Token Refresh Functionality"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Token Refresh Functionality does not attempt refresh for valid tokens",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not attempt refresh for valid tokens"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671859,
        "runtime": 428,
        "slow": false,
        "start": 1744009671431
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\security\\SecurityAlerts.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SecurityAlerts"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityAlerts renders the component correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the component correctly"
        },
        {
          "ancestorTitles": [
            "SecurityAlerts"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityAlerts fetches alerts when tab changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches alerts when tab changes"
        },
        {
          "ancestorTitles": [
            "SecurityAlerts"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityAlerts handles severity filter correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles severity filter correctly"
        },
        {
          "ancestorTitles": [
            "SecurityAlerts"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityAlerts handles date filter correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles date filter correctly"
        },
        {
          "ancestorTitles": [
            "SecurityAlerts"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityAlerts handles updating alert status correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles updating alert status correctly"
        },
        {
          "ancestorTitles": [
            "SecurityAlerts"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityAlerts handles load more correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles load more correctly"
        },
        {
          "ancestorTitles": [
            "SecurityAlerts"
          ],
          "duration": 49,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityAlerts handles error state correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles error state correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009671969,
        "runtime": 295,
        "slow": false,
        "start": 1744009671674
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\__tests__\\SearchBar.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component renders the search form with input and button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the search form with input and button"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component updates search term when user types",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updates search term when user types"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component calls router.push with correct URL when search is submitted",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls router.push with correct URL when search is submitted"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component does not submit search if query is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not submit search if query is empty"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component does not submit search if query contains only whitespace",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not submit search if query contains only whitespace"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component has proper accessibility attributes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper accessibility attributes"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672042,
        "runtime": 694,
        "slow": false,
        "start": 1744009671348
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\SEOStep.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SEOStep Component - Interaction"
          ],
          "duration": 276,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOStep Component - Interaction calls onSEOChange when meta title is updated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onSEOChange when meta title is updated"
        },
        {
          "ancestorTitles": [
            "SEOStep Component - Interaction"
          ],
          "duration": 61,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOStep Component - Interaction calls onSEOChange when canonical URLs checkbox is toggled",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onSEOChange when canonical URLs checkbox is toggled"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672062,
        "runtime": 278,
        "slow": false,
        "start": 1744009671784
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\notifications\\NotificationContext.early.test\\NotificationProvider.early.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "NotificationProvider() NotificationProvider method",
            "Happy Paths"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NotificationProvider() NotificationProvider method Happy Paths should add a notification and display it",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should add a notification and display it"
        },
        {
          "ancestorTitles": [
            "NotificationProvider() NotificationProvider method",
            "Happy Paths"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NotificationProvider() NotificationProvider method Happy Paths should remove a notification after its duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a notification after its duration"
        },
        {
          "ancestorTitles": [
            "NotificationProvider() NotificationProvider method",
            "Edge Cases"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NotificationProvider() NotificationProvider method Edge Cases should handle dismissing a non-existent notification gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle dismissing a non-existent notification gracefully"
        },
        {
          "ancestorTitles": [
            "NotificationProvider() NotificationProvider method",
            "Edge Cases"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NotificationProvider() NotificationProvider method Edge Cases should handle adding a notification with no duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle adding a notification with no duration"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672109,
        "runtime": 401,
        "slow": false,
        "start": 1744009671708
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\listings\\components\\form\\MediaUploadStep.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "MediaUploadStep Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MediaUploadStep Component renders the component with upload area",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the component with upload area"
        },
        {
          "ancestorTitles": [
            "MediaUploadStep Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MediaUploadStep Component displays existing media items",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "displays existing media items"
        },
        {
          "ancestorTitles": [
            "MediaUploadStep Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MediaUploadStep Component displays validation errors when present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays validation errors when present"
        },
        {
          "ancestorTitles": [
            "MediaUploadStep Component"
          ],
          "duration": 36,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MediaUploadStep Component handles file upload",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles file upload"
        },
        {
          "ancestorTitles": [
            "MediaUploadStep Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MediaUploadStep Component removes a media item when remove button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "removes a media item when remove button is clicked"
        },
        {
          "ancestorTitles": [
            "MediaUploadStep Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MediaUploadStep Component sets a media item as primary when set primary button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "sets a media item as primary when set primary button is clicked"
        },
        {
          "ancestorTitles": [
            "MediaUploadStep Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MediaUploadStep Component disables buttons when isSubmitting is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "disables buttons when isSubmitting is true"
        },
        {
          "ancestorTitles": [
            "MediaUploadStep Component"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MediaUploadStep Component handles upload errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles upload errors gracefully"
        },
        {
          "ancestorTitles": [
            "MediaUploadStep Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MediaUploadStep Component handles empty file selection",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty file selection"
        },
        {
          "ancestorTitles": [
            "MediaUploadStep Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MediaUploadStep Component sets first uploaded image as primary when no images exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "sets first uploaded image as primary when no images exist"
        },
        {
          "ancestorTitles": [
            "MediaUploadStep Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MediaUploadStep Component maintains primary image when removing non-primary image",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "maintains primary image when removing non-primary image"
        },
        {
          "ancestorTitles": [
            "MediaUploadStep Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MediaUploadStep Component sets a new primary image when removing the primary image",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "sets a new primary image when removing the primary image"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672137,
        "runtime": 420,
        "slow": false,
        "start": 1744009671717
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-listing\\SiteFilterWithSearch.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Site Filter with Search Term"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Filter with Search Term should allow searching within a site filter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow searching within a site filter"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672182,
        "runtime": 364,
        "slow": false,
        "start": 1744009671818
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\filtering\\CategoryFiltering.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Category Filtering on Listings"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Category Filtering on Listings should filter listings when a category is selected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter listings when a category is selected"
        },
        {
          "ancestorTitles": [
            "Integration: Category Filtering on Listings"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Category Filtering on Listings should display subcategory listings when parent category is selected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should display subcategory listings when parent category is selected"
        },
        {
          "ancestorTitles": [
            "Integration: Category Filtering on Listings"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Category Filtering on Listings should display the active category filter in the UI",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should display the active category filter in the UI"
        },
        {
          "ancestorTitles": [
            "Integration: Category Filtering on Listings"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Category Filtering on Listings should clear category filter when the clear button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should clear category filter when the clear button is clicked"
        },
        {
          "ancestorTitles": [
            "Integration: Category Filtering on Listings"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Category Filtering on Listings should handle the case when there are no listings for a selected category",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle the case when there are no listings for a selected category"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672200,
        "runtime": 489,
        "slow": false,
        "start": 1744009671711
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\StepNavigation.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "StepNavigation Component - Interaction"
          ],
          "duration": 69,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StepNavigation Component - Interaction calls onStepChange when a completed step button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onStepChange when a completed step button is clicked"
        },
        {
          "ancestorTitles": [
            "StepNavigation Component - Interaction"
          ],
          "duration": 61,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StepNavigation Component - Interaction prevents clicking steps that are disabled",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "prevents clicking steps that are disabled"
        },
        {
          "ancestorTitles": [
            "StepNavigation Component - Interaction"
          ],
          "duration": 64,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StepNavigation Component - Interaction allows navigation to completed steps",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "allows navigation to completed steps"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672207,
        "runtime": 310,
        "slow": false,
        "start": 1744009671897
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\security\\SecurityMetrics.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SecurityMetrics"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityMetrics renders the security metrics correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 15,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the security metrics correctly"
        },
        {
          "ancestorTitles": [
            "SecurityMetrics"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityMetrics shows loading state when isLoading is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows loading state when isLoading is true"
        },
        {
          "ancestorTitles": [
            "SecurityMetrics"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityMetrics shows error state when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "shows error state when there is an error"
        },
        {
          "ancestorTitles": [
            "SecurityMetrics"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityMetrics calls refetch when refresh buttons are clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls refetch when refresh buttons are clicked"
        },
        {
          "ancestorTitles": [
            "SecurityMetrics"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityMetrics handles zero values correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles zero values correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/utils/tenantAccessControl.ts\u001b[2m:31:34)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/guards/PermissionGuard.tsx\u001b[2m:24:30)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/components/admin/auth/guards/__tests__/permission-guard/error-handling.test.tsx\u001b[39m\u001b[0m\u001b[2m:12:26)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\guards\\__tests__\\permission-guard\\error-handling.test.tsx",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672292,
        "runtime": 395,
        "slow": false,
        "start": 1744009671897
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\auth\\PasswordResetForm-bcrypt.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "PasswordResetForm with bcrypt integration"
          ],
          "duration": 38,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PasswordResetForm with bcrypt integration should use generateZKPWithBcrypt for password reset confirmation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use generateZKPWithBcrypt for password reset confirmation"
        },
        {
          "ancestorTitles": [
            "PasswordResetForm with bcrypt integration"
          ],
          "duration": 46,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PasswordResetForm with bcrypt integration should handle successful password reset request",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle successful password reset request"
        },
        {
          "ancestorTitles": [
            "PasswordResetForm with bcrypt integration"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PasswordResetForm with bcrypt integration should handle successful password reset confirmation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle successful password reset confirmation"
        },
        {
          "ancestorTitles": [
            "PasswordResetForm with bcrypt integration"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PasswordResetForm with bcrypt integration should handle password reset confirmation failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle password reset confirmation failure"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/site-service.ts\u001b[2m:11:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/app/api/tenants/[id]/sites/route.ts\u001b[2m:13:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/api/tenants/sites.test.ts\u001b[39m\u001b[0m\u001b[2m:9:16)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\tenants\\sites.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672482,
        "runtime": 932,
        "slow": false,
        "start": 1744009671550
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryTable.filtering.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTable Filtering and Search"
          ],
          "duration": 98,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Filtering and Search renders search input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders search input"
        },
        {
          "ancestorTitles": [
            "CategoryTable Filtering and Search"
          ],
          "duration": 60,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Filtering and Search renders parent filter dropdown with correct options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders parent filter dropdown with correct options"
        },
        {
          "ancestorTitles": [
            "CategoryTable Filtering and Search"
          ],
          "duration": 59,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Filtering and Search shows site filter dropdown in multi-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "shows site filter dropdown in multi-site mode"
        },
        {
          "ancestorTitles": [
            "CategoryTable Filtering and Search"
          ],
          "duration": 100,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Filtering and Search hides site filter dropdown in single-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "hides site filter dropdown in single-site mode"
        },
        {
          "ancestorTitles": [
            "CategoryTable Filtering and Search"
          ],
          "duration": 48,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Filtering and Search displays the total number of filtered categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "displays the total number of filtered categories"
        },
        {
          "ancestorTitles": [
            "CategoryTable Filtering and Search"
          ],
          "duration": 52,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Filtering and Search should handle empty state differently for no categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle empty state differently for no categories"
        },
        {
          "ancestorTitles": [
            "CategoryTable Filtering and Search"
          ],
          "duration": 70,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Filtering and Search should display filtered categories with \"test\" in the name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should display filtered categories with \"test\" in the name"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672535,
        "runtime": 453,
        "slow": false,
        "start": 1744009672082
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\search\\SearchForm.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SearchForm Component"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchForm Component renders with default props",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with default props"
        },
        {
          "ancestorTitles": [
            "SearchForm Component"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchForm Component renders with custom props",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with custom props"
        },
        {
          "ancestorTitles": [
            "SearchForm Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchForm Component handles user input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles user input"
        },
        {
          "ancestorTitles": [
            "SearchForm Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchForm Component shows validation error for empty search",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows validation error for empty search"
        },
        {
          "ancestorTitles": [
            "SearchForm Component"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchForm Component shows validation error for short search terms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows validation error for short search terms"
        },
        {
          "ancestorTitles": [
            "SearchForm Component"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchForm Component calls router.push with correct URL for valid search",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls router.push with correct URL for valid search"
        },
        {
          "ancestorTitles": [
            "SearchForm Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchForm Component does not include site ID in search URL (site context from middleware)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not include site ID in search URL (site context from middleware)"
        },
        {
          "ancestorTitles": [
            "SearchForm Component"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchForm Component clears error message when valid search is submitted",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "clears error message when valid search is submitted"
        },
        {
          "ancestorTitles": [
            "SearchForm Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchForm Component has proper accessibility attributes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper accessibility attributes"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672542,
        "runtime": 312,
        "slow": false,
        "start": 1744009672230
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\guards\\__tests__\\permission-guard\\dummy.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "TestWrapper"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TestWrapper should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": [
            "Permission Guard - Dummy Test"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Permission Guard - Dummy Test should render the test wrapper",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render the test wrapper"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672554,
        "runtime": 428,
        "slow": false,
        "start": 1744009672126
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\auth\\FirstUserSetup-bcrypt.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "FirstUserSetup with bcrypt integration"
          ],
          "duration": 39,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FirstUserSetup with bcrypt integration should use generateZKPWithBcrypt instead of sending raw password",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should use generateZKPWithBcrypt instead of sending raw password"
        },
        {
          "ancestorTitles": [
            "FirstUserSetup with bcrypt integration"
          ],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FirstUserSetup with bcrypt integration should handle successful user creation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle successful user creation"
        },
        {
          "ancestorTitles": [
            "FirstUserSetup with bcrypt integration"
          ],
          "duration": 73,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FirstUserSetup with bcrypt integration should handle user creation failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle user creation failure"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 5,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672586,
        "runtime": 405,
        "slow": false,
        "start": 1744009672181
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryTable.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders the loading state when isLoading is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the loading state when isLoading is true"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders the error state when error is present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the error state when error is present"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders the empty state when categories is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the empty state when categories is empty"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders the table with correct columns",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders the table with correct columns"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component shows site column in multi-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "shows site column in multi-site mode"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component hides site column in single-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "hides site column in single-site mode"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders the correct number of category rows",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders the correct number of category rows"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders mobile view for small screens",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders mobile view for small screens"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders pagination with correct info",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders pagination with correct info"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component calls confirmDelete when delete button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "calls confirmDelete when delete button is clicked"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders delete confirmation modal when isDeleteModalOpen is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders delete confirmation modal when isDeleteModalOpen is true"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component calls handleDelete when delete is confirmed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "calls handleDelete when delete is confirmed"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component calls cancelDelete when delete is cancelled",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls cancelDelete when delete is cancelled"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component calls fetchCategories when retry button is clicked in error state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls fetchCategories when retry button is clicked in error state"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672613,
        "runtime": 396,
        "slow": false,
        "start": 1744009672217
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\__tests__\\AuthProvider.token-utils.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "AuthProvider with token-utils"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthProvider with token-utils should use decodeToken utility when checking authentication",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should use decodeToken utility when checking authentication"
        },
        {
          "ancestorTitles": [
            "AuthProvider with token-utils"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthProvider with token-utils should use decodeToken utility when API response has no user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should use decodeToken utility when API response has no user"
        },
        {
          "ancestorTitles": [
            "AuthProvider with token-utils"
          ],
          "duration": 29,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthProvider with token-utils should use decodeToken utility when logging in",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use decodeToken utility when logging in"
        },
        {
          "ancestorTitles": [
            "AuthProvider with token-utils"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthProvider with token-utils should handle decodeToken returning null",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle decodeToken returning null"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672634,
        "runtime": 629,
        "slow": false,
        "start": 1744009672005
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\security\\LoginAttemptsTable.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable renders the login attempts table correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the login attempts table correctly"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable shows loading state when isLoading is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows loading state when isLoading is true"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable shows error state when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows error state when there is an error"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable shows empty state when there are no login attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows empty state when there are no login attempts"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable calls blockIp when the block IP button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls blockIp when the block IP button is clicked"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable does not call blockIp when the user cancels the confirmation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not call blockIp when the user cancels the confirmation"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsTable"
          ],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsTable handles load more functionality",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles load more functionality"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672694,
        "runtime": 458,
        "slow": false,
        "start": 1744009672236
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\dashboard\\ActivityFeed.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component renders activity feed with items correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders activity feed with items correctly"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component calls refresh when refresh button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls refresh when refresh button is clicked"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component calls loadMore when load more button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls loadMore when load more button is clicked"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component does not show the header when showHeader is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not show the header when showHeader is false"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component displays loading state when isLoading is true and no activities are available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays loading state when isLoading is true and no activities are available"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component displays error message when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays error message when there is an error"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component displays empty state when there are no activities",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays empty state when there are no activities"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component does not show load more button when hasMore is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not show load more button when hasMore is false"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component applies custom className when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies custom className when provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 14,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672794,
        "runtime": 9481,
        "slow": true,
        "start": 1744009663313
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\ZKPLogin.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 78,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component renders the login form correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the login form correctly"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 396,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component handles input changes correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles input changes correctly"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 76,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component shows validation errors for empty fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "shows validation errors for empty fields"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 381,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component shows validation error for short password",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "shows validation error for short password"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 552,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component successfully submits the form and generates ZKP",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "successfully submits the form and generates ZKP"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 493,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component shows an error message on authentication failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows an error message on authentication failure"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 535,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component handles network errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors gracefully"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 508,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component handles ZKP generation errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles ZKP generation errors gracefully"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 629,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component shows a spinner while authenticating",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows a spinner while authenticating"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 587,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component properly stores the authentication token after successful login",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "properly stores the authentication token after successful login"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 588,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component handles the \"remember me\" option correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles the \"remember me\" option correctly"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 61,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component supports \"Forgot Password\" functionality",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "supports \"Forgot Password\" functionality"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 574,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component includes appropriate CSRF protection",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "includes appropriate CSRF protection"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 2827,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component implements rate limiting for failed login attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 12,
          "retryReasons": [],
          "status": "passed",
          "title": "implements rate limiting for failed login attempts"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/app/api/middleware/secureTenantContext.ts\u001b[2m:25:61)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/middleware/secure-tenant-context-middleware.test.ts\u001b[39m\u001b[0m\u001b[2m:7:30)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\middleware\\secure-tenant-context-middleware.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672886,
        "runtime": 525,
        "slow": false,
        "start": 1744009672361
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\multitenancy\\cross-site-isolation.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Cross-Site Data Isolation"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Cross-Site Data Isolation should maintain data isolation between sites when retrieving listings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should maintain data isolation between sites when retrieving listings"
        },
        {
          "ancestorTitles": [
            "Cross-Site Data Isolation"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Cross-Site Data Isolation should maintain data isolation between sites when retrieving categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should maintain data isolation between sites when retrieving categories"
        },
        {
          "ancestorTitles": [
            "Cross-Site Data Isolation"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Cross-Site Data Isolation should filter search results by site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter search results by site"
        },
        {
          "ancestorTitles": [
            "Cross-Site Data Isolation"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Cross-Site Data Isolation should resolve site identity correctly based on hostname",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should resolve site identity correctly based on hostname"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672901,
        "runtime": 313,
        "slow": false,
        "start": 1744009672588
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryTable.deletion.edge-cases.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTable Deletion - Edge Cases"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Deletion - Edge Cases handles deletion of the last item on a page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles deletion of the last item on a page"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 5,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672917,
        "runtime": 2474,
        "slow": false,
        "start": 1744009670443
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\TenantSiteContext.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "TenantSiteContext Integration"
          ],
          "duration": 25,
          "failureDetails": [
            {
              "name": "TestingLibraryElementError"
            }
          ],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an element with the text: Tenant 1. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"loading-state\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[0mLoaded\u001b[0m\n      \u001b[36m</div>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"current-tenant\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[0mNo tenant\u001b[0m\n      \u001b[36m</div>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"current-site\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[0mNo site\u001b[0m\n      \u001b[36m</div>\u001b[39m\n      \u001b[36m<select\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"tenant-select\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[36m<option\u001b[39m\n          \u001b[33mvalue\u001b[39m=\u001b[32m\"\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mSelect Tenant\u001b[0m\n        \u001b[36m</option>\u001b[39m\n      \u001b[36m</select>\u001b[39m\n      \u001b[36m<select\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-select\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[36m<option\u001b[39m\n          \u001b[33mvalue\u001b[39m=\u001b[32m\"\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mSelect Site\u001b[0m\n        \u001b[36m</option>\u001b[39m\n      \u001b[36m</select>\u001b[39m\n    \u001b[36m</div>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\config.js:37:19)\n    at C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\query-helpers.js:76:38\n    at C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\query-helpers.js:52:17\n    at C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\query-helpers.js:95:19\n    at Object.getByText (C:\\Users\\T\\directorymonster\\tests\\integration\\TenantSiteContext.test.tsx:155:50)"
          ],
          "fullName": "TenantSiteContext Integration loads tenants on initial render",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "failed",
          "title": "loads tenants on initial render"
        },
        {
          "ancestorTitles": [
            "TenantSiteContext Integration"
          ],
          "duration": 38,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": null,
                "expected": "tenant-1",
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"tenant-1\"\u001b[39m\nReceived: \u001b[31mnull\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"tenant-1\"\u001b[39m\nReceived: \u001b[31mnull\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\integration\\TenantSiteContext.test.tsx:178:57)"
          ],
          "fullName": "TenantSiteContext Integration persists tenant selection to localStorage",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "persists tenant selection to localStorage"
        },
        {
          "ancestorTitles": [
            "TenantSiteContext Integration"
          ],
          "duration": 1036,
          "failureDetails": [
            {
              "name": "TestingLibraryElementError"
            }
          ],
          "failureMessages": [
            "Error: Unable to find an element with the text: Site 1. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"loading-state\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[0mLoaded\u001b[0m\n      \u001b[36m</div>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"current-tenant\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[0mNo tenant\u001b[0m\n      \u001b[36m</div>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"current-site\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[0mNo site\u001b[0m\n      \u001b[36m</div>\u001b[39m\n      \u001b[36m<select\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"tenant-select\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[36m<option\u001b[39m\n          \u001b[33mvalue\u001b[39m=\u001b[32m\"\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mSelect Tenant\u001b[0m\n        \u001b[36m</option>\u001b[39m\n      \u001b[36m</select>\u001b[39m\n      \u001b[36m<select\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-select\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[36m<option\u001b[39m\n          \u001b[33mvalue\u001b[39m=\u001b[32m\"\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mSelect Site\u001b[0m\n        \u001b[36m</option>\u001b[39m\n      \u001b[36m</select>\u001b[39m\n    \u001b[36m</div>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at waitForWrapper (C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\wait-for.js:163:27)\n    at Object.<anonymous> (C:\\Users\\T\\directorymonster\\tests\\integration\\TenantSiteContext.test.tsx:203:18)"
          ],
          "fullName": "TenantSiteContext Integration loads sites when tenant is selected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "loads sites when tenant is selected"
        },
        {
          "ancestorTitles": [
            "TenantSiteContext Integration"
          ],
          "duration": 1036,
          "failureDetails": [
            {
              "name": "TestingLibraryElementError"
            }
          ],
          "failureMessages": [
            "Error: Unable to find an element with the text: Site 1. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"loading-state\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[0mLoaded\u001b[0m\n      \u001b[36m</div>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"current-tenant\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[0mNo tenant\u001b[0m\n      \u001b[36m</div>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"current-site\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[0mNo site\u001b[0m\n      \u001b[36m</div>\u001b[39m\n      \u001b[36m<select\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"tenant-select\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[36m<option\u001b[39m\n          \u001b[33mvalue\u001b[39m=\u001b[32m\"\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mSelect Tenant\u001b[0m\n        \u001b[36m</option>\u001b[39m\n      \u001b[36m</select>\u001b[39m\n      \u001b[36m<select\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-select\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[36m<option\u001b[39m\n          \u001b[33mvalue\u001b[39m=\u001b[32m\"\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mSelect Site\u001b[0m\n        \u001b[36m</option>\u001b[39m\n      \u001b[36m</select>\u001b[39m\n    \u001b[36m</div>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at waitForWrapper (C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\wait-for.js:163:27)\n    at Object.<anonymous> (C:\\Users\\T\\directorymonster\\tests\\integration\\TenantSiteContext.test.tsx:232:18)"
          ],
          "fullName": "TenantSiteContext Integration persists site selection to localStorage",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "persists site selection to localStorage"
        },
        {
          "ancestorTitles": [
            "TenantSiteContext Integration"
          ],
          "duration": 13,
          "failureDetails": [
            {
              "matcherResult": {
                "pass": false,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31melement\u001b[39m\u001b[2m).toHaveTextContent()\u001b[22m\n\nExpected element to have text content:\n\u001b[32m  tenant-2\u001b[39m\nReceived:\n\u001b[31m  No tenant\u001b[39m"
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31melement\u001b[39m\u001b[2m).toHaveTextContent()\u001b[22m\n\nExpected element to have text content:\n\u001b[32m  tenant-2\u001b[39m\nReceived:\n\u001b[31m  No tenant\u001b[39m\n    at Object.toHaveTextContent (C:\\Users\\T\\directorymonster\\tests\\integration\\TenantSiteContext.test.tsx:266:50)"
          ],
          "fullName": "TenantSiteContext Integration restores context from localStorage on page load",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "restores context from localStorage on page load"
        },
        {
          "ancestorTitles": [
            "TenantSiteContext Integration"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSiteContext Integration includes tenant and site context in API requests",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "includes tenant and site context in API requests"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTenantSiteContext Integration › loads tenants on initial render\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an element with the text: Tenant 1. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"loading-state\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mLoaded\u001b[0m\n          \u001b[36m</div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"current-tenant\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mNo tenant\u001b[0m\n          \u001b[36m</div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"current-site\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mNo site\u001b[0m\n          \u001b[36m</div>\u001b[39m\n          \u001b[36m<select\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"tenant-select\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<option\u001b[39m\n              \u001b[33mvalue\u001b[39m=\u001b[32m\"\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[0mSelect Tenant\u001b[0m\n            \u001b[36m</option>\u001b[39m\n          \u001b[36m</select>\u001b[39m\n          \u001b[36m<select\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-select\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<option\u001b[39m\n              \u001b[33mvalue\u001b[39m=\u001b[32m\"\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[0mSelect Site\u001b[0m\n            \u001b[36m</option>\u001b[39m\n          \u001b[36m</select>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 153 |\u001b[39m     \u001b[90m// Verify tenants are displayed in the dropdown\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 154 |\u001b[39m     \u001b[36mconst\u001b[39m tenantSelect \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByTestId(\u001b[32m'tenant-select'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 155 |\u001b[39m     expect(tenantSelect)\u001b[33m.\u001b[39mtoContainElement(screen\u001b[33m.\u001b[39mgetByText(\u001b[32m'Tenant 1'\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 156 |\u001b[39m     expect(tenantSelect)\u001b[33m.\u001b[39mtoContainElement(screen\u001b[33m.\u001b[39mgetByText(\u001b[32m'Tenant 2'\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 158 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getByText (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/TenantSiteContext.test.tsx\u001b[39m\u001b[0m\u001b[2m:155:50)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTenantSiteContext Integration › persists tenant selection to localStorage\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"tenant-1\"\u001b[39m\n    Received: \u001b[31mnull\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 176 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 177 |\u001b[39m     \u001b[90m// Verify tenant ID is saved to localStorage\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 178 |\u001b[39m     expect(localStorageMock\u001b[33m.\u001b[39mgetItem(\u001b[32m'currentTenantId'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m'tenant-1'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 179 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 180 |\u001b[39m     \u001b[90m// Verify current tenant is updated in the UI\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 181 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByTestId(\u001b[32m'current-tenant'\u001b[39m))\u001b[33m.\u001b[39mtoHaveTextContent(\u001b[32m'tenant-1'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/TenantSiteContext.test.tsx\u001b[39m\u001b[0m\u001b[2m:178:57)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTenantSiteContext Integration › loads sites when tenant is selected\u001b[39m\u001b[22m\n\n    Unable to find an element with the text: Site 1. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"loading-state\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mLoaded\u001b[0m\n          \u001b[36m</div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"current-tenant\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mNo tenant\u001b[0m\n          \u001b[36m</div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"current-site\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mNo site\u001b[0m\n          \u001b[36m</div>\u001b[39m\n          \u001b[36m<select\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"tenant-select\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<option\u001b[39m\n              \u001b[33mvalue\u001b[39m=\u001b[32m\"\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[0mSelect Tenant\u001b[0m\n            \u001b[36m</option>\u001b[39m\n          \u001b[36m</select>\u001b[39m\n          \u001b[36m<select\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-select\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<option\u001b[39m\n              \u001b[33mvalue\u001b[39m=\u001b[32m\"\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[0mSelect Site\u001b[0m\n            \u001b[36m</option>\u001b[39m\n          \u001b[36m</select>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 201 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 202 |\u001b[39m     \u001b[90m// Wait for sites to load\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 203 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 204 |\u001b[39m       expect(screen\u001b[33m.\u001b[39mgetByText(\u001b[32m'Site 1'\u001b[39m))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 205 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 206 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat waitForWrapper (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/wait-for.js\u001b[2m:163:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/TenantSiteContext.test.tsx\u001b[39m\u001b[0m\u001b[2m:203:18)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTenantSiteContext Integration › persists site selection to localStorage\u001b[39m\u001b[22m\n\n    Unable to find an element with the text: Site 1. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"loading-state\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mLoaded\u001b[0m\n          \u001b[36m</div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"current-tenant\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mNo tenant\u001b[0m\n          \u001b[36m</div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"current-site\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mNo site\u001b[0m\n          \u001b[36m</div>\u001b[39m\n          \u001b[36m<select\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"tenant-select\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<option\u001b[39m\n              \u001b[33mvalue\u001b[39m=\u001b[32m\"\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[0mSelect Tenant\u001b[0m\n            \u001b[36m</option>\u001b[39m\n          \u001b[36m</select>\u001b[39m\n          \u001b[36m<select\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-select\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<option\u001b[39m\n              \u001b[33mvalue\u001b[39m=\u001b[32m\"\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[0mSelect Site\u001b[0m\n            \u001b[36m</option>\u001b[39m\n          \u001b[36m</select>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 230 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 231 |\u001b[39m     \u001b[90m// Wait for sites to load\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 232 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 233 |\u001b[39m       expect(screen\u001b[33m.\u001b[39mgetByText(\u001b[32m'Site 1'\u001b[39m))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 234 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 235 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat waitForWrapper (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/wait-for.js\u001b[2m:163:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/TenantSiteContext.test.tsx\u001b[39m\u001b[0m\u001b[2m:232:18)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTenantSiteContext Integration › restores context from localStorage on page load\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31melement\u001b[39m\u001b[2m).toHaveTextContent()\u001b[22m\n\n    Expected element to have text content:\n    \u001b[32m  tenant-2\u001b[39m\n    Received:\n    \u001b[31m  No tenant\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 264 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 265 |\u001b[39m     \u001b[90m// Verify the UI shows the restored context\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 266 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByTestId(\u001b[32m'current-tenant'\u001b[39m))\u001b[33m.\u001b[39mtoHaveTextContent(\u001b[32m'tenant-2'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 267 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 268 |\u001b[39m     \u001b[90m// Wait for sites to load\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 269 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveTextContent (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/TenantSiteContext.test.tsx\u001b[39m\u001b[0m\u001b[2m:266:50)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009672994,
        "runtime": 620,
        "slow": false,
        "start": 1744009672374
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\listings\\components\\form\\CategorySelectionStep.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategorySelectionStep Component"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategorySelectionStep Component renders loading state initially",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders loading state initially"
        },
        {
          "ancestorTitles": [
            "CategorySelectionStep Component"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategorySelectionStep Component fetches and displays categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches and displays categories"
        },
        {
          "ancestorTitles": [
            "CategorySelectionStep Component"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategorySelectionStep Component pre-selects categories based on formData",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "pre-selects categories based on formData"
        },
        {
          "ancestorTitles": [
            "CategorySelectionStep Component"
          ],
          "duration": 33,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategorySelectionStep Component calls updateField when a category is selected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls updateField when a category is selected"
        },
        {
          "ancestorTitles": [
            "CategorySelectionStep Component"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategorySelectionStep Component calls updateField when a category is unselected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls updateField when a category is unselected"
        },
        {
          "ancestorTitles": [
            "CategorySelectionStep Component"
          ],
          "duration": 29,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategorySelectionStep Component displays validation errors when present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays validation errors when present"
        },
        {
          "ancestorTitles": [
            "CategorySelectionStep Component"
          ],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategorySelectionStep Component disables checkboxes when isSubmitting is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "disables checkboxes when isSubmitting is true"
        },
        {
          "ancestorTitles": [
            "CategorySelectionStep Component"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategorySelectionStep Component handles fetch error gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles fetch error gracefully"
        },
        {
          "ancestorTitles": [
            "CategorySelectionStep Component"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategorySelectionStep Component handles empty categories response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty categories response"
        },
        {
          "ancestorTitles": [
            "CategorySelectionStep Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategorySelectionStep Component does not fetch categories when siteSlug is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not fetch categories when siteSlug is not provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673014,
        "runtime": 412,
        "slow": false,
        "start": 1744009672602
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryForm.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryForm Component"
          ],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryForm Component renders the form with all fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the form with all fields"
        },
        {
          "ancestorTitles": [
            "CategoryForm Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryForm Component displays validation errors when present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays validation errors when present"
        },
        {
          "ancestorTitles": [
            "CategoryForm Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryForm Component calls handleSubmit when form is submitted",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls handleSubmit when form is submitted"
        },
        {
          "ancestorTitles": [
            "CategoryForm Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryForm Component displays success message when form submission is successful",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays success message when form submission is successful"
        },
        {
          "ancestorTitles": [
            "CategoryForm Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryForm Component displays error message when form submission fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays error message when form submission fails"
        },
        {
          "ancestorTitles": [
            "CategoryForm Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryForm Component shows parent category options when available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "shows parent category options when available"
        },
        {
          "ancestorTitles": [
            "CategoryForm Component"
          ],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryForm Component calls onCancel when cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel when cancel button is clicked"
        },
        {
          "ancestorTitles": [
            "CategoryForm Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryForm Component shows loading state when submitting the form",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows loading state when submitting the form"
        },
        {
          "ancestorTitles": [
            "CategoryForm Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryForm Component shows edit mode UI when categoryId is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "shows edit mode UI when categoryId is provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673096,
        "runtime": 639,
        "slow": false,
        "start": 1744009672457
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\components\\admin\\auth\\guards\\TenantGuard.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "TenantGuard - Basic Functionality"
          ],
          "duration": 39,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantGuard - Basic Functionality should render children when user has tenant access with no permission requirements",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should render children when user has tenant access with no permission requirements"
        },
        {
          "ancestorTitles": [
            "TenantGuard - Basic Functionality"
          ],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantGuard - Basic Functionality should check permission when resourceType and permission are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check permission when resourceType and permission are provided"
        },
        {
          "ancestorTitles": [
            "TenantGuard - Basic Functionality"
          ],
          "duration": 29,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantGuard - Basic Functionality should check default read permission when only resourceType is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check default read permission when only resourceType is provided"
        },
        {
          "ancestorTitles": [
            "TenantGuard - Basic Functionality"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantGuard - Basic Functionality should check any permission when permissions array is provided with requireAll=false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check any permission when permissions array is provided with requireAll=false"
        },
        {
          "ancestorTitles": [
            "TenantGuard - Basic Functionality"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantGuard - Basic Functionality should check all permissions when permissions array is provided with requireAll=true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check all permissions when permissions array is provided with requireAll=true"
        },
        {
          "ancestorTitles": [
            "TenantGuard - Basic Functionality"
          ],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantGuard - Basic Functionality should check resource-specific permission when resourceId is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check resource-specific permission when resourceId is provided"
        },
        {
          "ancestorTitles": [
            "TenantGuard - Error Handling and Access Denial"
          ],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantGuard - Error Handling and Access Denial should render fallback when user is not a tenant member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should render fallback when user is not a tenant member"
        },
        {
          "ancestorTitles": [
            "TenantGuard - Error Handling and Access Denial"
          ],
          "duration": 29,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantGuard - Error Handling and Access Denial should render fallback when permission check fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should render fallback when permission check fails"
        },
        {
          "ancestorTitles": [
            "TenantGuard - Error Handling and Access Denial"
          ],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantGuard - Error Handling and Access Denial should render custom fallback when access is denied",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render custom fallback when access is denied"
        },
        {
          "ancestorTitles": [
            "TenantGuard - Error Handling and Access Denial"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantGuard - Error Handling and Access Denial should render fallback when any permission check fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should render fallback when any permission check fails"
        },
        {
          "ancestorTitles": [
            "TenantGuard - Error Handling and Access Denial"
          ],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantGuard - Error Handling and Access Denial should render fallback when all permissions check fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should render fallback when all permissions check fails"
        },
        {
          "ancestorTitles": [
            "TenantGuard - Error Handling and Access Denial"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantGuard - Error Handling and Access Denial should handle service errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle service errors gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673109,
        "runtime": 462,
        "slow": false,
        "start": 1744009672647
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoryTableRow.sorting.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Sorting Indicators"
          ],
          "duration": 26,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Sorting Indicators applies visual indication when row is sorted by name ascending",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "applies visual indication when row is sorted by name ascending"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Sorting Indicators"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Sorting Indicators applies visual indication when row is sorted by name descending",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "applies visual indication when row is sorted by name descending"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Sorting Indicators"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Sorting Indicators applies ascending aria-sort attribute to order column",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies ascending aria-sort attribute to order column"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Sorting Indicators"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Sorting Indicators applies descending aria-sort attribute to order column",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies descending aria-sort attribute to order column"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Sorting Indicators"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Sorting Indicators applies ascending aria-sort attribute to updatedAt column",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies ascending aria-sort attribute to updatedAt column"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Sorting Indicators"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Sorting Indicators applies descending aria-sort attribute to updatedAt column",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies descending aria-sort attribute to updatedAt column"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Sorting Indicators"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Sorting Indicators applies no sorting indication when not sorted",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "applies no sorting indication when not sorted"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Sorting Indicators"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Sorting Indicators applies sorting indicators correctly when site column is shown",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "applies sorting indicators correctly when site column is shown"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Sorting Indicators"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Sorting Indicators applies createdAt sorting correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "applies createdAt sorting correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673122,
        "runtime": 441,
        "slow": false,
        "start": 1744009672681
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoriesMobileView.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoriesMobileView Component"
          ],
          "duration": 33,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Component renders category cards for all provided categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "renders category cards for all provided categories"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Component shows child category indicator with parent name for child categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows child category indicator with parent name for child categories"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Component shows child count for categories with children",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "shows child count for categories with children"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Component shows site information when showSiteColumn is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "shows site information when showSiteColumn is true"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Component does not show site information when showSiteColumn is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not show site information when showSiteColumn is false"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Component calls onDeleteClick with correct parameters when delete button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onDeleteClick with correct parameters when delete button is clicked"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Component uses site-specific URLs when siteSlug is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "uses site-specific URLs when siteSlug is provided"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Component uses default URLs when siteSlug is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "uses default URLs when siteSlug is not provided"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Component displays formatted last updated date",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays formatted last updated date"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Component hides on larger screens (md and up)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "hides on larger screens (md and up)"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 11,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673149,
        "runtime": 416,
        "slow": false,
        "start": 1744009672733
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\auth\\UnifiedAuthComponent.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "UnifiedAuthComponent",
            "Terminology Tests"
          ],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnifiedAuthComponent Terminology Tests should use \"Log In\" (verb) for the login button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should use \"Log In\" (verb) for the login button"
        },
        {
          "ancestorTitles": [
            "UnifiedAuthComponent",
            "Terminology Tests"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnifiedAuthComponent Terminology Tests should use \"Log Out\" (verb) for the logout option",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should use \"Log Out\" (verb) for the logout option"
        },
        {
          "ancestorTitles": [
            "UnifiedAuthComponent",
            "Authentication State Tests"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnifiedAuthComponent Authentication State Tests should show login button when user is not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show login button when user is not authenticated"
        },
        {
          "ancestorTitles": [
            "UnifiedAuthComponent",
            "Authentication State Tests"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnifiedAuthComponent Authentication State Tests should show user info and dropdown when user is authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show user info and dropdown when user is authenticated"
        },
        {
          "ancestorTitles": [
            "UnifiedAuthComponent",
            "Authentication State Tests"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnifiedAuthComponent Authentication State Tests should call logout when Log Out is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call logout when Log Out is clicked"
        },
        {
          "ancestorTitles": [
            "UnifiedAuthComponent",
            "Role-Based Tests"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnifiedAuthComponent Role-Based Tests should indicate admin role when user is an admin",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should indicate admin role when user is an admin"
        },
        {
          "ancestorTitles": [
            "UnifiedAuthComponent",
            "Role-Based Tests"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnifiedAuthComponent Role-Based Tests should not show admin indicator for regular users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not show admin indicator for regular users"
        },
        {
          "ancestorTitles": [
            "UnifiedAuthComponent",
            "Accessibility Tests"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnifiedAuthComponent Accessibility Tests should have proper ARIA attributes for the dropdown menu",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should have proper ARIA attributes for the dropdown menu"
        },
        {
          "ancestorTitles": [
            "UnifiedAuthComponent",
            "Accessibility Tests"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnifiedAuthComponent Accessibility Tests should be keyboard navigable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should be keyboard navigable"
        },
        {
          "ancestorTitles": [
            "UnifiedAuthComponent",
            "Customization Tests"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnifiedAuthComponent Customization Tests should accept custom className prop",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should accept custom className prop"
        },
        {
          "ancestorTitles": [
            "UnifiedAuthComponent",
            "Customization Tests"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UnifiedAuthComponent Customization Tests should accept custom position prop",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should accept custom position prop"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/utils/tenantAccessControl.ts\u001b[2m:31:34)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/guards/PermissionGuard.tsx\u001b[2m:24:30)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/components/admin/auth/guards/__tests__/permission-guard/basic-permissions.test.tsx\u001b[39m\u001b[0m\u001b[2m:12:26)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\guards\\__tests__\\permission-guard\\basic-permissions.test.tsx",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673181,
        "runtime": 603,
        "slow": false,
        "start": 1744009672578
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\BasicInfoStep.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "BasicInfoStep Component - Interaction"
          ],
          "duration": 245,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component - Interaction calls updateField when name field is updated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "calls updateField when name field is updated"
        },
        {
          "ancestorTitles": [
            "BasicInfoStep Component - Interaction"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component - Interaction renders the slug field correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the slug field correctly"
        },
        {
          "ancestorTitles": [
            "BasicInfoStep Component - Interaction"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BasicInfoStep Component - Interaction renders the description field correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the description field correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673323,
        "runtime": 377,
        "slow": false,
        "start": 1744009672946
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-listing\\SiteFilterAccessibility.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Site Filter Accessibility"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Filter Accessibility should be keyboard navigable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should be keyboard navigable"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 17,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673332,
        "runtime": 489,
        "slow": false,
        "start": 1744009672843
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\listings\\components\\form\\PricingStep.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component renders the component with all price type options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the component with all price type options"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component shows price amount and currency fields for fixed price type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "shows price amount and currency fields for fixed price type"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component hides price amount and currency fields for free price type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "hides price amount and currency fields for free price type"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component hides price amount and currency fields for contact price type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "hides price amount and currency fields for contact price type"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component shows price description field for variable price type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "shows price description field for variable price type"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component calls updateNestedField when price type changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls updateNestedField when price type changes"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component calls updateNestedField when price amount changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls updateNestedField when price amount changes"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component calls updateNestedField with undefined when price amount is not a number",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls updateNestedField with undefined when price amount is not a number"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component calls updateNestedField when currency changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls updateNestedField when currency changes"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component shows on sale checkbox for price types that show amount",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows on sale checkbox for price types that show amount"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component hides on sale checkbox for free price type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "hides on sale checkbox for free price type"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component shows sale price input when on sale is checked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows sale price input when on sale is checked"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component calls updateNestedField when on sale checkbox is toggled",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls updateNestedField when on sale checkbox is toggled"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component calls updateNestedField when sale price changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls updateNestedField when sale price changes"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component displays validation errors when present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays validation errors when present"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component disables all inputs when isSubmitting is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "disables all inputs when isSubmitting is true"
        },
        {
          "ancestorTitles": [
            "PricingStep Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PricingStep Component initializes with default price type when price is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "initializes with default price type when price is not provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673350,
        "runtime": 319,
        "slow": false,
        "start": 1744009673031
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useLoginAttemptsMap.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useLoginAttemptsMap"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttemptsMap fetches map data successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches map data successfully"
        },
        {
          "ancestorTitles": [
            "useLoginAttemptsMap"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttemptsMap handles API errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors"
        },
        {
          "ancestorTitles": [
            "useLoginAttemptsMap"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttemptsMap refreshes data when refresh is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "refreshes data when refresh is called"
        },
        {
          "ancestorTitles": [
            "useLoginAttemptsMap"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttemptsMap applies filters correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "applies filters correctly"
        },
        {
          "ancestorTitles": [
            "useLoginAttemptsMap"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttemptsMap updates when filter changes - with debug",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "updates when filter changes - with debug"
        },
        {
          "ancestorTitles": [
            "useLoginAttemptsMap"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttemptsMap handles network errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673349,
        "runtime": 404,
        "slow": false,
        "start": 1744009672945
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\roles\\global-id-assign-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "POST /api/admin/roles/global/[id]/assign ACL Protection"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/roles/global/[id]/assign ACL Protection should use withSecureTenantPermission with role:update",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with role:update"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/roles/global/[id]/assign ACL Protection"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/roles/global/[id]/assign ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673373,
        "runtime": 481,
        "slow": false,
        "start": 1744009672892
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\search\\SearchBar.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component renders in collapsed state by default",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders in collapsed state by default"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component renders in expanded state when expanded prop is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders in expanded state when expanded prop is true"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component toggles between collapsed and expanded states when search button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "toggles between collapsed and expanded states when search button is clicked"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component handles user input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles user input"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component calls router.push with correct URL when search is submitted",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls router.push with correct URL when search is submitted"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component does not include site ID in search URL when provided (site context from middleware)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not include site ID in search URL when provided (site context from middleware)"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component does not submit search if query is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not submit search if query is empty"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component does not submit search if all terms are too short",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not submit search if all terms are too short"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component applies custom class name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies custom class name"
        },
        {
          "ancestorTitles": [
            "SearchBar Component"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchBar Component has proper accessibility attributes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper accessibility attributes"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/global-roles.test.ts\u001b[39m\u001b[0m\u001b[2m:7:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\global-roles.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 14,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673412,
        "runtime": 452,
        "slow": false,
        "start": 1744009672960
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\ListingCard.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 35,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component renders listing title and description correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders listing title and description correctly"
        },
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component renders the image when imageUrl is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the image when imageUrl is provided"
        },
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component does not render an image when imageUrl is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not render an image when imageUrl is not provided"
        },
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component renders rating stars correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders rating stars correctly"
        },
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component does not render rating stars when rating is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not render rating stars when rating is not provided"
        },
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component renders price when available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders price when available"
        },
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component does not render price when not available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not render price when not available"
        },
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component renders prominent backlink when backlinkPosition is \"prominent\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders prominent backlink when backlinkPosition is \"prominent\""
        },
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component does not render prominent backlink when backlinkPosition is not \"prominent\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not render prominent backlink when backlinkPosition is not \"prominent\""
        },
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component adds proper rel attribute for nofollow backlinks",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "adds proper rel attribute for nofollow backlinks"
        },
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component does not add rel attribute for dofollow backlinks",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not add rel attribute for dofollow backlinks"
        },
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component renders additional metadata when available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders additional metadata when available"
        },
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component includes correct Schema.org markup",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "includes correct Schema.org markup"
        },
        {
          "ancestorTitles": [
            "ListingCard Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingCard Component renders \"View Details\" link correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders \"View Details\" link correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/lib/role-service/__tests__/global-roles.test.ts\u001b[39m\u001b[0m\u001b[2m:11:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\lib\\role-service\\__tests__\\global-roles.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673558,
        "runtime": 435,
        "slow": false,
        "start": 1744009673123
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\sites\\submissions\\id-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/submissions/[submissionId] ACL Protection"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/submissions/[submissionId] ACL Protection should use withSecureTenantPermission with submission:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with submission:read"
        },
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/submissions/[submissionId] ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/submissions/[submissionId] ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "PUT /api/sites/[siteSlug]/submissions/[submissionId] ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PUT /api/sites/[siteSlug]/submissions/[submissionId] ACL Protection should use withSecureTenantPermission with submission:update",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with submission:update"
        },
        {
          "ancestorTitles": [
            "PUT /api/sites/[siteSlug]/submissions/[submissionId] ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PUT /api/sites/[siteSlug]/submissions/[submissionId] ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "DELETE /api/sites/[siteSlug]/submissions/[submissionId] ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DELETE /api/sites/[siteSlug]/submissions/[submissionId] ACL Protection should use withSecureTenantPermission with submission:delete",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with submission:delete"
        },
        {
          "ancestorTitles": [
            "DELETE /api/sites/[siteSlug]/submissions/[submissionId] ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DELETE /api/sites/[siteSlug]/submissions/[submissionId] ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673577,
        "runtime": 359,
        "slow": false,
        "start": 1744009673218
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\layout\\__tests__\\AdminLayoutWithContext.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "AdminLayout with TenantSiteContext"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminLayout with TenantSiteContext renders the layout with TenantSiteProvider",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the layout with TenantSiteProvider"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/user-roles.test.ts\u001b[39m\u001b[0m\u001b[2m:7:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\user-roles.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673686,
        "runtime": 521,
        "slow": false,
        "start": 1744009673165
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryTable.pagination.basic.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTable Pagination - Basic"
          ],
          "duration": 102,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Pagination - Basic renders pagination with correct information",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders pagination with correct information"
        },
        {
          "ancestorTitles": [
            "CategoryTable Pagination - Basic"
          ],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Pagination - Basic handles empty pages gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty pages gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 13,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673691,
        "runtime": 498,
        "slow": false,
        "start": 1744009673193
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoryTablePagination.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component renders with correct current page and total pages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with correct current page and total pages"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component displays correct item range text",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays correct item range text"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component handles last page with fewer items correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles last page with fewer items correctly"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component disables previous button on first page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "disables previous button on first page"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component disables next button on last page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "disables next button on last page"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component disables next button when there are no pages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "disables next button when there are no pages"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component calls goToPage with previous page when previous button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls goToPage with previous page when previous button is clicked"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component calls goToPage with next page when next button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls goToPage with next page when next button is clicked"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component calls setItemsPerPage when items per page dropdown changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls setItemsPerPage when items per page dropdown changes"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component renders all available page size options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "renders all available page size options"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component has proper ARIA attributes for accessibility",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper ARIA attributes for accessibility"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component uses responsive layout for mobile and desktop",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "uses responsive layout for mobile and desktop"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component properly groups navigation elements for usability",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "properly groups navigation elements for usability"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673704,
        "runtime": 476,
        "slow": false,
        "start": 1744009673228
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\SiteHeader.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteHeader Component"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteHeader Component renders site name correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders site name correctly"
        },
        {
          "ancestorTitles": [
            "SiteHeader Component"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteHeader Component renders logo when logoUrl is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders logo when logoUrl is provided"
        },
        {
          "ancestorTitles": [
            "SiteHeader Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteHeader Component does not render logo when logoUrl is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not render logo when logoUrl is not provided"
        },
        {
          "ancestorTitles": [
            "SiteHeader Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteHeader Component renders SEO-optimized H1 tag with headerText",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders SEO-optimized H1 tag with headerText"
        },
        {
          "ancestorTitles": [
            "SiteHeader Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteHeader Component renders home link correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders home link correctly"
        },
        {
          "ancestorTitles": [
            "SiteHeader Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteHeader Component renders all category links correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 10,
          "retryReasons": [],
          "status": "passed",
          "title": "renders all category links correctly"
        },
        {
          "ancestorTitles": [
            "SiteHeader Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteHeader Component renders correctly with empty categories array",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correctly with empty categories array"
        },
        {
          "ancestorTitles": [
            "SiteHeader Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteHeader Component applies correct CSS classes for responsive layout",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "applies correct CSS classes for responsive layout"
        },
        {
          "ancestorTitles": [
            "SiteHeader Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteHeader Component applies correct styling to navigation links",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "applies correct styling to navigation links"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 11,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673754,
        "runtime": 337,
        "slow": false,
        "start": 1744009673417
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryTable.accessibility.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTable Accessibility"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Accessibility has proper ARIA roles for table structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper ARIA roles for table structure"
        },
        {
          "ancestorTitles": [
            "CategoryTable Accessibility"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Accessibility includes appropriate ARIA attributes for sorting",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "includes appropriate ARIA attributes for sorting"
        },
        {
          "ancestorTitles": [
            "CategoryTable Accessibility"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Accessibility provides accessible labels for interactive elements",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "provides accessible labels for interactive elements"
        },
        {
          "ancestorTitles": [
            "CategoryTable Accessibility"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Accessibility supports keyboard navigation for interactive elements",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "supports keyboard navigation for interactive elements"
        },
        {
          "ancestorTitles": [
            "CategoryTable Accessibility"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Accessibility provides ARIA live regions for dynamic content changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "provides ARIA live regions for dynamic content changes"
        },
        {
          "ancestorTitles": [
            "CategoryTable Accessibility"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Accessibility has proper focus management for the delete modal",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper focus management for the delete modal"
        },
        {
          "ancestorTitles": [
            "CategoryTable Accessibility"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Accessibility provides appropriate keyboard shortcuts for common actions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "provides appropriate keyboard shortcuts for common actions"
        },
        {
          "ancestorTitles": [
            "CategoryTable Accessibility"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Accessibility ensures that delete confirmation dialog is accessible",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "ensures that delete confirmation dialog is accessible"
        },
        {
          "ancestorTitles": [
            "CategoryTable Accessibility"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Accessibility responds to Escape key to cancel delete modal",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "responds to Escape key to cancel delete modal"
        },
        {
          "ancestorTitles": [
            "CategoryTable Accessibility"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Accessibility includes skip links for keyboard users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "includes skip links for keyboard users"
        },
        {
          "ancestorTitles": [
            "CategoryTable Accessibility"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Accessibility ensures all interactive elements have sufficient contrast",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "ensures all interactive elements have sufficient contrast"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673785,
        "runtime": 336,
        "slow": false,
        "start": 1744009673449
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-listing\\FilterListingsBySite.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "FilterListingsBySite"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FilterListingsBySite should call filterBySite when a site is selected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call filterBySite when a site is selected"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673789,
        "runtime": 400,
        "slow": false,
        "start": 1744009673389
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\filtering\\FilterPersistence.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Filter Persistence Between Navigation Events"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Filter Persistence Between Navigation Events should save filters to session storage when applied",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should save filters to session storage when applied"
        },
        {
          "ancestorTitles": [
            "Integration: Filter Persistence Between Navigation Events"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Filter Persistence Between Navigation Events should load filters from session storage when navigating back to listings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should load filters from session storage when navigating back to listings"
        },
        {
          "ancestorTitles": [
            "Integration: Filter Persistence Between Navigation Events"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Filter Persistence Between Navigation Events should display previously applied filters after navigation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should display previously applied filters after navigation"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673839,
        "runtime": 438,
        "slow": false,
        "start": 1744009673401
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\ZKPLogin.rendering.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKPLogin Rendering Tests"
          ],
          "duration": 36,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Rendering Tests renders the login form with proper elements",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the login form with proper elements"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Rendering Tests"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Rendering Tests renders the remember me option",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the remember me option"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Rendering Tests"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Rendering Tests renders the secure authentication message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the secure authentication message"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Rendering Tests"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Rendering Tests has a submit button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "has a submit button"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Rendering Tests"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Rendering Tests has a forgot password button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "has a forgot password button"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673854,
        "runtime": 329,
        "slow": false,
        "start": 1744009673525
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\roles\\global-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/roles/global ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/roles/global ACL Protection should use withSecureTenantPermission with role:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with role:read"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/roles/global ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/roles/global ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/roles/global ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/roles/global ACL Protection should use withSecureTenantPermission with role:create",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with role:create"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/roles/global ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/roles/global ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673872,
        "runtime": 467,
        "slow": false,
        "start": 1744009673405
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoryTableHeader.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component renders the header with correct category count",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the header with correct category count"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component renders the add new category button with correct href",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the add new category button with correct href"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component uses site-specific URL when siteSlug is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses site-specific URL when siteSlug is provided"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component calls setSearchTerm when search input changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls setSearchTerm when search input changes"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component renders the clear search button when searchTerm has a value",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the clear search button when searchTerm has a value"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component renders parent category filter dropdown with correct options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders parent category filter dropdown with correct options"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component calls setParentFilter when parent selection changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls setParentFilter when parent selection changes"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component renders site filter dropdown only in multi-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders site filter dropdown only in multi-site mode"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component excludes child categories from parent filter options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "excludes child categories from parent filter options"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component shows \"Reset Filters\" button when filters are applied",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "shows \"Reset Filters\" button when filters are applied"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component uses responsive layout for filter controls",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses responsive layout for filter controls"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component displays \"View Hierarchy\" toggle button for tree view",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays \"View Hierarchy\" toggle button for tree view"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673873,
        "runtime": 439,
        "slow": false,
        "start": 1744009673434
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\SiteTable.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteTable Component - Basic Rendering"
          ],
          "duration": 36,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTable Component - Basic Rendering renders the table with correct columns",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the table with correct columns"
        },
        {
          "ancestorTitles": [
            "SiteTable Component - Basic Rendering"
          ],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTable Component - Basic Rendering renders site rows with correct data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "renders site rows with correct data"
        },
        {
          "ancestorTitles": [
            "SiteTable Component - Basic Rendering"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTable Component - Basic Rendering renders action buttons for each row",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders action buttons for each row"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/app/api/tenants/user/route.ts\u001b[2m:14:34)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/api/tenants/user.test.ts\u001b[39m\u001b[0m\u001b[2m:12:16)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\tenants\\user.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673954,
        "runtime": 324,
        "slow": false,
        "start": 1744009673630
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\roles\\global-id-remove-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "POST /api/admin/roles/global/[id]/remove ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/roles/global/[id]/remove ACL Protection should use withSecureTenantPermission with role:update",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with role:update"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/roles/global/[id]/remove ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/roles/global/[id]/remove ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 1,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009673983,
        "runtime": 349,
        "slow": false,
        "start": 1744009673634
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\tenant\\__tests__\\TenantSiteIntegration.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Tenant and Site Selector Integration"
          ],
          "duration": 31,
          "failureDetails": [
            {
              "name": "TestingLibraryElementError"
            }
          ],
          "failureMessages": [
            "TestingLibraryElementError: Unable to find an element by: [data-testid=\"tenant-selector\"]\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div />\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n    at Object.getElementError (C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\config.js:37:19)\n    at C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\query-helpers.js:76:38\n    at C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\query-helpers.js:52:17\n    at C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\query-helpers.js:95:19\n    at Object.getByTestId (C:\\Users\\T\\directorymonster\\src\\components\\admin\\tenant\\__tests__\\TenantSiteIntegration.test.tsx:88:19)"
          ],
          "fullName": "Tenant and Site Selector Integration should render both selectors and allow switching between tenants and sites",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "failed",
          "title": "should render both selectors and allow switching between tenants and sites"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTenant and Site Selector Integration › should render both selectors and allow switching between tenants and sites\u001b[39m\u001b[22m\n\n    TestingLibraryElementError: Unable to find an element by: [data-testid=\"tenant-selector\"]\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<body>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<div />\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</body>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 86 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 87 |\u001b[39m     \u001b[90m// Both selectors should be visible\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 88 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByTestId(\u001b[32m'tenant-selector'\u001b[39m))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 89 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByTestId(\u001b[32m'site-selector'\u001b[39m))\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 90 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 91 |\u001b[39m     \u001b[90m// Tenant selector should show Tenant 1\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getElementError (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:37:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:76:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:52:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/query-helpers.js\u001b[2m:95:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.getByTestId (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/admin/tenant/__tests__/TenantSiteIntegration.test.tsx\u001b[39m\u001b[0m\u001b[2m:88:19)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 11,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674041,
        "runtime": 318,
        "slow": false,
        "start": 1744009673723
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\listings\\components\\form\\TextArea.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "TextArea Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextArea Component renders the textarea with label and value",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the textarea with label and value"
        },
        {
          "ancestorTitles": [
            "TextArea Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextArea Component calls onChange when textarea value changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onChange when textarea value changes"
        },
        {
          "ancestorTitles": [
            "TextArea Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextArea Component displays error message when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays error message when provided"
        },
        {
          "ancestorTitles": [
            "TextArea Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextArea Component marks the field as required when specified",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "marks the field as required when specified"
        },
        {
          "ancestorTitles": [
            "TextArea Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextArea Component disables the textarea when specified",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "disables the textarea when specified"
        },
        {
          "ancestorTitles": [
            "TextArea Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextArea Component applies placeholder when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies placeholder when provided"
        },
        {
          "ancestorTitles": [
            "TextArea Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextArea Component applies maxLength when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies maxLength when provided"
        },
        {
          "ancestorTitles": [
            "TextArea Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextArea Component applies custom rows when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies custom rows when provided"
        },
        {
          "ancestorTitles": [
            "TextArea Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextArea Component uses default rows value when not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses default rows value when not provided"
        },
        {
          "ancestorTitles": [
            "TextArea Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextArea Component applies correct CSS classes based on error state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "applies correct CSS classes based on error state"
        },
        {
          "ancestorTitles": [
            "TextArea Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TextArea Component displays error message with correct ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays error message with correct ID"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat requireActual (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/audit.test.ts\u001b[39m\u001b[0m\u001b[2m:17:31)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/audit.test.ts\u001b[39m\u001b[0m\u001b[2m:18:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\audit.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674146,
        "runtime": 395,
        "slow": false,
        "start": 1744009673751
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\__tests__\\UserActivityTracker.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "UserActivityTracker"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserActivityTracker renders the component correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the component correctly"
        },
        {
          "ancestorTitles": [
            "UserActivityTracker"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserActivityTracker fetches user activities when a userId is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches user activities when a userId is provided"
        },
        {
          "ancestorTitles": [
            "UserActivityTracker"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserActivityTracker handles search correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles search correctly"
        },
        {
          "ancestorTitles": [
            "UserActivityTracker"
          ],
          "duration": 32,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserActivityTracker handles date filter correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles date filter correctly"
        },
        {
          "ancestorTitles": [
            "UserActivityTracker"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserActivityTracker handles load more correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles load more correctly"
        },
        {
          "ancestorTitles": [
            "UserActivityTracker"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "UserActivityTracker handles error state correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles error state correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674150,
        "runtime": 428,
        "slow": false,
        "start": 1744009673722
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\SessionManager.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SessionManager Component"
          ],
          "duration": 38,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SessionManager Component provides authentication context to children",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "provides authentication context to children"
        },
        {
          "ancestorTitles": [
            "SessionManager Component"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SessionManager Component handles token expiration correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles token expiration correctly"
        },
        {
          "ancestorTitles": [
            "SessionManager Component"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SessionManager Component redirects to login page when configured",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "redirects to login page when configured"
        },
        {
          "ancestorTitles": [
            "SessionManager Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SessionManager Component refreshes token when it is about to expire",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "refreshes token when it is about to expire"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 13,
      "numPendingTests": 1,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674161,
        "runtime": 367,
        "slow": false,
        "start": 1744009673794
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\hooks\\useDomains.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook initializes with empty domains array by default",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "initializes with empty domains array by default"
        },
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook initializes with provided domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "initializes with provided domains"
        },
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook allows changing domain input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "allows changing domain input"
        },
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook validates and adds valid domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates and adds valid domains"
        },
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook validates and rejects invalid domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates and rejects invalid domains"
        },
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook prevents adding duplicate domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "prevents adding duplicate domains"
        },
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook allows removing domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "allows removing domains"
        },
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook validates domains before submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "validates domains before submission"
        },
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook submits domains to API successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "submits domains to API successfully"
        },
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook handles API errors during submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors during submission"
        },
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook handles network errors during submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors during submission"
        },
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook clears errors on input change",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "clears errors on input change"
        },
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook uses custom validation when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "uses custom validation when provided"
        },
        {
          "ancestorTitles": [
            "useDomains Hook"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomains Hook allows resetting errors and status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "allows resetting errors and status"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674214,
        "runtime": 310,
        "slow": false,
        "start": 1744009673904
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\roles\\global-id-users-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/roles/global/[id]/users ACL Protection"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/roles/global/[id]/users ACL Protection should use withSecureTenantPermission with role:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with role:read"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/roles/global/[id]/users ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/roles/global/[id]/users ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674228,
        "runtime": 338,
        "slow": false,
        "start": 1744009673890
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\components\\public\\PublicHeader.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "MainHeader"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainHeader should include the UnifiedAuthComponent",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should include the UnifiedAuthComponent"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674257,
        "runtime": 418,
        "slow": false,
        "start": 1744009673839
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\search\\SearchFilters.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component renders all filter sections correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "renders all filter sections correctly"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component shows status filter when showStatusFilter is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "shows status filter when showStatusFilter is true"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component hides status filter when showStatusFilter is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "hides status filter when showStatusFilter is false"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component selects a category and calls the filter change handler",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "selects a category and calls the filter change handler"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component toggles featured filter and calls the filter change handler",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "toggles featured filter and calls the filter change handler"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component changes sort order and calls the filter change handler",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "changes sort order and calls the filter change handler"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component changes status and calls the filter change handler when admin",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "changes status and calls the filter change handler when admin"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component applies initial filters when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "applies initial filters when provided"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component handles empty categories array gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty categories array gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674259,
        "runtime": 352,
        "slow": false,
        "start": 1744009673907
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\SiteForm.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteForm"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm renders the form with correct title in create mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the form with correct title in create mode"
        },
        {
          "ancestorTitles": [
            "SiteForm"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm renders the form with correct title in edit mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the form with correct title in edit mode"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674346,
        "runtime": 362,
        "slow": false,
        "start": 1744009673984
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-listing\\ListingCreationWithSite.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Listing Creation With Site"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Listing Creation With Site should display site selection in the listing form",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should display site selection in the listing form"
        },
        {
          "ancestorTitles": [
            "Integration: Listing Creation With Site"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Listing Creation With Site should pre-select a site when a siteId is provided in the URL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should pre-select a site when a siteId is provided in the URL"
        },
        {
          "ancestorTitles": [
            "Integration: Listing Creation With Site"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Listing Creation With Site should pass the selected site to the listing creation function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass the selected site to the listing creation function"
        },
        {
          "ancestorTitles": [
            "Integration: Listing Creation With Site"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Listing Creation With Site should validate site-specific fields during listing creation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate site-specific fields during listing creation"
        },
        {
          "ancestorTitles": [
            "Integration: Listing Creation With Site"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Listing Creation With Site should show site-specific form fields when a site is selected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should show site-specific form fields when a site is selected"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/services/users.ts\u001b[2m:44:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mtests/api/admin/users/[id]/route.mock.ts\u001b[2m:23:56)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/api/admin/users/id.route.test.ts\u001b[39m\u001b[0m\u001b[2m:9:20)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\admin\\users\\id.route.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674393,
        "runtime": 364,
        "slow": false,
        "start": 1744009674029
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\layout\\Breadcrumbs.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Breadcrumbs Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Breadcrumbs Component renders nothing when on admin root path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders nothing when on admin root path"
        },
        {
          "ancestorTitles": [
            "Breadcrumbs Component"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Breadcrumbs Component renders correct breadcrumbs for single-level path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correct breadcrumbs for single-level path"
        },
        {
          "ancestorTitles": [
            "Breadcrumbs Component"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Breadcrumbs Component renders correct breadcrumbs for multi-level path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correct breadcrumbs for multi-level path"
        },
        {
          "ancestorTitles": [
            "Breadcrumbs Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Breadcrumbs Component formats path segments properly with capitalization and spaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "formats path segments properly with capitalization and spaces"
        },
        {
          "ancestorTitles": [
            "Breadcrumbs Component"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Breadcrumbs Component renders the correct ARIA attributes for accessibility",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the correct ARIA attributes for accessibility"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674427,
        "runtime": 463,
        "slow": false,
        "start": 1744009673964
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-listing\\ListingSiteAssociation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Listing Site Association Display"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Listing Site Association Display should display associated site information in listing details",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should display associated site information in listing details"
        },
        {
          "ancestorTitles": [
            "Integration: Listing Site Association Display"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Listing Site Association Display should show appropriate UI for a listing with no associated site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should show appropriate UI for a listing with no associated site"
        },
        {
          "ancestorTitles": [
            "Integration: Listing Site Association Display"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Listing Site Association Display should handle loading state when fetching site information",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle loading state when fetching site information"
        },
        {
          "ancestorTitles": [
            "Integration: Listing Site Association Display"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Listing Site Association Display should handle error state when site information cannot be retrieved",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle error state when site information cannot be retrieved"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674444,
        "runtime": 618,
        "slow": false,
        "start": 1744009673826
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\search\\search-indexing.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Search Indexing and Retrieval"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Indexing and Retrieval should index a listing when created",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should index a listing when created"
        },
        {
          "ancestorTitles": [
            "Search Indexing and Retrieval"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Indexing and Retrieval should retrieve listings via search API",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should retrieve listings via search API"
        },
        {
          "ancestorTitles": [
            "Search Indexing and Retrieval"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Indexing and Retrieval should filter search results by site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter search results by site"
        },
        {
          "ancestorTitles": [
            "Search Indexing and Retrieval"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Indexing and Retrieval should handle search with no results",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle search with no results"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674469,
        "runtime": 280,
        "slow": false,
        "start": 1744009674189
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\sites\\hooks\\useDomainVerification.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useDomainVerification"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomainVerification should initialize with empty verification statuses",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize with empty verification statuses"
        },
        {
          "ancestorTitles": [
            "useDomainVerification"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomainVerification should verify a domain successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify a domain successfully"
        },
        {
          "ancestorTitles": [
            "useDomainVerification"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomainVerification should handle verification failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle verification failure"
        },
        {
          "ancestorTitles": [
            "useDomainVerification"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomainVerification should handle API errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle API errors"
        },
        {
          "ancestorTitles": [
            "useDomainVerification"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomainVerification should handle API errors for existing domain status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle API errors for existing domain status"
        },
        {
          "ancestorTitles": [
            "useDomainVerification"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomainVerification should update existing domain status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should update existing domain status"
        },
        {
          "ancestorTitles": [
            "useDomainVerification"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomainVerification should get domain status correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should get domain status correctly"
        },
        {
          "ancestorTitles": [
            "useDomainVerification"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomainVerification should check if domain is verifying correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check if domain is verifying correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674482,
        "runtime": 280,
        "slow": false,
        "start": 1744009674202
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\security\\hooks\\useLoginAttempts.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useLoginAttempts"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttempts initializes with default values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "initializes with default values"
        },
        {
          "ancestorTitles": [
            "useLoginAttempts"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttempts fetches login attempts successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches login attempts successfully"
        },
        {
          "ancestorTitles": [
            "useLoginAttempts"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttempts loads more data when loadMore is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "loads more data when loadMore is called"
        },
        {
          "ancestorTitles": [
            "useLoginAttempts"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttempts handles API errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors"
        },
        {
          "ancestorTitles": [
            "useLoginAttempts"
          ],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttempts blocks an IP address successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "blocks an IP address successfully"
        },
        {
          "ancestorTitles": [
            "useLoginAttempts"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttempts refreshes data when refresh is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "refreshes data when refresh is called"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674501,
        "runtime": 322,
        "slow": false,
        "start": 1744009674179
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\FormActions.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "FormActions Component - Basic Rendering"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormActions Component - Basic Rendering renders next and back buttons correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders next and back buttons correctly"
        },
        {
          "ancestorTitles": [
            "FormActions Component - Basic Rendering"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormActions Component - Basic Rendering renders submit button on last step",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders submit button on last step"
        },
        {
          "ancestorTitles": [
            "FormActions Component - Basic Rendering"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormActions Component - Basic Rendering hides back button on first step",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "hides back button on first step"
        },
        {
          "ancestorTitles": [
            "FormActions Component - Basic Rendering"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormActions Component - Basic Rendering shows loading state when submitting",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "shows loading state when submitting"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674521,
        "runtime": 335,
        "slow": false,
        "start": 1744009674186
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\hooks\\useCategories.sorting.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useCategories Hook - Sorting"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Sorting should use order as default sort field in ascending order",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use order as default sort field in ascending order"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Sorting"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Sorting should sort by name in ascending order",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should sort by name in ascending order"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Sorting"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Sorting should sort by name in descending order",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should sort by name in descending order"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Sorting"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Sorting should sort by createdAt date",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should sort by createdAt date"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Sorting"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Sorting should sort by updatedAt date",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should sort by updatedAt date"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Sorting"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Sorting should toggle sort direction when clicking the same field",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should toggle sort direction when clicking the same field"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Sorting"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Sorting should reset to asc when changing sort field",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset to asc when changing sort field"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Sorting"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Sorting should maintain sort when filters are applied",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should maintain sort when filters are applied"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Sorting"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Sorting should handle sorting with pagination correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle sorting with pagination correctly"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Sorting"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Sorting should handle undefined or null values during sorting",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle undefined or null values during sorting"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674601,
        "runtime": 328,
        "slow": false,
        "start": 1744009674273
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\auth\\ZKPLogin.returnUrl.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKPLogin with returnUrl"
          ],
          "duration": 49,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin with returnUrl should redirect to returnUrl after successful login",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to returnUrl after successful login"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 2,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674615,
        "runtime": 355,
        "slow": false,
        "start": 1744009674260
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\cross-cutting\\NotificationSystems.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Notification Systems for Operations"
          ],
          "duration": 13,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalled (C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\cross-cutting\\NotificationSystems.test.tsx:97:24)\n    at Promise.then.completed (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\T\\directorymonster\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\T\\directorymonster\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\T\\directorymonster\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "Integration: Notification Systems for Operations should show a success notification when site creation succeeds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should show a success notification when site creation succeeds"
        },
        {
          "ancestorTitles": [
            "Integration: Notification Systems for Operations"
          ],
          "duration": 16,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalled (C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\cross-cutting\\NotificationSystems.test.tsx:135:24)\n    at Promise.then.completed (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\T\\directorymonster\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\T\\directorymonster\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\T\\directorymonster\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\T\\directorymonster\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"
          ],
          "fullName": "Integration: Notification Systems for Operations should show an error notification when site creation fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should show an error notification when site creation fails"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mIntegration: Notification Systems for Operations › should show a success notification when site creation succeeds\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\n    Expected number of calls: >= \u001b[32m1\u001b[39m\n    Received number of calls:    \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  95 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  96 |\u001b[39m     \u001b[90m// Verify createSite was called\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  97 |\u001b[39m     expect(createSite)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  98 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  99 |\u001b[39m     \u001b[90m// Wait for the async submission to complete\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 100 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/admin/integration/cross-cutting/NotificationSystems.test.tsx\u001b[39m\u001b[0m\u001b[2m:97:24)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mIntegration: Notification Systems for Operations › should show an error notification when site creation fails\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\n    Expected number of calls: >= \u001b[32m1\u001b[39m\n    Received number of calls:    \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 133 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 134 |\u001b[39m     \u001b[90m// Verify createSite was called\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 135 |\u001b[39m     expect(createSite)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 136 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 137 |\u001b[39m     \u001b[90m// Wait for the async submission to complete\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 138 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/admin/integration/cross-cutting/NotificationSystems.test.tsx\u001b[39m\u001b[0m\u001b[2m:135:24)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674657,
        "runtime": 257,
        "slow": false,
        "start": 1744009674400
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\roles\\global-id.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Global Role by ID API",
            "GET /api/admin/roles/global/[id]"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role by ID API GET /api/admin/roles/global/[id] should return a global role by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a global role by ID"
        },
        {
          "ancestorTitles": [
            "Global Role by ID API",
            "GET /api/admin/roles/global/[id]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role by ID API GET /api/admin/roles/global/[id] should return 404 if role not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 if role not found"
        },
        {
          "ancestorTitles": [
            "Global Role by ID API",
            "GET /api/admin/roles/global/[id]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role by ID API GET /api/admin/roles/global/[id] should handle errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors"
        },
        {
          "ancestorTitles": [
            "Global Role by ID API",
            "PATCH /api/admin/roles/global/[id]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role by ID API PATCH /api/admin/roles/global/[id] should update a global role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should update a global role"
        },
        {
          "ancestorTitles": [
            "Global Role by ID API",
            "PATCH /api/admin/roles/global/[id]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role by ID API PATCH /api/admin/roles/global/[id] should return 404 if role not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 if role not found"
        },
        {
          "ancestorTitles": [
            "Global Role by ID API",
            "PATCH /api/admin/roles/global/[id]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role by ID API PATCH /api/admin/roles/global/[id] should handle errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors"
        },
        {
          "ancestorTitles": [
            "Global Role by ID API",
            "DELETE /api/admin/roles/global/[id]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role by ID API DELETE /api/admin/roles/global/[id] should delete a global role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should delete a global role"
        },
        {
          "ancestorTitles": [
            "Global Role by ID API",
            "DELETE /api/admin/roles/global/[id]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role by ID API DELETE /api/admin/roles/global/[id] should return 404 if role not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 if role not found"
        },
        {
          "ancestorTitles": [
            "Global Role by ID API",
            "DELETE /api/admin/roles/global/[id]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role by ID API DELETE /api/admin/roles/global/[id] should handle errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674677,
        "runtime": 293,
        "slow": false,
        "start": 1744009674384
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\WithAuth.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "WithAuth component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WithAuth component renders children when user is authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders children when user is authenticated"
        },
        {
          "ancestorTitles": [
            "WithAuth component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WithAuth component renders loading component when authentication is in progress",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders loading component when authentication is in progress"
        },
        {
          "ancestorTitles": [
            "WithAuth component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WithAuth component redirects to login page when user is not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "redirects to login page when user is not authenticated"
        },
        {
          "ancestorTitles": [
            "WithAuth component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WithAuth component renders custom loading component when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders custom loading component when provided"
        },
        {
          "ancestorTitles": [
            "WithAuth component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "WithAuth component redirects to custom login path when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "redirects to custom login path when provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 2,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674679,
        "runtime": 379,
        "slow": false,
        "start": 1744009674300
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\SiteMobileCard.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteMobileCard Component - Interaction"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteMobileCard Component - Interaction calls onEdit when edit button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "calls onEdit when edit button is clicked"
        },
        {
          "ancestorTitles": [
            "SiteMobileCard Component - Interaction"
          ],
          "duration": 64,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteMobileCard Component - Interaction calls onDelete when delete button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onDelete when delete button is clicked"
        },
        {
          "ancestorTitles": [
            "SiteMobileCard Component - Interaction"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteMobileCard Component - Interaction expands/collapses details when card is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "expands/collapses details when card is clicked"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674729,
        "runtime": 400,
        "slow": false,
        "start": 1744009674329
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\SiteMobileCard.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteMobileCard Component - Basic Rendering"
          ],
          "duration": 33,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteMobileCard Component - Basic Rendering renders site basic information correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders site basic information correctly"
        },
        {
          "ancestorTitles": [
            "SiteMobileCard Component - Basic Rendering"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteMobileCard Component - Basic Rendering displays domain information",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays domain information"
        },
        {
          "ancestorTitles": [
            "SiteMobileCard Component - Basic Rendering"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteMobileCard Component - Basic Rendering shows created date",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows created date"
        },
        {
          "ancestorTitles": [
            "SiteMobileCard Component - Basic Rendering"
          ],
          "duration": 78,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteMobileCard Component - Basic Rendering renders action buttons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders action buttons"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674761,
        "runtime": 216,
        "slow": false,
        "start": 1744009674545
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\sites\\domains\\verify\\integration.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Domain Verification API Integration Test"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API Integration Test should verify a domain with correct DNS records",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify a domain with correct DNS records"
        },
        {
          "ancestorTitles": [
            "Domain Verification API Integration Test"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API Integration Test should fail verification with incorrect A record",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should fail verification with incorrect A record"
        },
        {
          "ancestorTitles": [
            "Domain Verification API Integration Test"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API Integration Test should handle DNS resolution errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle DNS resolution errors gracefully"
        },
        {
          "ancestorTitles": [
            "Domain Verification API Integration Test"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API Integration Test should handle domains that are already objects with verification status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle domains that are already objects with verification status"
        },
        {
          "ancestorTitles": [
            "Domain Verification API Integration Test"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API Integration Test should automatically verify test domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should automatically verify test domains"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674765,
        "runtime": 255,
        "slow": false,
        "start": 1744009674510
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\auth\\edge-cases.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Authentication Edge Cases",
            "Missing or Invalid Parameters"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Edge Cases Missing or Invalid Parameters should reject requests with missing username",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject requests with missing username"
        },
        {
          "ancestorTitles": [
            "Authentication Edge Cases",
            "Missing or Invalid Parameters"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Edge Cases Missing or Invalid Parameters should reject requests with missing proof",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject requests with missing proof"
        },
        {
          "ancestorTitles": [
            "Authentication Edge Cases",
            "Missing or Invalid Parameters"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Edge Cases Missing or Invalid Parameters should reject requests with missing public signals",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject requests with missing public signals"
        },
        {
          "ancestorTitles": [
            "Authentication Edge Cases",
            "Missing or Invalid Parameters"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Edge Cases Missing or Invalid Parameters should reject requests with missing CSRF token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject requests with missing CSRF token"
        },
        {
          "ancestorTitles": [
            "Authentication Edge Cases",
            "User Not Found"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Edge Cases User Not Found should reject authentication for non-existent users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject authentication for non-existent users"
        },
        {
          "ancestorTitles": [
            "Authentication Edge Cases",
            "Worker Pool Errors"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Edge Cases Worker Pool Errors should handle worker pool task failures",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle worker pool task failures"
        },
        {
          "ancestorTitles": [
            "Authentication Edge Cases",
            "Worker Pool Errors"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Edge Cases Worker Pool Errors should handle worker pool exceptions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle worker pool exceptions"
        },
        {
          "ancestorTitles": [
            "Authentication Edge Cases",
            "Redis Errors"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Edge Cases Redis Errors should handle Redis errors during user lookup",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors during user lookup"
        },
        {
          "ancestorTitles": [
            "Authentication Edge Cases",
            "Progressive Delay"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Edge Cases Progressive Delay should apply progressive delay for failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply progressive delay for failed attempts"
        },
        {
          "ancestorTitles": [
            "Authentication Edge Cases",
            "Concurrent Requests"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Edge Cases Concurrent Requests should handle concurrent authentication requests",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle concurrent authentication requests"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 2,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674760,
        "runtime": 273,
        "slow": false,
        "start": 1744009674487
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\user-flows\\listing-management.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Listing Management"
          ],
          "duration": 3,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 201,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\integration\\user-flows\\listing-management.test.ts:66:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Listing Management should create and retrieve a new listing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should create and retrieve a new listing"
        },
        {
          "ancestorTitles": [
            "Listing Management"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Management should filter listings by category",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter listings by category"
        },
        {
          "ancestorTitles": [
            "Listing Management"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 409,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m409\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m409\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\integration\\user-flows\\listing-management.test.ts:166:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Listing Management should prevent creation of listings with duplicate slugs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should prevent creation of listings with duplicate slugs"
        },
        {
          "ancestorTitles": [
            "Listing Management"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Management should verify data integrity across site and category relationships",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify data integrity across site and category relationships"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mListing Management › should create and retrieve a new listing\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m201\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 64 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 65 |\u001b[39m     \u001b[90m// Verify response is successful\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 66 |\u001b[39m     expect(createResponse\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 67 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 68 |\u001b[39m     \u001b[90m// Parse the response to get the created listing\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 69 |\u001b[39m     \u001b[36mconst\u001b[39m createdListing \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/user-flows/listing-management.test.ts\u001b[39m\u001b[0m\u001b[2m:66:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mListing Management › should prevent creation of listings with duplicate slugs\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m409\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 164 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 165 |\u001b[39m     \u001b[90m// Verify response is a conflict (409)\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 166 |\u001b[39m     expect(createResponse\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m409\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 167 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 168 |\u001b[39m     \u001b[90m// Parse the response to get the error\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 169 |\u001b[39m     \u001b[36mconst\u001b[39m responseData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/user-flows/listing-management.test.ts\u001b[39m\u001b[0m\u001b[2m:166:35)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674793,
        "runtime": 369,
        "slow": false,
        "start": 1744009674424
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\__tests__\\SecurityDashboard.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SecurityDashboard"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityDashboard renders the security dashboard with all sections",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the security dashboard with all sections"
        },
        {
          "ancestorTitles": [
            "SecurityDashboard"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityDashboard allows filtering by date range",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "allows filtering by date range"
        },
        {
          "ancestorTitles": [
            "SecurityDashboard"
          ],
          "duration": 35,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityDashboard allows filtering by status and risk level",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "allows filtering by status and risk level"
        },
        {
          "ancestorTitles": [
            "SecurityDashboard"
          ],
          "duration": 42,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityDashboard allows clearing filters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "allows clearing filters"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674801,
        "runtime": 338,
        "slow": false,
        "start": 1744009674463
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoriesMobileView.url.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoriesMobileView URL Construction Tests"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView URL Construction Tests constructs correct URLs in single site mode (no site slug)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "constructs correct URLs in single site mode (no site slug)"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView URL Construction Tests"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView URL Construction Tests constructs correct URLs in multi-site mode (with site slug)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "constructs correct URLs in multi-site mode (with site slug)"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView URL Construction Tests"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView URL Construction Tests handles different site slugs correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles different site slugs correctly"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView URL Construction Tests"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView URL Construction Tests constructs correct URLs with special characters in slugs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "constructs correct URLs with special characters in slugs"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView URL Construction Tests"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView URL Construction Tests handles site slugs with special characters correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles site slugs with special characters correctly"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView URL Construction Tests"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView URL Construction Tests handles both empty slug and null slug edge cases",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles both empty slug and null slug edge cases"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674828,
        "runtime": 313,
        "slow": false,
        "start": 1744009674515
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\LinkUtilities.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Link Utility Components",
            "CategoryLink"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Link Utility Components CategoryLink renders with the correct href and children",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with the correct href and children"
        },
        {
          "ancestorTitles": [
            "Link Utility Components",
            "CategoryLink"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Link Utility Components CategoryLink works with minimal category object containing only slug",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "works with minimal category object containing only slug"
        },
        {
          "ancestorTitles": [
            "Link Utility Components",
            "ListingLink"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Link Utility Components ListingLink renders with the correct href and children",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with the correct href and children"
        },
        {
          "ancestorTitles": [
            "Link Utility Components",
            "ListingLink"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Link Utility Components ListingLink falls back to categoryId when categorySlug is not available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "falls back to categoryId when categorySlug is not available"
        },
        {
          "ancestorTitles": [
            "Link Utility Components",
            "ListingLinkWithCategory"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Link Utility Components ListingLinkWithCategory renders with the correct href and children",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with the correct href and children"
        },
        {
          "ancestorTitles": [
            "Link Utility Components",
            "Additional props forwarding"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Link Utility Components Additional props forwarding forwards additional props to the underlying link",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "forwards additional props to the underlying link"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/audit-operations.test.ts\u001b[39m\u001b[0m\u001b[2m:10:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\audit-operations.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009674887,
        "runtime": 236,
        "slow": false,
        "start": 1744009674651
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\audit\\audit-logging.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Audit Logging Tests"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Audit Logging Tests logs CROSS_TENANT_ACCESS_ATTEMPT when accessing another tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "logs CROSS_TENANT_ACCESS_ATTEMPT when accessing another tenant"
        },
        {
          "ancestorTitles": [
            "Audit Logging Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Audit Logging Tests logs UNAUTHORIZED_TENANT_ACCESS when user does not belong to tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "logs UNAUTHORIZED_TENANT_ACCESS when user does not belong to tenant"
        },
        {
          "ancestorTitles": [
            "Audit Logging Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Audit Logging Tests logs PERMISSION_DENIED when user lacks required permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "logs PERMISSION_DENIED when user lacks required permission"
        },
        {
          "ancestorTitles": [
            "Audit Logging Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Audit Logging Tests correlates events with request IDs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "correlates events with request IDs"
        },
        {
          "ancestorTitles": [
            "Audit Logging Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Audit Logging Tests includes accurate timestamps for event sequencing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "includes accurate timestamps for event sequencing"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/redis/memory-store.ts\u001b[2m:16:10)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/connection-manager.ts\u001b[2m:60:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/client.ts\u001b[2m:36:28)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/index.ts\u001b[2m:9:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis.ts\u001b[2m:7:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/audit/audit-service.ts\u001b[2m:21:55)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/key-namespace-service.ts\u001b[2m:29:23)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant/tenant-service.ts\u001b[2m:21:30)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant/index.ts\u001b[2m:14:76)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/app/search/page.tsx\u001b[2m:23:17)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/app/search/page.test.tsx\u001b[39m\u001b[0m\u001b[2m:70:55)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\app\\search\\page.test.tsx",
      "testResults": []
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/api/admin/dashboard/activity.test.ts\u001b[39m\u001b[0m\u001b[2m:21:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\dashboard\\activity.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675013,
        "runtime": 325,
        "slow": false,
        "start": 1744009674688
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\globalRoles\\__tests__\\TenantSelector.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "TenantSelector Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector Component renders with the proper user information",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with the proper user information"
        },
        {
          "ancestorTitles": [
            "TenantSelector Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector Component disables the confirm button when no tenant ID is entered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "disables the confirm button when no tenant ID is entered"
        },
        {
          "ancestorTitles": [
            "TenantSelector Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector Component enables the confirm button when tenant ID is entered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "enables the confirm button when tenant ID is entered"
        },
        {
          "ancestorTitles": [
            "TenantSelector Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector Component calls onCancel when Cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel when Cancel button is clicked"
        },
        {
          "ancestorTitles": [
            "TenantSelector Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector Component calls onConfirm with tenant ID when confirm button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onConfirm with tenant ID when confirm button is clicked"
        },
        {
          "ancestorTitles": [
            "TenantSelector Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector Component disables buttons when isLoading is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "disables buttons when isLoading is true"
        },
        {
          "ancestorTitles": [
            "TenantSelector Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector Component shows \"Removing...\" text when isLoading is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows \"Removing...\" text when isLoading is true"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675022,
        "runtime": 311,
        "slow": false,
        "start": 1744009674711
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\cross-cutting\\ErrorRecoveryFixed.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Error Recovery Flows - Fixed Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Recovery Flows - Fixed Tests should retry failed API requests automatically",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should retry failed API requests automatically"
        },
        {
          "ancestorTitles": [
            "Error Recovery Flows - Fixed Tests"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Recovery Flows - Fixed Tests should show a user-friendly error and retry button when API calls fail",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should show a user-friendly error and retry button when API calls fail"
        },
        {
          "ancestorTitles": [
            "Error Recovery Flows - Fixed Tests"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Recovery Flows - Fixed Tests should recover gracefully from component errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should recover gracefully from component errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675027,
        "runtime": 201,
        "slow": false,
        "start": 1744009674826
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\dashboard\\hooks\\useSiteMetrics.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useSiteMetrics Hook"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSiteMetrics Hook returns loading state initially",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns loading state initially"
        },
        {
          "ancestorTitles": [
            "useSiteMetrics Hook"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSiteMetrics Hook returns metrics data after loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns metrics data after loading"
        },
        {
          "ancestorTitles": [
            "useSiteMetrics Hook"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSiteMetrics Hook returns error if siteSlug is missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error if siteSlug is missing"
        },
        {
          "ancestorTitles": [
            "useSiteMetrics Hook"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSiteMetrics Hook refetches data when refetch is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "refetches data when refetch is called"
        },
        {
          "ancestorTitles": [
            "useSiteMetrics Hook"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSiteMetrics Hook updates when period changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updates when period changes"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675118,
        "runtime": 311,
        "slow": false,
        "start": 1744009674807
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\middleware.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Middleware"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Middleware should skip static assets",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should skip static assets"
        },
        {
          "ancestorTitles": [
            "Middleware"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Middleware should rewrite API paths to include site slug",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should rewrite API paths to include site slug"
        },
        {
          "ancestorTitles": [
            "Middleware"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Middleware should not rewrite already site-specific API paths",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not rewrite already site-specific API paths"
        },
        {
          "ancestorTitles": [
            "Middleware"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Middleware should not rewrite admin API paths",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not rewrite admin API paths"
        },
        {
          "ancestorTitles": [
            "Middleware"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Middleware should not rewrite non-site-specific API paths",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not rewrite non-site-specific API paths"
        },
        {
          "ancestorTitles": [
            "Middleware"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Middleware should handle custom domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle custom domains"
        },
        {
          "ancestorTitles": [
            "Middleware"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Middleware should handle case-insensitive domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle case-insensitive domains"
        },
        {
          "ancestorTitles": [
            "Middleware"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Middleware should handle subdomains correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle subdomains correctly"
        },
        {
          "ancestorTitles": [
            "Middleware"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Middleware should handle different TLDs correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle different TLDs correctly"
        },
        {
          "ancestorTitles": [
            "Middleware"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Middleware should handle debug site slug parameter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle debug site slug parameter"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675123,
        "runtime": 281,
        "slow": false,
        "start": 1744009674842
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-listing\\ClearSiteFilter.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ClearSiteFilter"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ClearSiteFilter should call clearSiteFilter when the clear button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call clearSiteFilter when the clear button is clicked"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675225,
        "runtime": 298,
        "slow": false,
        "start": 1744009674927
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useLoginAttempts.new.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useLoginAttempts"
          ],
          "duration": 39,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttempts returns login attempts data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "returns login attempts data"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675263,
        "runtime": 485,
        "slow": false,
        "start": 1744009674778
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\SiteTableRow.interaction.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteTableRow Component - Interaction"
          ],
          "duration": 89,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTableRow Component - Interaction calls onDelete when delete button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onDelete when delete button is clicked"
        },
        {
          "ancestorTitles": [
            "SiteTableRow Component - Interaction"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTableRow Component - Interaction navigates to edit page when edit button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "navigates to edit page when edit button is clicked"
        },
        {
          "ancestorTitles": [
            "SiteTableRow Component - Interaction"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTableRow Component - Interaction navigates to view page when view button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "navigates to view page when view button is clicked"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675272,
        "runtime": 405,
        "slow": false,
        "start": 1744009674867
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\app\\search\\loading.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SearchLoading Component"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchLoading Component renders search form skeleton",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders search form skeleton"
        },
        {
          "ancestorTitles": [
            "SearchLoading Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchLoading Component renders search results skeleton",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders search results skeleton"
        },
        {
          "ancestorTitles": [
            "SearchLoading Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchLoading Component renders listing card skeletons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders listing card skeletons"
        },
        {
          "ancestorTitles": [
            "SearchLoading Component"
          ],
          "duration": 39,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchLoading Component applies responsive design classes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "applies responsive design classes"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/redis/memory-store.ts\u001b[2m:16:10)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/connection-manager.ts\u001b[2m:60:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/client.ts\u001b[2m:36:28)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/index.ts\u001b[2m:9:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis.ts\u001b[2m:7:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/audit/audit-service.ts\u001b[2m:21:55)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/key-namespace-service.ts\u001b[2m:29:23)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/security/cross-tenant-isolation.test.ts\u001b[39m\u001b[0m\u001b[2m:10:30)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\security\\cross-tenant-isolation.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675391,
        "runtime": 464,
        "slow": false,
        "start": 1744009674927
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\contexts\\__tests__\\PublicTenantSiteContext.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "PublicTenantSiteContext"
          ],
          "duration": 25,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PublicTenantSiteContext should load tenant and site context from localStorage",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should load tenant and site context from localStorage"
        },
        {
          "ancestorTitles": [
            "PublicTenantSiteContext"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PublicTenantSiteContext should redirect to tenant page when changing tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to tenant page when changing tenant"
        },
        {
          "ancestorTitles": [
            "PublicTenantSiteContext"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PublicTenantSiteContext should redirect to site page when changing site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should redirect to site page when changing site"
        },
        {
          "ancestorTitles": [
            "PublicTenantSiteContext"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PublicTenantSiteContext should not load tenant context for unauthenticated users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should not load tenant context for unauthenticated users"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 11,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675401,
        "runtime": 572,
        "slow": false,
        "start": 1744009674829
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoriesMobileView.edgecases.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoriesMobileView Edge Cases"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Edge Cases handles extremely long category names without breaking layout",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles extremely long category names without breaking layout"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Edge Cases"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Edge Cases handles empty or blank field values gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty or blank field values gracefully"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Edge Cases"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Edge Cases properly escapes and renders special characters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "properly escapes and renders special characters"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Edge Cases"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Edge Cases correctly displays deeply nested category relationships",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "correctly displays deeply nested category relationships"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Edge Cases"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Edge Cases handles null fields gracefully without errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "handles null fields gracefully without errors"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Edge Cases"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Edge Cases handles an empty array of categories gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles an empty array of categories gracefully"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Edge Cases"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Edge Cases builds correct URLs with empty or special character slugs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "builds correct URLs with empty or special character slugs"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Edge Cases"
          ],
          "duration": 25,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Edge Cases handles multiple categories with the same name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "handles multiple categories with the same name"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Edge Cases"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Edge Cases handles child counts with various values correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "handles child counts with various values correctly"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Edge Cases"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Edge Cases displays correctly when showSiteColumn toggled during component lifecycle",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "displays correctly when showSiteColumn toggled during component lifecycle"
        },
        {
          "ancestorTitles": [
            "CategoriesMobileView Edge Cases"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoriesMobileView Edge Cases handles dynamic category list changes correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles dynamic category list changes correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/utils/tenantAccessControl.ts\u001b[2m:31:34)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/components/admin/auth/guards/__tests__/permission-guard/setup.ts\u001b[39m\u001b[0m\u001b[2m:34:70)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/components/admin/auth/guards/__tests__/permission-guard/setup.test.ts\u001b[39m\u001b[0m\u001b[2m:5:16)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\guards\\__tests__\\permission-guard\\setup.test.ts",
      "testResults": []
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/tenant-isolation.test.ts\u001b[39m\u001b[0m\u001b[2m:7:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\tenant-isolation.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675508,
        "runtime": 451,
        "slow": false,
        "start": 1744009675057
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\common\\SiteFormValidator.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteFormValidator Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteFormValidator Component renders children when no validation is needed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders children when no validation is needed"
        },
        {
          "ancestorTitles": [
            "SiteFormValidator Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteFormValidator Component validates form data when next button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates form data when next button is clicked"
        },
        {
          "ancestorTitles": [
            "SiteFormValidator Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteFormValidator Component calls onSuccess when validation passes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onSuccess when validation passes"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 3,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675502,
        "runtime": 706,
        "slow": false,
        "start": 1744009674796
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\performance\\large-dataset.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Large Dataset Handling",
            "API Response Pagination"
          ],
          "duration": 5,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m10\u001b[39m\nReceived:   \u001b[31m0\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m10\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.toBeGreaterThan (C:\\Users\\T\\directorymonster\\tests\\integration\\performance\\large-dataset.test.ts:248:44)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Large Dataset Handling API Response Pagination should return paginated results for listings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "failed",
          "title": "should return paginated results for listings"
        },
        {
          "ancestorTitles": [
            "Large Dataset Handling",
            "API Response Pagination"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Large Dataset Handling API Response Pagination should navigate through pages correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate through pages correctly"
        },
        {
          "ancestorTitles": [
            "Large Dataset Handling",
            "API Response Pagination"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Large Dataset Handling API Response Pagination should handle invalid pagination parameters gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 12,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle invalid pagination parameters gracefully"
        },
        {
          "ancestorTitles": [
            "Large Dataset Handling",
            "Memory Usage Optimization"
          ],
          "duration": 2,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m51200\u001b[39m\nReceived:   \u001b[31mInfinity\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m51200\u001b[39m\nReceived:   \u001b[31mInfinity\u001b[39m\n    at Object.toBeLessThan (C:\\Users\\T\\directorymonster\\tests\\integration\\performance\\large-dataset.test.ts:401:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Large Dataset Handling Memory Usage Optimization should maintain reasonable memory usage with large datasets",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should maintain reasonable memory usage with large datasets"
        },
        {
          "ancestorTitles": [
            "Large Dataset Handling",
            "Response Time Performance"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Large Dataset Handling Response Time Performance should maintain acceptable response times with different dataset sizes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should maintain acceptable response times with different dataset sizes"
        },
        {
          "ancestorTitles": [
            "Large Dataset Handling",
            "Response Time Performance"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Large Dataset Handling Response Time Performance should show reasonable scaling with dataset size",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show reasonable scaling with dataset size"
        },
        {
          "ancestorTitles": [
            "Large Dataset Handling",
            "Data Consistency"
          ],
          "duration": 2,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.toBeGreaterThan (C:\\Users\\T\\directorymonster\\tests\\integration\\performance\\large-dataset.test.ts:536:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Large Dataset Handling Data Consistency should maintain data consistency across paginated results",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should maintain data consistency across paginated results"
        },
        {
          "ancestorTitles": [
            "Large Dataset Handling",
            "Search Performance with Large Datasets"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Large Dataset Handling Search Performance with Large Datasets should efficiently handle search queries on large datasets",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should efficiently handle search queries on large datasets"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mLarge Dataset Handling › API Response Pagination › should return paginated results for listings\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m10\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 246 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 247 |\u001b[39m       \u001b[90m// Total results should be greater than page size (since we added at least MEDIUM size dataset)\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 248 |\u001b[39m       expect(data\u001b[33m.\u001b[39mpagination\u001b[33m.\u001b[39mtotalResults)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m10\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 249 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 250 |\u001b[39m       \u001b[90m// Total pages calculation should be correct\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 251 |\u001b[39m       expect(data\u001b[33m.\u001b[39mpagination\u001b[33m.\u001b[39mtotalPages)\u001b[33m.\u001b[39mtoBe(\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/performance/large-dataset.test.ts\u001b[39m\u001b[0m\u001b[2m:248:44)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mLarge Dataset Handling › Memory Usage Optimization › should maintain reasonable memory usage with large datasets\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: < \u001b[32m51200\u001b[39m\n    Received:   \u001b[31mInfinity\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 399 |\u001b[39m       \u001b[90m// We expect memory usage to be reasonable - less than 50KB per listing\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 400 |\u001b[39m       \u001b[90m// This is a heuristic and may need adjustment based on application specifics\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 401 |\u001b[39m       expect(memoryPerListing)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m50\u001b[39m \u001b[33m*\u001b[39m \u001b[35m1024\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// 50KB per listing\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 402 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 403 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 404 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeLessThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/performance/large-dataset.test.ts\u001b[39m\u001b[0m\u001b[2m:401:32)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mLarge Dataset Handling › Data Consistency › should maintain data consistency across paginated results\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 534 |\u001b[39m       \u001b[90m// In test mode, we'll skip the actual ID comparison since we're using different data sources\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 535 |\u001b[39m       \u001b[90m// and just verify that we have the expected number of listings\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 536 |\u001b[39m       expect(paginatedListings\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 537 |\u001b[39m       expect(allListingsData\u001b[33m.\u001b[39mresults\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 538 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 539 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/performance/large-dataset.test.ts\u001b[39m\u001b[0m\u001b[2m:536:40)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675569,
        "runtime": 382,
        "slow": false,
        "start": 1744009675187
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\components\\admin\\AdminHeader.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "AdminHeader"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminHeader should include the UnifiedAuthComponent",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should include the UnifiedAuthComponent"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675576,
        "runtime": 525,
        "slow": false,
        "start": 1744009675051
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\search\\SearchResults.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SearchResults Component"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchResults Component shows loading state initially",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows loading state initially"
        },
        {
          "ancestorTitles": [
            "SearchResults Component"
          ],
          "duration": 50,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchResults Component applies filter for category and updates API request",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "applies filter for category and updates API request"
        },
        {
          "ancestorTitles": [
            "SearchResults Component"
          ],
          "duration": 29,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchResults Component handles pagination with the new API response format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles pagination with the new API response format"
        },
        {
          "ancestorTitles": [
            "SearchResults Component"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchResults Component handles API errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675678,
        "runtime": 326,
        "slow": false,
        "start": 1744009675352
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\roles\\global-id-users.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Global Role Users API",
            "GET /api/admin/roles/global/[id]/users"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role Users API GET /api/admin/roles/global/[id]/users should return users with a specific global role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should return users with a specific global role"
        },
        {
          "ancestorTitles": [
            "Global Role Users API",
            "GET /api/admin/roles/global/[id]/users"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role Users API GET /api/admin/roles/global/[id]/users should return 404 if role not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 if role not found"
        },
        {
          "ancestorTitles": [
            "Global Role Users API",
            "GET /api/admin/roles/global/[id]/users"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role Users API GET /api/admin/roles/global/[id]/users should handle errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675713,
        "runtime": 415,
        "slow": false,
        "start": 1744009675298
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-management\\SiteCreationDomains.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Site Creation - Domain Management Step"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Creation - Domain Management Step should add a domain to the site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should add a domain to the site"
        },
        {
          "ancestorTitles": [
            "Integration: Site Creation - Domain Management Step"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Creation - Domain Management Step should show domain validation errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show domain validation errors"
        },
        {
          "ancestorTitles": [
            "Integration: Site Creation - Domain Management Step"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Creation - Domain Management Step should remove a domain from the site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a domain from the site"
        },
        {
          "ancestorTitles": [
            "Integration: Site Creation - Domain Management Step"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Creation - Domain Management Step should disable the add button when no domain is entered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should disable the add button when no domain is entered"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675718,
        "runtime": 543,
        "slow": false,
        "start": 1744009675175
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\roles\\global-id-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/roles/global/[id] ACL Protection"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/roles/global/[id] ACL Protection should use withSecureTenantPermission with role:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with role:read"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/roles/global/[id] ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/roles/global/[id] ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "PATCH /api/admin/roles/global/[id] ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PATCH /api/admin/roles/global/[id] ACL Protection should use withSecureTenantPermission with role:update",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with role:update"
        },
        {
          "ancestorTitles": [
            "PATCH /api/admin/roles/global/[id] ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PATCH /api/admin/roles/global/[id] ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "DELETE /api/admin/roles/global/[id] ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DELETE /api/admin/roles/global/[id] ACL Protection should use withSecureTenantPermission with role:delete",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with role:delete"
        },
        {
          "ancestorTitles": [
            "DELETE /api/admin/roles/global/[id] ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DELETE /api/admin/roles/global/[id] ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/multiple-roles-users.test.ts\u001b[39m\u001b[0m\u001b[2m:7:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\multiple-roles-users.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675757,
        "runtime": 378,
        "slow": false,
        "start": 1744009675379
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\tenant\\TenantSelector.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "TenantSelector Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector Component renders tenant selector dropdown when user has multiple tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders tenant selector dropdown when user has multiple tenants"
        },
        {
          "ancestorTitles": [
            "TenantSelector Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector Component does not render when user has only one tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not render when user has only one tenant"
        },
        {
          "ancestorTitles": [
            "TenantSelector Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector Component shows loading state when tenants are being fetched",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows loading state when tenants are being fetched"
        },
        {
          "ancestorTitles": [
            "TenantSelector Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector Component calls setCurrentTenantId when tenant selection changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls setCurrentTenantId when tenant selection changes"
        },
        {
          "ancestorTitles": [
            "TenantSelector Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector Component displays tenant names in the dropdown",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "displays tenant names in the dropdown"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service.test.ts\u001b[39m\u001b[0m\u001b[2m:9:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675829,
        "runtime": 332,
        "slow": false,
        "start": 1744009675497
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\SiteTableHeader.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteTableHeader Component - Basic Rendering"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTableHeader Component - Basic Rendering renders search input and create button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders search input and create button"
        },
        {
          "ancestorTitles": [
            "SiteTableHeader Component - Basic Rendering"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTableHeader Component - Basic Rendering displays the search term in the input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays the search term in the input"
        },
        {
          "ancestorTitles": [
            "SiteTableHeader Component - Basic Rendering"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTableHeader Component - Basic Rendering allows custom create path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "allows custom create path"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675843,
        "runtime": 309,
        "slow": false,
        "start": 1744009675534
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-listing\\SiteSpecificValidation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Site-Specific Validation Rules"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site-Specific Validation Rules should apply site-specific validation rules during listing updates",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply site-specific validation rules during listing updates"
        },
        {
          "ancestorTitles": [
            "Integration: Site-Specific Validation Rules"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site-Specific Validation Rules should pass validation when site-specific rules are satisfied",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass validation when site-specific rules are satisfied"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675888,
        "runtime": 322,
        "slow": false,
        "start": 1744009675566
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\tenant\\__tests__\\TenantSelector.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "TenantSelector"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector should not render when user has access to only one tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not render when user has access to only one tenant"
        },
        {
          "ancestorTitles": [
            "TenantSelector"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector should render a dropdown when user has access to multiple tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should render a dropdown when user has access to multiple tenants"
        },
        {
          "ancestorTitles": [
            "TenantSelector"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector should not include the public tenant in the dropdown",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not include the public tenant in the dropdown"
        },
        {
          "ancestorTitles": [
            "TenantSelector"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector should call setCurrentTenantId when a tenant is selected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call setCurrentTenantId when a tenant is selected"
        },
        {
          "ancestorTitles": [
            "TenantSelector"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSelector should show loading state when tenants are being loaded",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show loading state when tenants are being loaded"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675945,
        "runtime": 388,
        "slow": false,
        "start": 1744009675557
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\crypto\\dynamic-salt-generation.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Dynamic Salt Generation Tests",
            "Salt Generation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Dynamic Salt Generation Tests Salt Generation should generate cryptographically secure random salts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate cryptographically secure random salts"
        },
        {
          "ancestorTitles": [
            "Dynamic Salt Generation Tests",
            "Salt Generation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Dynamic Salt Generation Tests Salt Generation should get existing salt for a user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should get existing salt for a user"
        },
        {
          "ancestorTitles": [
            "Dynamic Salt Generation Tests",
            "Salt Generation"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Dynamic Salt Generation Tests Salt Generation should generate a new salt if none exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a new salt if none exists"
        },
        {
          "ancestorTitles": [
            "Dynamic Salt Generation Tests",
            "Salt Generation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Dynamic Salt Generation Tests Salt Generation should update salt for a user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should update salt for a user"
        },
        {
          "ancestorTitles": [
            "Dynamic Salt Generation Tests",
            "Salt Generation"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Dynamic Salt Generation Tests Salt Generation should delete salt for a user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should delete salt for a user"
        },
        {
          "ancestorTitles": [
            "Dynamic Salt Generation Tests",
            "Integration with ZKP Authentication"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Dynamic Salt Generation Tests Integration with ZKP Authentication should generate and verify proofs with dynamic salts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate and verify proofs with dynamic salts"
        },
        {
          "ancestorTitles": [
            "Dynamic Salt Generation Tests",
            "Integration with ZKP Authentication"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Dynamic Salt Generation Tests Integration with ZKP Authentication should generate different proofs with different salts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate different proofs with different salts"
        },
        {
          "ancestorTitles": [
            "Dynamic Salt Generation Tests",
            "Integration with ZKP Authentication"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Dynamic Salt Generation Tests Integration with ZKP Authentication should not verify a proof with a different salt",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not verify a proof with a different salt"
        },
        {
          "ancestorTitles": [
            "Dynamic Salt Generation Tests",
            "Integration with ZKP Authentication"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Dynamic Salt Generation Tests Integration with ZKP Authentication should handle salt rotation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle salt rotation"
        },
        {
          "ancestorTitles": [
            "Dynamic Salt Generation Tests",
            "Security Properties"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Dynamic Salt Generation Tests Security Properties should not reveal the salt in the proof",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not reveal the salt in the proof"
        },
        {
          "ancestorTitles": [
            "Dynamic Salt Generation Tests",
            "Security Properties"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Dynamic Salt Generation Tests Security Properties should be resistant to timing attacks",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be resistant to timing attacks"
        },
        {
          "ancestorTitles": [
            "Dynamic Salt Generation Tests",
            "Security Properties"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Dynamic Salt Generation Tests Security Properties should use cryptographically secure random number generation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use cryptographically secure random number generation"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009675955,
        "runtime": 401,
        "slow": false,
        "start": 1744009675554
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\__tests__\\MainHeader.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "MainHeader"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainHeader renders the header with site name and logo",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the header with site name and logo"
        },
        {
          "ancestorTitles": [
            "MainHeader"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainHeader renders categories in the navigation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders categories in the navigation"
        },
        {
          "ancestorTitles": [
            "MainHeader"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainHeader includes the UnifiedAuthComponent",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "includes the UnifiedAuthComponent"
        },
        {
          "ancestorTitles": [
            "MainHeader"
          ],
          "duration": 55,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainHeader shows tenant and site selectors for authenticated users with multiple tenants and sites",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "shows tenant and site selectors for authenticated users with multiple tenants and sites"
        },
        {
          "ancestorTitles": [
            "MainHeader"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainHeader does not show tenant selector for users with only one tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not show tenant selector for users with only one tenant"
        },
        {
          "ancestorTitles": [
            "MainHeader"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainHeader does not show site selector for users with only one site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not show site selector for users with only one site"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676027,
        "runtime": 409,
        "slow": false,
        "start": 1744009675618
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\__tests__\\MainLayout.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "MainLayout Component"
          ],
          "duration": 29,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainLayout Component renders the layout with all components",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the layout with all components"
        },
        {
          "ancestorTitles": [
            "MainLayout Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainLayout Component passes site and categories props to MainHeader",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "passes site and categories props to MainHeader"
        },
        {
          "ancestorTitles": [
            "MainLayout Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainLayout Component passes site prop to MainFooter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "passes site prop to MainFooter"
        },
        {
          "ancestorTitles": [
            "MainLayout Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainLayout Component renders with empty categories array when not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with empty categories array when not provided"
        },
        {
          "ancestorTitles": [
            "MainLayout Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainLayout Component applies correct CSS classes for layout",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "applies correct CSS classes for layout"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676050,
        "runtime": 437,
        "slow": false,
        "start": 1744009675613
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\hooks\\useCategories.pagination.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useCategories Hook - Pagination"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Pagination should initialize pagination with default settings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize pagination with default settings"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Pagination"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Pagination should update current categories when changing page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should update current categories when changing page"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Pagination"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Pagination should not go beyond valid page range",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should not go beyond valid page range"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Pagination"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Pagination should update pagination when changing items per page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should update pagination when changing items per page"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Pagination"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Pagination should reset to page 1 when changing items per page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset to page 1 when changing items per page"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Pagination"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Pagination should handle pagination with filtered results",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle pagination with filtered results"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Pagination"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Pagination should handle edge case of zero filtered results",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle edge case of zero filtered results"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Pagination"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Pagination should handle pagination when applying filters on non-first page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle pagination when applying filters on non-first page"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Pagination"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Pagination should maintain current page when data doesn't change pagination",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should maintain current page when data doesn't change pagination"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Pagination"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Pagination should adjust current page when total pages decreases below current page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should adjust current page when total pages decreases below current page"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mtests/integration/setup.ts\u001b[2m:41:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/integration/performance/concurrent-operations/transaction-isolation.test.ts\u001b[39m\u001b[0m\u001b[2m:10:16)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\performance\\concurrent-operations\\transaction-isolation.test.ts",
      "testResults": []
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/auth/index.ts\u001b[2m:31:22)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22m\u001b[0m\u001b[36mtests/api/admin/users/reset-password.test.ts\u001b[39m\u001b[0m\u001b[2m:5:27)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\admin\\users\\reset-password.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676171,
        "runtime": 378,
        "slow": false,
        "start": 1744009675793
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\sites\\hooks\\useDomainVerification.integration.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useDomainVerification Integration Test"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomainVerification Integration Test should handle the complete verification flow",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 19,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle the complete verification flow"
        },
        {
          "ancestorTitles": [
            "useDomainVerification Integration Test"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomainVerification Integration Test should handle custom API endpoint",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle custom API endpoint"
        },
        {
          "ancestorTitles": [
            "useDomainVerification Integration Test"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomainVerification Integration Test should handle server error responses",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle server error responses"
        },
        {
          "ancestorTitles": [
            "useDomainVerification Integration Test"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useDomainVerification Integration Test should handle JSON parsing errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle JSON parsing errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676195,
        "runtime": 438,
        "slow": false,
        "start": 1744009675757
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\alerts\\__tests__\\AlertsHeader.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "AlertsHeader"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsHeader renders all tabs correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders all tabs correctly"
        },
        {
          "ancestorTitles": [
            "AlertsHeader"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsHeader highlights the active tab",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "highlights the active tab"
        },
        {
          "ancestorTitles": [
            "AlertsHeader"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsHeader calls onTabChange when a tab is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onTabChange when a tab is clicked"
        },
        {
          "ancestorTitles": [
            "AlertsHeader"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsHeader renders with a different active tab",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with a different active tab"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 21,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676264,
        "runtime": 403,
        "slow": false,
        "start": 1744009675861
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\redis-client.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should create and use in-memory Redis store",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should create and use in-memory Redis store"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should set and get values correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should set and get values correctly"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should delete keys correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should delete keys correctly"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should return 0 when deleting non-existent key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 0 when deleting non-existent key"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should handle multiple key deletion",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle multiple key deletion"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should find keys with wildcard pattern",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should find keys with wildcard pattern"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should find exact key without wildcard",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should find exact key without wildcard"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should handle set operations correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle set operations correctly"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should handle set removal correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle set removal correctly"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should return empty array for non-existent set",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return empty array for non-existent set"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should handle set intersection correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle set intersection correctly"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should return empty array when intersecting with non-existent set",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return empty array when intersecting with non-existent set"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should support basic transaction operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should support basic transaction operations"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should handle errors in transactions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors in transactions"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "Memory Redis Implementation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client Memory Redis Implementation should ping correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should ping correctly"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "KV Interface"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client KV Interface should get and set JSON values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should get and set JSON values"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "KV Interface"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client KV Interface should get and set string values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should get and set string values"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "KV Interface"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client KV Interface should return undefined for non-existent keys",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return undefined for non-existent keys"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "KV Interface"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client KV Interface should handle key deletion",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle key deletion"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "KV Interface"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client KV Interface should find keys by pattern",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should find keys by pattern"
        },
        {
          "ancestorTitles": [
            "Redis Client",
            "KV Interface"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Client KV Interface should handle expiration (not fully testable with in-memory implementation)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle expiration (not fully testable with in-memory implementation)"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mtests/integration/auth/acl-test-setup.ts\u001b[2m:34:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/integration/auth/acl-role-permissions.test.ts\u001b[39m\u001b[0m\u001b[2m:36:23)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\auth\\acl-role-permissions.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676332,
        "runtime": 457,
        "slow": false,
        "start": 1744009675875
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\SiteTableRow.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteTableRow Component - Basic Rendering"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTableRow Component - Basic Rendering renders site data in the correct cells",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders site data in the correct cells"
        },
        {
          "ancestorTitles": [
            "SiteTableRow Component - Basic Rendering"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTableRow Component - Basic Rendering includes action buttons with correct attributes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "includes action buttons with correct attributes"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676347,
        "runtime": 558,
        "slow": false,
        "start": 1744009675789
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\sites\\submissions\\acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/submissions ACL Protection"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/submissions ACL Protection should use withSecureTenantPermission with submission:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with submission:read"
        },
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/submissions ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/submissions ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "POST /api/sites/[siteSlug]/submissions ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/sites/[siteSlug]/submissions ACL Protection should use withSecureTenantPermission with submission:create",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with submission:create"
        },
        {
          "ancestorTitles": [
            "POST /api/sites/[siteSlug]/submissions ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/sites/[siteSlug]/submissions ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676360,
        "runtime": 377,
        "slow": false,
        "start": 1744009675983
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\activity\\__tests__\\ActivityFilters.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ActivityFilters"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFilters renders date inputs and action type selector",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders date inputs and action type selector"
        },
        {
          "ancestorTitles": [
            "ActivityFilters"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFilters calls onStartDateChange when start date is changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onStartDateChange when start date is changed"
        },
        {
          "ancestorTitles": [
            "ActivityFilters"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFilters calls onEndDateChange when end date is changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onEndDateChange when end date is changed"
        },
        {
          "ancestorTitles": [
            "ActivityFilters"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFilters calls onActionTypeChange when action type is changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onActionTypeChange when action type is changed"
        },
        {
          "ancestorTitles": [
            "ActivityFilters"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFilters calls onApplyFilters when apply button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onApplyFilters when apply button is clicked"
        },
        {
          "ancestorTitles": [
            "ActivityFilters"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFilters displays the current filter values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "displays the current filter values"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676402,
        "runtime": 206,
        "slow": false,
        "start": 1744009676196
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\SideNav.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SideNav"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SideNav renders SideNav component",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "renders SideNav component"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676414,
        "runtime": 386,
        "slow": false,
        "start": 1744009676028
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\security\\SecurityDashboard.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SecurityDashboard Integration Test"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityDashboard Integration Test renders the security dashboard with all components",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 12,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the security dashboard with all components"
        },
        {
          "ancestorTitles": [
            "SecurityDashboard Integration Test"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityDashboard Integration Test filters login attempts when filter is changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "filters login attempts when filter is changed"
        },
        {
          "ancestorTitles": [
            "SecurityDashboard Integration Test"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityDashboard Integration Test changes date range when date filter is changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "changes date range when date filter is changed"
        },
        {
          "ancestorTitles": [
            "SecurityDashboard Integration Test"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityDashboard Integration Test submits a report successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "submits a report successfully"
        },
        {
          "ancestorTitles": [
            "SecurityDashboard Integration Test"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityDashboard Integration Test blocks an IP address",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "blocks an IP address"
        },
        {
          "ancestorTitles": [
            "SecurityDashboard Integration Test"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SecurityDashboard Integration Test switches between tabs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "switches between tabs"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676459,
        "runtime": 606,
        "slow": false,
        "start": 1744009675853
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoryTableSkeleton.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTableSkeleton Component"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSkeleton Component renders the skeleton UI with loading text",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the skeleton UI with loading text"
        },
        {
          "ancestorTitles": [
            "CategoryTableSkeleton Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSkeleton Component includes animation classes for visual indication of loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "includes animation classes for visual indication of loading"
        },
        {
          "ancestorTitles": [
            "CategoryTableSkeleton Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSkeleton Component renders the skeleton rows for data representation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the skeleton rows for data representation"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676464,
        "runtime": 371,
        "slow": false,
        "start": 1744009676093
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\useCategories.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useCategories Hook"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook should initialize with provided categories data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize with provided categories data"
        },
        {
          "ancestorTitles": [
            "useCategories Hook"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook should handle search filtering correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle search filtering correctly"
        },
        {
          "ancestorTitles": [
            "useCategories Hook"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook should handle parent filtering correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle parent filtering correctly"
        },
        {
          "ancestorTitles": [
            "useCategories Hook"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook should handle sorting correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle sorting correctly"
        },
        {
          "ancestorTitles": [
            "useCategories Hook"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook should handle pagination correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle pagination correctly"
        },
        {
          "ancestorTitles": [
            "useCategories Hook"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook should handle delete confirmation correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle delete confirmation correctly"
        },
        {
          "ancestorTitles": [
            "useCategories Hook"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook should handle delete operation correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle delete operation correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/utils/tenantAccessControl.ts\u001b[2m:31:34)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/guards/PermissionGuard.tsx\u001b[2m:24:30)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/components/admin/auth/guards/__tests__/permission-guard/multiple-permissions.test.tsx\u001b[39m\u001b[0m\u001b[2m:12:26)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\guards\\__tests__\\permission-guard\\multiple-permissions.test.tsx",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676569,
        "runtime": 351,
        "slow": false,
        "start": 1744009676218
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\SiteTable.loading.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteTable Component - Loading State"
          ],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTable Component - Loading State renders a skeleton loader when loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders a skeleton loader when loading"
        },
        {
          "ancestorTitles": [
            "SiteTable Component - Loading State"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTable Component - Loading State displays a loading skeleton",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays a loading skeleton"
        },
        {
          "ancestorTitles": [
            "SiteTable Component - Loading State"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteTable Component - Loading State renders the site table header during loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the site table header during loading"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676645,
        "runtime": 351,
        "slow": false,
        "start": 1744009676294
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\user-flows\\category-management.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Category Management"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Category Management should create and retrieve a new category",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "should create and retrieve a new category"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/has-specific-role.test.ts\u001b[39m\u001b[0m\u001b[2m:7:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\has-specific-role.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676689,
        "runtime": 454,
        "slow": false,
        "start": 1744009676235
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\search\\filters\\SearchFilters.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component renders all filter sections correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders all filter sections correctly"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component shows status filter for admins",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows status filter for admins"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component calls filter change handler when category changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls filter change handler when category changes"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component calls filter change handler when featured checkbox toggles",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls filter change handler when featured checkbox toggles"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component applies initial filters when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "applies initial filters when provided"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component changes sort order and calls the filter change handler",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "changes sort order and calls the filter change handler"
        },
        {
          "ancestorTitles": [
            "SearchFilters Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchFilters Component changes status and calls the filter change handler when admin",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "changes status and calls the filter change handler when admin"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676677,
        "runtime": 515,
        "slow": false,
        "start": 1744009676162
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\search\\listing-indexer-no-mocks.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "ListingIndexer with In-Memory Redis",
            "indexListing"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer with In-Memory Redis indexListing adds listing to main index and term indices",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "adds listing to main index and term indices"
        },
        {
          "ancestorTitles": [
            "ListingIndexer with In-Memory Redis",
            "updateListing"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer with In-Memory Redis updateListing removes old references and re-indexes listing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "removes old references and re-indexes listing"
        },
        {
          "ancestorTitles": [
            "ListingIndexer with In-Memory Redis",
            "removeListing"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer with In-Memory Redis removeListing removes listing from all indices when siteId provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "removes listing from all indices when siteId provided"
        },
        {
          "ancestorTitles": [
            "ListingIndexer with In-Memory Redis",
            "searchListings"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer with In-Memory Redis searchListings filters by featured status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "filters by featured status"
        },
        {
          "ancestorTitles": [
            "ListingIndexer with In-Memory Redis",
            "searchListings"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer with In-Memory Redis searchListings filters by status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "filters by status"
        },
        {
          "ancestorTitles": [
            "ListingIndexer with In-Memory Redis",
            "searchListings"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer with In-Memory Redis searchListings filters by category",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "filters by category"
        },
        {
          "ancestorTitles": [
            "ListingIndexer with In-Memory Redis",
            "countSearchResults"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer with In-Memory Redis countSearchResults counts results with query and featured filter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "counts results with query and featured filter"
        },
        {
          "ancestorTitles": [
            "ListingIndexer with In-Memory Redis",
            "countSearchResults"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer with In-Memory Redis countSearchResults counts results with query and status filter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "counts results with query and status filter"
        },
        {
          "ancestorTitles": [
            "ListingIndexer with In-Memory Redis",
            "countSearchResults"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer with In-Memory Redis countSearchResults counts results with category filter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "counts results with category filter"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676752,
        "runtime": 389,
        "slow": false,
        "start": 1744009676363
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\test\\TestComponent.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "TestComponent"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TestComponent renders the component with title and description",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the component with title and description"
        },
        {
          "ancestorTitles": [
            "TestComponent"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TestComponent calls onButtonClick when button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onButtonClick when button is clicked"
        },
        {
          "ancestorTitles": [
            "TestComponent"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TestComponent displays the description correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays the description correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676829,
        "runtime": 382,
        "slow": false,
        "start": 1744009676447
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\DomainStep.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "DomainStep Component - Basic Rendering"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainStep Component - Basic Rendering renders the DomainStep component",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the DomainStep component"
        },
        {
          "ancestorTitles": [
            "DomainStep Component - Basic Rendering"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainStep Component - Basic Rendering displays domains list correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays domains list correctly"
        },
        {
          "ancestorTitles": [
            "DomainStep Component - Basic Rendering"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainStep Component - Basic Rendering displays section heading and description",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "displays section heading and description"
        },
        {
          "ancestorTitles": [
            "DomainStep Component - Basic Rendering"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainStep Component - Basic Rendering displays domain error when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays domain error when provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 22,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676832,
        "runtime": 442,
        "slow": false,
        "start": 1744009676390
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\hooks\\useSites.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "useSites Hook - Initialization and Basic Operations"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - Initialization and Basic Operations initializes with default values when no options provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "initializes with default values when no options provided"
        },
        {
          "ancestorTitles": [
            "useSites Hook - Initialization and Basic Operations"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - Initialization and Basic Operations initializes with provided initialData",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "initializes with provided initialData"
        },
        {
          "ancestorTitles": [
            "useSites Hook - Initialization and Basic Operations"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - Initialization and Basic Operations initializes with provided filters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "initializes with provided filters"
        },
        {
          "ancestorTitles": [
            "useSites Hook - Initialization and Basic Operations"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - Initialization and Basic Operations updates site data with updateSite function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "updates site data with updateSite function"
        },
        {
          "ancestorTitles": [
            "useSites Hook - Initialization and Basic Operations"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - Initialization and Basic Operations clears field error when updating a field",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "clears field error when updating a field"
        },
        {
          "ancestorTitles": [
            "useSites Hook - Initialization and Basic Operations"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - Initialization and Basic Operations uses resetErrors to clear all error messages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "uses resetErrors to clear all error messages"
        },
        {
          "ancestorTitles": [
            "useSites Hook - Validation"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - Validation validates required fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "validates required fields"
        },
        {
          "ancestorTitles": [
            "useSites Hook - Validation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - Validation validates specific sections",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "validates specific sections"
        },
        {
          "ancestorTitles": [
            "useSites Hook - Validation"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - Validation validates slug format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates slug format"
        },
        {
          "ancestorTitles": [
            "useSites Hook - Validation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - Validation validates character limits",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "validates character limits"
        },
        {
          "ancestorTitles": [
            "useSites Hook - Validation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - Validation validates custom CSS syntax",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates custom CSS syntax"
        },
        {
          "ancestorTitles": [
            "useSites Hook - Validation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - Validation passes validation with valid data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "passes validation with valid data"
        },
        {
          "ancestorTitles": [
            "useSites Hook - API Integration"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - API Integration fetches a single site by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches a single site by ID"
        },
        {
          "ancestorTitles": [
            "useSites Hook - API Integration"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - API Integration fetches all sites with filters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches all sites with filters"
        },
        {
          "ancestorTitles": [
            "useSites Hook - API Integration"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - API Integration refreshes sites list",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "refreshes sites list"
        },
        {
          "ancestorTitles": [
            "useSites Hook - API Integration"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - API Integration creates a new site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "creates a new site"
        },
        {
          "ancestorTitles": [
            "useSites Hook - API Integration"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - API Integration validates data before creating a site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates data before creating a site"
        },
        {
          "ancestorTitles": [
            "useSites Hook - API Integration"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - API Integration updates an existing site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "updates an existing site"
        },
        {
          "ancestorTitles": [
            "useSites Hook - API Integration"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - API Integration deletes a site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "deletes a site"
        },
        {
          "ancestorTitles": [
            "useSites Hook - API Integration"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - API Integration handles API errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors gracefully"
        },
        {
          "ancestorTitles": [
            "useSites Hook - API Integration"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - API Integration handles network errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors gracefully"
        },
        {
          "ancestorTitles": [
            "useSites Hook - API Integration"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSites Hook - API Integration handles filters changes and updates filtered sites",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles filters changes and updates filtered sites"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676850,
        "runtime": 411,
        "slow": false,
        "start": 1744009676439
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\__tests__\\AuthProvider.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "AuthProvider"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthProvider should initialize with loading state and then complete",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize with loading state and then complete"
        },
        {
          "ancestorTitles": [
            "AuthProvider"
          ],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthProvider should handle login and authentication",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle login and authentication"
        },
        {
          "ancestorTitles": [
            "AuthProvider"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthProvider should handle logout",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle logout"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676864,
        "runtime": 348,
        "slow": false,
        "start": 1744009676516
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\activity\\__tests__\\ActivitySearch.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ActivitySearch"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivitySearch renders the search input and button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the search input and button"
        },
        {
          "ancestorTitles": [
            "ActivitySearch"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivitySearch calls onSearchChange when input value changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onSearchChange when input value changes"
        },
        {
          "ancestorTitles": [
            "ActivitySearch"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivitySearch calls onSearch when search button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onSearch when search button is clicked"
        },
        {
          "ancestorTitles": [
            "ActivitySearch"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivitySearch calls onSearch when Enter key is pressed in the input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onSearch when Enter key is pressed in the input"
        },
        {
          "ancestorTitles": [
            "ActivitySearch"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivitySearch does not call onSearch when other keys are pressed in the input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not call onSearch when other keys are pressed in the input"
        },
        {
          "ancestorTitles": [
            "ActivitySearch"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivitySearch displays the current search term in the input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays the current search term in the input"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676878,
        "runtime": 449,
        "slow": false,
        "start": 1744009676429
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoryTableRow.hierarchy.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Hierarchical Display"
          ],
          "duration": 26,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Hierarchical Display displays child count badge for categories with children",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "displays child count badge for categories with children"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Hierarchical Display"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Hierarchical Display does not display child count badge when category has no children",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "does not display child count badge when category has no children"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Hierarchical Display"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Hierarchical Display applies proper indentation based on category depth",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "applies proper indentation based on category depth"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Hierarchical Display"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Hierarchical Display uses tree lines to visualize hierarchical relationships",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "uses tree lines to visualize hierarchical relationships"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Hierarchical Display"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Hierarchical Display applies correct indentation for deeply nested categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "applies correct indentation for deeply nested categories"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Hierarchical Display"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Hierarchical Display displays parent name for child categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays parent name for child categories"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Hierarchical Display"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Hierarchical Display applies isLastChild class for styling the last child in a group",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies isLastChild class for styling the last child in a group"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Hierarchical Display"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Hierarchical Display handles missing or undefined childCount gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles missing or undefined childCount gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/has-role-in-tenant.test.ts\u001b[39m\u001b[0m\u001b[2m:7:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\has-role-in-tenant.test.ts",
      "testResults": []
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-service.ts\u001b[2m:20:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service-site-context.test.ts\u001b[39m\u001b[0m\u001b[2m:18:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service-site-context.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676951,
        "runtime": 418,
        "slow": false,
        "start": 1744009676533
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\layout\\AdminHeader.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "AdminHeader Component"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminHeader Component renders correctly with title and buttons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correctly with title and buttons"
        },
        {
          "ancestorTitles": [
            "AdminHeader Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminHeader Component calls toggleSidebar when menu button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls toggleSidebar when menu button is clicked"
        },
        {
          "ancestorTitles": [
            "AdminHeader Component"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminHeader Component opens the notifications dropdown when clicking the bell icon",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "opens the notifications dropdown when clicking the bell icon"
        },
        {
          "ancestorTitles": [
            "AdminHeader Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminHeader Component opens the user dropdown menu when clicking the user icon",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "opens the user dropdown menu when clicking the user icon"
        },
        {
          "ancestorTitles": [
            "AdminHeader Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminHeader Component closes user menu when clicking on a menu item",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "closes user menu when clicking on a menu item"
        },
        {
          "ancestorTitles": [
            "AdminHeader Component"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminHeader Component closes the notifications dropdown when opening user menu",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "closes the notifications dropdown when opening user menu"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009676967,
        "runtime": 405,
        "slow": false,
        "start": 1744009676562
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\AdminDashboard.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "AdminDashboard Component"
          ],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminDashboard Component renders the page title correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the page title correctly"
        },
        {
          "ancestorTitles": [
            "AdminDashboard Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminDashboard Component renders the StatisticCards component",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the StatisticCards component"
        },
        {
          "ancestorTitles": [
            "AdminDashboard Component"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminDashboard Component renders the Recent Activity section with correct heading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the Recent Activity section with correct heading"
        },
        {
          "ancestorTitles": [
            "AdminDashboard Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminDashboard Component renders the ActivityFeed component",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the ActivityFeed component"
        },
        {
          "ancestorTitles": [
            "AdminDashboard Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminDashboard Component renders the Quick Actions section with correct heading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the Quick Actions section with correct heading"
        },
        {
          "ancestorTitles": [
            "AdminDashboard Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminDashboard Component renders the quick action links",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the quick action links"
        },
        {
          "ancestorTitles": [
            "AdminDashboard Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminDashboard Component applies correct grid layout for responsive design",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "applies correct grid layout for responsive design"
        },
        {
          "ancestorTitles": [
            "AdminDashboard Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminDashboard Component applies proper styling to the Quick Actions panel",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "applies proper styling to the Quick Actions panel"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/auth/index.ts\u001b[2m:31:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/api/admin/users/route.test.ts\u001b[39m\u001b[0m\u001b[2m:11:15)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\admin\\users\\route.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677029,
        "runtime": 289,
        "slow": false,
        "start": 1744009676740
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\SEOStep.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SEOStep Component - Basic Rendering"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOStep Component - Basic Rendering renders the SEOSettings component",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the SEOSettings component"
        },
        {
          "ancestorTitles": [
            "SEOStep Component - Basic Rendering"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOStep Component - Basic Rendering displays section heading and description",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "displays section heading and description"
        },
        {
          "ancestorTitles": [
            "SEOStep Component - Basic Rendering"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOStep Component - Basic Rendering passes initial SEO data to SEOSettings component",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "passes initial SEO data to SEOSettings component"
        },
        {
          "ancestorTitles": [
            "SEOStep Component - Basic Rendering"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOStep Component - Basic Rendering calls onSEOChange when SEO data is updated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onSEOChange when SEO data is updated"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service-impl.test.ts\u001b[39m\u001b[0m\u001b[2m:46:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service-impl.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677127,
        "runtime": 246,
        "slow": false,
        "start": 1744009676881
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\middleware\\secure-tenant-context.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Secure Tenant Context - Integration",
            "withSecureTenantContext with withSecureTenantPermission"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure Tenant Context - Integration withSecureTenantContext with withSecureTenantPermission should correctly chain the middleware functions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should correctly chain the middleware functions"
        },
        {
          "ancestorTitles": [
            "Secure Tenant Context - Integration",
            "withSecureTenantContext with withSecureTenantPermission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure Tenant Context - Integration withSecureTenantContext with withSecureTenantPermission should properly nest security validations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly nest security validations"
        },
        {
          "ancestorTitles": [
            "Secure Tenant Context - Integration",
            "End-to-end security flow"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure Tenant Context - Integration End-to-end security flow should maintain tenant isolation across all security layers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should maintain tenant isolation across all security layers"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 1,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677159,
        "runtime": 409,
        "slow": false,
        "start": 1744009676750
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-management\\SiteCreationBasicInfo.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Site Creation - Basic Info Step"
          ],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Creation - Basic Info Step should validate and update basic info data correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate and update basic info data correctly"
        },
        {
          "ancestorTitles": [
            "Integration: Site Creation - Basic Info Step"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Creation - Basic Info Step should show validation errors when data is invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should show validation errors when data is invalid"
        },
        {
          "ancestorTitles": [
            "Integration: Site Creation - Basic Info Step"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Creation - Basic Info Step should auto-generate a slug from the site name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should auto-generate a slug from the site name"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677173,
        "runtime": 281,
        "slow": false,
        "start": 1744009676892
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\redis-health.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Redis Health Checks Integration Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Health Checks Integration Tests should return ok status when Redis connection is healthy",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return ok status when Redis connection is healthy"
        },
        {
          "ancestorTitles": [
            "Redis Health Checks Integration Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Health Checks Integration Tests should return error status when Redis is disconnected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return error status when Redis is disconnected"
        },
        {
          "ancestorTitles": [
            "Redis Health Checks Integration Tests"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Health Checks Integration Tests should return error status when Redis connection fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return error status when Redis connection fails"
        },
        {
          "ancestorTitles": [
            "Redis Health Checks Integration Tests"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Health Checks Integration Tests should handle non-Error exceptions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle non-Error exceptions"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/admin/auth/utils/tenantAccessControl.ts\u001b[2m:31:34)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/components/admin/auth/guards/__tests__/permission-guard/setup.ts\u001b[39m\u001b[0m\u001b[2m:34:70)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\guards\\__tests__\\permission-guard\\setup.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677192,
        "runtime": 275,
        "slow": false,
        "start": 1744009676917
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\multitenancy\\site-identity.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Site Identity Resolution"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Identity Resolution should resolve site by hostname",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should resolve site by hostname"
        },
        {
          "ancestorTitles": [
            "Site Identity Resolution"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Identity Resolution should resolve site via site-info API endpoint",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should resolve site via site-info API endpoint"
        },
        {
          "ancestorTitles": [
            "Site Identity Resolution"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Identity Resolution should resolve site via subdomain format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should resolve site via subdomain format"
        },
        {
          "ancestorTitles": [
            "Site Identity Resolution"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Identity Resolution should use site-specific API instead of hostname parameter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should use site-specific API instead of hostname parameter"
        },
        {
          "ancestorTitles": [
            "Site Identity Resolution"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Identity Resolution should return 404 when site slug is not recognized",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 when site slug is not recognized"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677207,
        "runtime": 338,
        "slow": false,
        "start": 1744009676869
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\tenant\\SiteSelector.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteSelector Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSelector Component renders site selector dropdown when user has multiple sites",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders site selector dropdown when user has multiple sites"
        },
        {
          "ancestorTitles": [
            "SiteSelector Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSelector Component does not render when user has only one site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not render when user has only one site"
        },
        {
          "ancestorTitles": [
            "SiteSelector Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSelector Component does not render when no tenant is selected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not render when no tenant is selected"
        },
        {
          "ancestorTitles": [
            "SiteSelector Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSelector Component shows loading state when sites are being fetched",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows loading state when sites are being fetched"
        },
        {
          "ancestorTitles": [
            "SiteSelector Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSelector Component calls setCurrentSiteId when site selection changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls setCurrentSiteId when site selection changes"
        },
        {
          "ancestorTitles": [
            "SiteSelector Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteSelector Component displays site names in the dropdown",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "displays site names in the dropdown"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677214,
        "runtime": 221,
        "slow": false,
        "start": 1744009676993
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\utils\\__tests__\\roles.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Role-based Access Control",
            "hasPermissionInTenant"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-based Access Control hasPermissionInTenant should return true when role has exact permission in tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true when role has exact permission in tenant"
        },
        {
          "ancestorTitles": [
            "Role-based Access Control",
            "hasPermissionInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-based Access Control hasPermissionInTenant should return false when permission is in different tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when permission is in different tenant"
        },
        {
          "ancestorTitles": [
            "Role-based Access Control",
            "hasPermissionInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-based Access Control hasPermissionInTenant should return true for global type permission in tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true for global type permission in tenant"
        },
        {
          "ancestorTitles": [
            "Role-based Access Control",
            "hasPermissionInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-based Access Control hasPermissionInTenant should return true for global role in any tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true for global role in any tenant"
        },
        {
          "ancestorTitles": [
            "Role-based Access Control",
            "createTenantAdminRole"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-based Access Control createTenantAdminRole should create admin role with proper tenant context",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 28,
          "retryReasons": [],
          "status": "passed",
          "title": "should create admin role with proper tenant context"
        },
        {
          "ancestorTitles": [
            "Role-based Access Control",
            "createSuperAdminRole"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-based Access Control createSuperAdminRole should create global admin role with system tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should create global admin role with system tenant"
        },
        {
          "ancestorTitles": [
            "Role-based Access Control",
            "Redis key generators"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-based Access Control Redis key generators getRoleKey should include tenant ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "getRoleKey should include tenant ID"
        },
        {
          "ancestorTitles": [
            "Role-based Access Control",
            "Redis key generators"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-based Access Control Redis key generators getUserRolesKey should include tenant ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "getUserRolesKey should include tenant ID"
        },
        {
          "ancestorTitles": [
            "Role-based Access Control",
            "Redis key generators"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-based Access Control Redis key generators getTenantUsersKey should include tenant ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "getTenantUsersKey should include tenant ID"
        },
        {
          "ancestorTitles": [
            "Role-based Access Control",
            "convertToTenantACL"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role-based Access Control convertToTenantACL should convert ACL to tenant ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should convert ACL to tenant ACL"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677269,
        "runtime": 404,
        "slow": false,
        "start": 1744009676865
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\components\\CategoryTableEmptyState.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTableEmptyState Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableEmptyState Component renders the empty state message correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the empty state message correctly"
        },
        {
          "ancestorTitles": [
            "CategoryTableEmptyState Component"
          ],
          "duration": 34,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableEmptyState Component renders the create button with default URL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the create button with default URL"
        },
        {
          "ancestorTitles": [
            "CategoryTableEmptyState Component"
          ],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableEmptyState Component uses site-specific URL when siteSlug is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "uses site-specific URL when siteSlug is provided"
        },
        {
          "ancestorTitles": [
            "CategoryTableEmptyState Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableEmptyState Component has proper styling for the empty state container",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper styling for the empty state container"
        },
        {
          "ancestorTitles": [
            "CategoryTableEmptyState Component"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableEmptyState Component has accessible focus states for the create button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "has accessible focus states for the create button"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-deletion.ts\u001b[2m:24:22)\u001b[22m\n      \u001b[2mat requireActual (\u001b[22m\u001b[0m\u001b[36msrc/lib/role/__tests__/getUsersWithGlobalRole.pagination.test.ts\u001b[39m\u001b[0m\u001b[2m:12:11)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/lib/role/__tests__/getUsersWithGlobalRole.pagination.test.ts\u001b[39m\u001b[0m\u001b[2m:10:23)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\lib\\role\\__tests__\\getUsersWithGlobalRole.pagination.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677409,
        "runtime": 335,
        "slow": false,
        "start": 1744009677074
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\CategoryTable.hierarchy.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryTable Hierarchy View"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Hierarchy View should render top-level categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should render top-level categories"
        },
        {
          "ancestorTitles": [
            "CategoryTable Hierarchy View"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Hierarchy View should render hierarchical categories with parent-child relationships",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should render hierarchical categories with parent-child relationships"
        },
        {
          "ancestorTitles": [
            "CategoryTable Hierarchy View"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Hierarchy View should have the right tree indicators for children",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should have the right tree indicators for children"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 11,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677427,
        "runtime": 427,
        "slow": false,
        "start": 1744009677000
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\listings\\components\\form\\BacklinkStep.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "BacklinkStep Component"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BacklinkStep Component renders the component with backlink fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the component with backlink fields"
        },
        {
          "ancestorTitles": [
            "BacklinkStep Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BacklinkStep Component displays existing backlink values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays existing backlink values"
        },
        {
          "ancestorTitles": [
            "BacklinkStep Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BacklinkStep Component initializes with empty values when backlinkInfo is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "initializes with empty values when backlinkInfo is not provided"
        },
        {
          "ancestorTitles": [
            "BacklinkStep Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BacklinkStep Component calls updateNestedField when URL changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls updateNestedField when URL changes"
        },
        {
          "ancestorTitles": [
            "BacklinkStep Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BacklinkStep Component calls updateNestedField when anchor text changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls updateNestedField when anchor text changes"
        },
        {
          "ancestorTitles": [
            "BacklinkStep Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BacklinkStep Component displays validation errors when present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays validation errors when present"
        },
        {
          "ancestorTitles": [
            "BacklinkStep Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BacklinkStep Component disables inputs when isSubmitting is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "disables inputs when isSubmitting is true"
        },
        {
          "ancestorTitles": [
            "BacklinkStep Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BacklinkStep Component marks URL field as required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "marks URL field as required"
        },
        {
          "ancestorTitles": [
            "BacklinkStep Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BacklinkStep Component does not mark anchor text field as required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not mark anchor text field as required"
        },
        {
          "ancestorTitles": [
            "BacklinkStep Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BacklinkStep Component handles empty anchor text correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty anchor text correctly"
        },
        {
          "ancestorTitles": [
            "BacklinkStep Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "BacklinkStep Component marks fields with errors as invalid for accessibility",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "marks fields with errors as invalid for accessibility"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677470,
        "runtime": 430,
        "slow": false,
        "start": 1744009677040
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\search\\search-indexer.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Search Indexer"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Indexer delegates category indexing to CategoryIndexer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delegates category indexing to CategoryIndexer"
        },
        {
          "ancestorTitles": [
            "Search Indexer"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Indexer delegates category update to CategoryIndexer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delegates category update to CategoryIndexer"
        },
        {
          "ancestorTitles": [
            "Search Indexer"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Indexer delegates category removal to CategoryIndexer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delegates category removal to CategoryIndexer"
        },
        {
          "ancestorTitles": [
            "Search Indexer"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Indexer delegates category search to CategoryIndexer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delegates category search to CategoryIndexer"
        },
        {
          "ancestorTitles": [
            "Search Indexer"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Indexer delegates listing indexing to ListingIndexer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delegates listing indexing to ListingIndexer"
        },
        {
          "ancestorTitles": [
            "Search Indexer"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Indexer delegates listing update to ListingIndexer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delegates listing update to ListingIndexer"
        },
        {
          "ancestorTitles": [
            "Search Indexer"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Indexer delegates listing removal to ListingIndexer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delegates listing removal to ListingIndexer"
        },
        {
          "ancestorTitles": [
            "Search Indexer"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Indexer delegates listing search to ListingIndexer with options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delegates listing search to ListingIndexer with options"
        },
        {
          "ancestorTitles": [
            "Search Indexer"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Indexer delegates count search results to ListingIndexer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "delegates count search results to ListingIndexer"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/site-utils.ts\u001b[2m:52:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/LinkUtilities.tsx\u001b[2m:24:20)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/ListingCard.tsx\u001b[2m:13:24)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/search/SearchResults.tsx\u001b[2m:14:61)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/search/index.ts\u001b[2m:31:63)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/search/index.test.ts\u001b[39m\u001b[0m\u001b[2m:7:57)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\search\\index.test.ts",
      "testResults": []
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/redis/memory-store.ts\u001b[2m:16:10)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/client.ts\u001b[2m:37:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/redis/client.test.ts\u001b[39m\u001b[0m\u001b[2m:54:17)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\redis\\client.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677494,
        "runtime": 286,
        "slow": false,
        "start": 1744009677208
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\sites\\submissions\\route.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Submissions API Routes",
            "GET /api/sites/[siteSlug]/submissions"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submissions API Routes GET /api/sites/[siteSlug]/submissions should return 404 if site not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 if site not found"
        },
        {
          "ancestorTitles": [
            "Submissions API Routes",
            "GET /api/sites/[siteSlug]/submissions"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submissions API Routes GET /api/sites/[siteSlug]/submissions should return 403 if submissions are disabled for the site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 403 if submissions are disabled for the site"
        },
        {
          "ancestorTitles": [
            "Submissions API Routes",
            "GET /api/sites/[siteSlug]/submissions"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submissions API Routes GET /api/sites/[siteSlug]/submissions should return 403 if user is blocked from submitting",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 403 if user is blocked from submitting"
        },
        {
          "ancestorTitles": [
            "Submissions API Routes",
            "GET /api/sites/[siteSlug]/submissions"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submissions API Routes GET /api/sites/[siteSlug]/submissions should return user submissions with pagination",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should return user submissions with pagination"
        },
        {
          "ancestorTitles": [
            "Submissions API Routes",
            "POST /api/sites/[siteSlug]/submissions"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submissions API Routes POST /api/sites/[siteSlug]/submissions should return 404 if site not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 if site not found"
        },
        {
          "ancestorTitles": [
            "Submissions API Routes",
            "POST /api/sites/[siteSlug]/submissions"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submissions API Routes POST /api/sites/[siteSlug]/submissions should return 403 if submissions are disabled for the site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 403 if submissions are disabled for the site"
        },
        {
          "ancestorTitles": [
            "Submissions API Routes",
            "POST /api/sites/[siteSlug]/submissions"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submissions API Routes POST /api/sites/[siteSlug]/submissions should create a new submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a new submission"
        },
        {
          "ancestorTitles": [
            "Submissions API Routes",
            "POST /api/sites/[siteSlug]/submissions"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submissions API Routes POST /api/sites/[siteSlug]/submissions should validate required fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate required fields"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant/tenant-service.ts\u001b[2m:20:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant/index.ts\u001b[2m:14:76)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/multitenancy/middleware.test.ts\u001b[39m\u001b[0m\u001b[2m:7:17)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\multitenancy\\middleware.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677597,
        "runtime": 351,
        "slow": false,
        "start": 1744009677246
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\cross-cutting\\ErrorRecovery.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Error Recovery Flows"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Recovery Flows should retry failed API requests automatically",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should retry failed API requests automatically"
        },
        {
          "ancestorTitles": [
            "Error Recovery Flows"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Recovery Flows should show a user-friendly error and retry button when API calls fail",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should show a user-friendly error and retry button when API calls fail"
        },
        {
          "ancestorTitles": [
            "Error Recovery Flows"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Recovery Flows should recover gracefully from component errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should recover gracefully from component errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677612,
        "runtime": 410,
        "slow": false,
        "start": 1744009677202
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\layout\\AdminLayout.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "AdminLayout Component"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminLayout Component renders the layout with all components",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the layout with all components"
        },
        {
          "ancestorTitles": [
            "AdminLayout Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminLayout Component toggles the sidebar when header is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "toggles the sidebar when header is clicked"
        },
        {
          "ancestorTitles": [
            "AdminLayout Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminLayout Component closes the sidebar when clicking on the sidebar itself (mobile behavior)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "closes the sidebar when clicking on the sidebar itself (mobile behavior)"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677625,
        "runtime": 368,
        "slow": false,
        "start": 1744009677257
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\search\\SearchIcon.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SearchIcon Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchIcon Component renders with default props",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with default props"
        },
        {
          "ancestorTitles": [
            "SearchIcon Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchIcon Component renders with custom size",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with custom size"
        },
        {
          "ancestorTitles": [
            "SearchIcon Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchIcon Component applies custom class name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "applies custom class name"
        },
        {
          "ancestorTitles": [
            "SearchIcon Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SearchIcon Component renders SVG with proper structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "renders SVG with proper structure"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677644,
        "runtime": 400,
        "slow": false,
        "start": 1744009677244
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\StepNavigation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "StepNavigation Component - Basic Rendering"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StepNavigation Component - Basic Rendering renders all step buttons correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "renders all step buttons correctly"
        },
        {
          "ancestorTitles": [
            "StepNavigation Component - Basic Rendering"
          ],
          "duration": 36,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StepNavigation Component - Basic Rendering has appropriate ARIA attributes for accessibility",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "has appropriate ARIA attributes for accessibility"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/crud.test.ts\u001b[39m\u001b[0m\u001b[2m:7:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\crud.test.ts",
      "testResults": []
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/audit-permissions.test.ts\u001b[39m\u001b[0m\u001b[2m:10:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\audit-permissions.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677764,
        "runtime": 231,
        "slow": false,
        "start": 1744009677533
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\types\\listing.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Listing Type",
            "ListingStatus enum"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Type ListingStatus enum should have the correct status values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should have the correct status values"
        },
        {
          "ancestorTitles": [
            "Listing Type",
            "validateListing"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Type validateListing should validate a valid listing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate a valid listing"
        },
        {
          "ancestorTitles": [
            "Listing Type",
            "validateListing"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Type validateListing should reject a listing without required fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject a listing without required fields"
        },
        {
          "ancestorTitles": [
            "Listing Type",
            "validateListing"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Type validateListing should reject a listing with invalid status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject a listing with invalid status"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mtests/integration/setup.ts\u001b[2m:41:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/integration/performance/concurrent-operations/simultaneous-writes.test.ts\u001b[39m\u001b[0m\u001b[2m:10:16)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\performance\\concurrent-operations\\simultaneous-writes.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677830,
        "runtime": 368,
        "slow": false,
        "start": 1744009677462
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\__tests__\\MainFooter.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "MainFooter Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainFooter Component renders the footer with site name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the footer with site name"
        },
        {
          "ancestorTitles": [
            "MainFooter Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainFooter Component displays the current year in the copyright notice",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays the current year in the copyright notice"
        },
        {
          "ancestorTitles": [
            "MainFooter Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainFooter Component renders all quick links",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "renders all quick links"
        },
        {
          "ancestorTitles": [
            "MainFooter Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainFooter Component renders contact information",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders contact information"
        },
        {
          "ancestorTitles": [
            "MainFooter Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MainFooter Component applies correct CSS classes for responsive layout",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "applies correct CSS classes for responsive layout"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677871,
        "runtime": 349,
        "slow": false,
        "start": 1744009677522
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\table\\DeleteConfirmationModal.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component - Basic Rendering"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component - Basic Rendering renders the modal when isOpen is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the modal when isOpen is true"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component - Basic Rendering"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component - Basic Rendering does not render the modal when isOpen is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not render the modal when isOpen is false"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component - Basic Rendering"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component - Basic Rendering has appropriate warning styling",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "has appropriate warning styling"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677885,
        "runtime": 403,
        "slow": false,
        "start": 1744009677482
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\hooks\\useCategories.filtering.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useCategories Hook - Filtering & Searching"
          ],
          "duration": 31,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Filtering & Searching should filter categories by search term",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter categories by search term"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Filtering & Searching"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Filtering & Searching should perform case-insensitive search",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should perform case-insensitive search"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Filtering & Searching"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Filtering & Searching should search in name, metaDescription, and parentName fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should search in name, metaDescription, and parentName fields"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Filtering & Searching"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Filtering & Searching should filter categories by parent ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter categories by parent ID"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Filtering & Searching"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Filtering & Searching should filter categories by site ID in multi-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter categories by site ID in multi-site mode"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Filtering & Searching"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Filtering & Searching should ignore site filter in single-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should ignore site filter in single-site mode"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Filtering & Searching"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Filtering & Searching should apply multiple filters simultaneously",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply multiple filters simultaneously"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Filtering & Searching"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Filtering & Searching should reset to first page when filters change",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset to first page when filters change"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Filtering & Searching"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Filtering & Searching should handle empty search results gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle empty search results gracefully"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Filtering & Searching"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Filtering & Searching should maintain filter state after data is updated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should maintain filter state after data is updated"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/redis/memory-store.ts\u001b[2m:16:10)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/redis/hash-operations-tdd.test.ts\u001b[39m\u001b[0m\u001b[2m:10:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\redis\\hash-operations-tdd.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 11,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677934,
        "runtime": 257,
        "slow": false,
        "start": 1744009677677
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\search\\utils.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Search Utility Functions",
            "getIntersection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Utility Functions getIntersection returns empty array for empty input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns empty array for empty input"
        },
        {
          "ancestorTitles": [
            "Search Utility Functions",
            "getIntersection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Utility Functions getIntersection returns the single array if only one provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns the single array if only one provided"
        },
        {
          "ancestorTitles": [
            "Search Utility Functions",
            "getIntersection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Utility Functions getIntersection returns intersection of multiple arrays",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns intersection of multiple arrays"
        },
        {
          "ancestorTitles": [
            "Search Utility Functions",
            "getIntersection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Utility Functions getIntersection returns empty array if no common elements",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns empty array if no common elements"
        },
        {
          "ancestorTitles": [
            "Search Utility Functions",
            "getUnion"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Utility Functions getUnion returns empty array for empty input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns empty array for empty input"
        },
        {
          "ancestorTitles": [
            "Search Utility Functions",
            "getUnion"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Utility Functions getUnion returns the single array if only one provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns the single array if only one provided"
        },
        {
          "ancestorTitles": [
            "Search Utility Functions",
            "getUnion"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Utility Functions getUnion returns union of multiple arrays without duplicates",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns union of multiple arrays without duplicates"
        },
        {
          "ancestorTitles": [
            "Search Utility Functions",
            "calculateSearchScore"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Utility Functions calculateSearchScore returns 0 if listing data not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns 0 if listing data not found"
        },
        {
          "ancestorTitles": [
            "Search Utility Functions",
            "calculateSearchScore"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Utility Functions calculateSearchScore scores title matches higher than description or content",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "scores title matches higher than description or content"
        },
        {
          "ancestorTitles": [
            "Search Utility Functions",
            "calculateSearchScore"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Utility Functions calculateSearchScore adds recency bonus to newer listings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "adds recency bonus to newer listings"
        },
        {
          "ancestorTitles": [
            "Search Utility Functions",
            "calculateSearchScore"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search Utility Functions calculateSearchScore adds score bonus for featured listings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "adds score bonus for featured listings"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009677944,
        "runtime": 412,
        "slow": false,
        "start": 1744009677532
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\categories\\hooks\\useCategories.deletion.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useCategories Hook - Deletion Functionality"
          ],
          "duration": 25,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Deletion Functionality should set state correctly when confirming delete",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should set state correctly when confirming delete"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Deletion Functionality"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Deletion Functionality should reset state when canceling delete",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset state when canceling delete"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Deletion Functionality"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Deletion Functionality should call DELETE API endpoint when handling delete",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should call DELETE API endpoint when handling delete"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Deletion Functionality"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Deletion Functionality should use the correct endpoint for multi-site vs single-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should use the correct endpoint for multi-site vs single-site mode"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Deletion Functionality"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Deletion Functionality should handle delete API errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle delete API errors gracefully"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Deletion Functionality"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Deletion Functionality should handle deleting the last item on a page correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle deleting the last item on a page correctly"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Deletion Functionality"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Deletion Functionality should handle deleting a category with child categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle deleting a category with child categories"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Deletion Functionality"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Deletion Functionality should handle concurrent delete operations properly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle concurrent delete operations properly"
        },
        {
          "ancestorTitles": [
            "useCategories Hook - Deletion Functionality"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useCategories Hook - Deletion Functionality should not remove category from state if deletion fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should not remove category from state if deletion fails"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678028,
        "runtime": 319,
        "slow": false,
        "start": 1744009677709
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\cross-cutting\\ErrorRecoverySimple.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Simple Error Recovery Test"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Simple Error Recovery Test should retry when the retry button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should retry when the retry button is clicked"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678047,
        "runtime": 336,
        "slow": false,
        "start": 1744009677711
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\ACLGuard.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ACLGuard component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACLGuard component renders children when user has permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders children when user has permission"
        },
        {
          "ancestorTitles": [
            "ACLGuard component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACLGuard component renders fallback when user does not have permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders fallback when user does not have permission"
        },
        {
          "ancestorTitles": [
            "ACLGuard component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACLGuard component renders fallback when user is not authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders fallback when user is not authenticated"
        },
        {
          "ancestorTitles": [
            "ACLGuard component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACLGuard component renders custom fallback when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders custom fallback when provided"
        },
        {
          "ancestorTitles": [
            "ACLGuard component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACLGuard component passes all permission parameters to hasPermission function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "passes all permission parameters to hasPermission function"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678057,
        "runtime": 413,
        "slow": false,
        "start": 1744009677644
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\context\\SiteFormContext.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteFormContext"
          ],
          "duration": 43,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteFormContext should throw an error when used outside of provider",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error when used outside of provider"
        },
        {
          "ancestorTitles": [
            "SiteFormContext"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteFormContext should provide initial state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should provide initial state"
        },
        {
          "ancestorTitles": [
            "SiteFormContext"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteFormContext should update field values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should update field values"
        },
        {
          "ancestorTitles": [
            "SiteFormContext"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteFormContext should set errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should set errors"
        },
        {
          "ancestorTitles": [
            "SiteFormContext"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteFormContext should reset the form",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset the form"
        },
        {
          "ancestorTitles": [
            "SiteFormContext"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteFormContext should accept initial data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should accept initial data"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678068,
        "runtime": 351,
        "slow": false,
        "start": 1744009677717
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\components\\common\\FormField.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "FormField Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormField Component renders a text input field correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders a text input field correctly"
        },
        {
          "ancestorTitles": [
            "FormField Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormField Component renders a textarea when type is textarea",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders a textarea when type is textarea"
        },
        {
          "ancestorTitles": [
            "FormField Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormField Component displays an error message when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays an error message when provided"
        },
        {
          "ancestorTitles": [
            "FormField Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormField Component calls onChange handler when input changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onChange handler when input changes"
        },
        {
          "ancestorTitles": [
            "FormField Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormField Component renders a required field with asterisk",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders a required field with asterisk"
        },
        {
          "ancestorTitles": [
            "FormField Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormField Component disables the input when disabled prop is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "disables the input when disabled prop is true"
        },
        {
          "ancestorTitles": [
            "FormField Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "FormField Component renders a help text when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders a help text when provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 1,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678081,
        "runtime": 430,
        "slow": false,
        "start": 1744009677651
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\contexts\\__tests__\\TenantSiteContext.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "TenantSiteContext"
          ],
          "duration": 17,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalled (C:\\Users\\T\\directorymonster\\src\\contexts\\__tests__\\TenantSiteContext.test.tsx:96:38)"
          ],
          "fullName": "TenantSiteContext should provide tenant and site context to components",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "failed",
          "title": "should provide tenant and site context to components"
        },
        {
          "ancestorTitles": [
            "TenantSiteContext"
          ],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSiteContext should refresh the page when tenant is changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should refresh the page when tenant is changed"
        },
        {
          "ancestorTitles": [
            "TenantSiteContext"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantSiteContext should refresh the page when site is changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should refresh the page when site is changed"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTenantSiteContext › should provide tenant and site context to components\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\n    Expected number of calls: >= \u001b[32m1\u001b[39m\n    Received number of calls:    \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 94 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 95 |\u001b[39m     \u001b[90m// Check that localStorage was updated for tenant selection\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 96 |\u001b[39m     expect(localStorageMock\u001b[33m.\u001b[39msetItem)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 97 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 98 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 99 |\u001b[39m   it(\u001b[32m'should refresh the page when tenant is changed'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalled (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/contexts/__tests__/TenantSiteContext.test.tsx\u001b[39m\u001b[0m\u001b[2m:96:38)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678205,
        "runtime": 404,
        "slow": false,
        "start": 1744009677801
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\listings\\components\\form\\SelectField.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SelectField Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SelectField Component renders the select with label and options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the select with label and options"
        },
        {
          "ancestorTitles": [
            "SelectField Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SelectField Component calls onChange when select value changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onChange when select value changes"
        },
        {
          "ancestorTitles": [
            "SelectField Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SelectField Component displays error message when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays error message when provided"
        },
        {
          "ancestorTitles": [
            "SelectField Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SelectField Component marks the field as required when specified",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "marks the field as required when specified"
        },
        {
          "ancestorTitles": [
            "SelectField Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SelectField Component disables the select when specified",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "disables the select when specified"
        },
        {
          "ancestorTitles": [
            "SelectField Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SelectField Component renders with empty value when value is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with empty value when value is not provided"
        },
        {
          "ancestorTitles": [
            "SelectField Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SelectField Component applies correct CSS classes based on error state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "applies correct CSS classes based on error state"
        },
        {
          "ancestorTitles": [
            "SelectField Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SelectField Component displays error message with correct ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays error message with correct ID"
        },
        {
          "ancestorTitles": [
            "SelectField Component"
          ],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SelectField Component renders with no options when empty array is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with no options when empty array is provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678213,
        "runtime": 232,
        "slow": false,
        "start": 1744009677981
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\NavBar.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "NavBar"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NavBar renders NavBar component",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "renders NavBar component"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678227,
        "runtime": 246,
        "slow": false,
        "start": 1744009677981
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\app\\api\\middleware\\__tests__\\withTenantSiteContext.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "withTenantSiteContext"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withTenantSiteContext should add tenant ID from headers to the request",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should add tenant ID from headers to the request"
        },
        {
          "ancestorTitles": [
            "withTenantSiteContext"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withTenantSiteContext should add tenant and site IDs from headers to the request",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should add tenant and site IDs from headers to the request"
        },
        {
          "ancestorTitles": [
            "withTenantSiteContext"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withTenantSiteContext should add tenant ID from cookies when not in headers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should add tenant ID from cookies when not in headers"
        },
        {
          "ancestorTitles": [
            "withTenantSiteContext"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withTenantSiteContext should add site ID from cookies when tenant ID is available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should add site ID from cookies when tenant ID is available"
        },
        {
          "ancestorTitles": [
            "withTenantSiteContext"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withTenantSiteContext should prioritize headers over cookies",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should prioritize headers over cookies"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678247,
        "runtime": 314,
        "slow": false,
        "start": 1744009677933
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\auth\\security-measures.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Authentication Security Measures Integration",
            "Rate Limiting and Progressive Delay"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Security Measures Integration Rate Limiting and Progressive Delay should apply rate limiting for repeated failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply rate limiting for repeated failed attempts"
        },
        {
          "ancestorTitles": [
            "Authentication Security Measures Integration",
            "IP Blocking"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Security Measures Integration IP Blocking should block authentication attempts from blocked IPs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should block authentication attempts from blocked IPs"
        },
        {
          "ancestorTitles": [
            "Authentication Security Measures Integration",
            "CAPTCHA Integration"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Security Measures Integration CAPTCHA Integration should require CAPTCHA after failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should require CAPTCHA after failed attempts"
        },
        {
          "ancestorTitles": [
            "Authentication Security Measures Integration",
            "CAPTCHA Integration"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Security Measures Integration CAPTCHA Integration should accept authentication with valid CAPTCHA",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should accept authentication with valid CAPTCHA"
        },
        {
          "ancestorTitles": [
            "Authentication Security Measures Integration",
            "Worker Pool Integration"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Security Measures Integration Worker Pool Integration should use the worker pool for proof verification",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should use the worker pool for proof verification"
        },
        {
          "ancestorTitles": [
            "Authentication Security Measures Integration",
            "Worker Pool Integration"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Security Measures Integration Worker Pool Integration should handle worker pool errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle worker pool errors"
        },
        {
          "ancestorTitles": [
            "Authentication Security Measures Integration",
            "Concurrency Management"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Security Measures Integration Concurrency Management should track and complete authentication requests",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should track and complete authentication requests"
        },
        {
          "ancestorTitles": [
            "Authentication Security Measures Integration",
            "Concurrency Management"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Security Measures Integration Concurrency Management should reject requests when too many concurrent requests",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject requests when too many concurrent requests"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678269,
        "runtime": 400,
        "slow": false,
        "start": 1744009677869
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\dashboard\\components\\StatisticCard.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "StatisticCard Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCard Component renders with title and value correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with title and value correctly"
        },
        {
          "ancestorTitles": [
            "StatisticCard Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCard Component displays the change value when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "displays the change value when provided"
        },
        {
          "ancestorTitles": [
            "StatisticCard Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCard Component displays negative change correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays negative change correctly"
        },
        {
          "ancestorTitles": [
            "StatisticCard Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCard Component renders with an icon when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with an icon when provided"
        },
        {
          "ancestorTitles": [
            "StatisticCard Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCard Component displays loading skeleton when isLoading is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays loading skeleton when isLoading is true"
        },
        {
          "ancestorTitles": [
            "StatisticCard Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCard Component applies additional className when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies additional className when provided"
        },
        {
          "ancestorTitles": [
            "StatisticCard Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCard Component sets aria-busy attribute when loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "sets aria-busy attribute when loading"
        },
        {
          "ancestorTitles": [
            "StatisticCard Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCard Component correctly formats string values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "correctly formats string values"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678284,
        "runtime": 408,
        "slow": false,
        "start": 1744009677876
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\__tests__\\LoginAttemptsMap.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "LoginAttemptsMap"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsMap renders the map component",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the map component"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsMap"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsMap renders markers for each location",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders markers for each location"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsMap"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsMap shows loading state when data is loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows loading state when data is loading"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsMap"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsMap shows error state when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows error state when there is an error"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsMap"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsMap applies filters correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies filters correctly"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsMap"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsMap displays map legend with correct risk levels",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "displays map legend with correct risk levels"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsMap"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsMap displays location details in popup when marker is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays location details in popup when marker is clicked"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678355,
        "runtime": 292,
        "slow": false,
        "start": 1744009678063
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\app\\api\\middleware\\__tests__\\withApiToken.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "withApiToken middleware"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withApiToken middleware should extract token from Authorization header",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should extract token from Authorization header"
        },
        {
          "ancestorTitles": [
            "withApiToken middleware"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withApiToken middleware should extract token from cookie",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should extract token from cookie"
        },
        {
          "ancestorTitles": [
            "withApiToken middleware"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withApiToken middleware should throw ApiTokenError if no token is found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw ApiTokenError if no token is found"
        },
        {
          "ancestorTitles": [
            "withApiToken middleware"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withApiToken middleware should throw ApiTokenError if token validation fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw ApiTokenError if token validation fails"
        },
        {
          "ancestorTitles": [
            "withApiToken middleware"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withApiToken middleware should add user to request headers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should add user to request headers"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 13,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678367,
        "runtime": 274,
        "slow": false,
        "start": 1744009678093
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\auth\\ip-blocker.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "IP Blocker",
            "Risk Level Management"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Blocker Risk Level Management should get the risk level for an IP address",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should get the risk level for an IP address"
        },
        {
          "ancestorTitles": [
            "IP Blocker",
            "Risk Level Management"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Blocker Risk Level Management should set the risk level for an IP address",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should set the risk level for an IP address"
        },
        {
          "ancestorTitles": [
            "IP Blocker",
            "Threshold Configuration"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Blocker Threshold Configuration should get the max failed attempts based on risk level",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should get the max failed attempts based on risk level"
        },
        {
          "ancestorTitles": [
            "IP Blocker",
            "Threshold Configuration"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Blocker Threshold Configuration should get the block duration based on risk level",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should get the block duration based on risk level"
        },
        {
          "ancestorTitles": [
            "IP Blocker",
            "Failed Attempt Recording"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Blocker Failed Attempt Recording should record a failed attempt and not block if below threshold",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should record a failed attempt and not block if below threshold"
        },
        {
          "ancestorTitles": [
            "IP Blocker",
            "Failed Attempt Recording"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Blocker Failed Attempt Recording should record a failed attempt and block if at threshold",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should record a failed attempt and block if at threshold"
        },
        {
          "ancestorTitles": [
            "IP Blocker",
            "IP Blocking"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Blocker IP Blocking should check if an IP is blocked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check if an IP is blocked"
        },
        {
          "ancestorTitles": [
            "IP Blocker",
            "IP Blocking"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Blocker IP Blocking should return false if an IP is not blocked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if an IP is not blocked"
        },
        {
          "ancestorTitles": [
            "IP Blocker",
            "IP Blocking"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Blocker IP Blocking should block an IP address",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should block an IP address"
        },
        {
          "ancestorTitles": [
            "IP Blocker",
            "IP Blocking"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Blocker IP Blocking should reset failed attempts for an IP",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset failed attempts for an IP"
        },
        {
          "ancestorTitles": [
            "IP Blocker",
            "Error Handling"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Blocker Error Handling should handle Redis errors when getting risk level",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors when getting risk level"
        },
        {
          "ancestorTitles": [
            "IP Blocker",
            "Error Handling"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Blocker Error Handling should handle Redis errors when setting risk level",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors when setting risk level"
        },
        {
          "ancestorTitles": [
            "IP Blocker",
            "Error Handling"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Blocker Error Handling should handle Redis errors when checking if IP is blocked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors when checking if IP is blocked"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 9,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678379,
        "runtime": 417,
        "slow": false,
        "start": 1744009677962
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\listings.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Listings API",
            "GET /api/sites/[siteSlug]/listings"
          ],
          "duration": 5,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"test:site:slug:non-existent\"\u001b[39m\nReceived: \u001b[31m\"site:slug:non-existent\"\u001b[39m\n\nNumber of calls: \u001b[31m1\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"test:site:slug:non-existent\"\u001b[39m\nReceived: \u001b[31m\"site:slug:non-existent\"\u001b[39m\n\nNumber of calls: \u001b[31m1\u001b[39m\n    at Object.toHaveBeenCalledWith (C:\\Users\\T\\directorymonster\\tests\\api\\listings.test.ts:46:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Listings API GET /api/sites/[siteSlug]/listings should return 404 when site is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "failed",
          "title": "should return 404 when site is not found"
        },
        {
          "ancestorTitles": [
            "Listings API",
            "GET /api/sites/[siteSlug]/listings"
          ],
          "duration": 6,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 200,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\api\\listings.test.ts:128:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Listings API GET /api/sites/[siteSlug]/listings should return listings for a valid site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should return listings for a valid site"
        },
        {
          "ancestorTitles": [
            "Listings API",
            "GET /api/sites/[siteSlug]/listings"
          ],
          "duration": 2,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 500,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\api\\listings.test.ts:172:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Listings API GET /api/sites/[siteSlug]/listings should handle Redis errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle Redis errors gracefully"
        },
        {
          "ancestorTitles": [
            "Listings API",
            "GET /api/sites/[siteSlug]/listings"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 200,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\api\\listings.test.ts:243:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Listings API GET /api/sites/[siteSlug]/listings should handle individual listing fetch errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle individual listing fetch errors"
        },
        {
          "ancestorTitles": [
            "Listings API",
            "POST /api/sites/[siteSlug]/listings"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listings API POST /api/sites/[siteSlug]/listings should return 404 when site is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 when site is not found"
        },
        {
          "ancestorTitles": [
            "Listings API",
            "POST /api/sites/[siteSlug]/listings"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listings API POST /api/sites/[siteSlug]/listings should return 400 when required fields are missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 400 when required fields are missing"
        },
        {
          "ancestorTitles": [
            "Listings API",
            "POST /api/sites/[siteSlug]/listings"
          ],
          "duration": 6,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": {
                  "error": "Site not found"
                },
                "expected": {
                  "error": "Category not found"
                },
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"error\": \"Category not found\",\u001b[39m\n\u001b[31m+   \"error\": \"Site not found\",\u001b[39m\n\u001b[2m  }\u001b[22m",
                "name": "toEqual",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[32m-   \"error\": \"Category not found\",\u001b[39m\n\u001b[31m+   \"error\": \"Site not found\",\u001b[39m\n\u001b[2m  }\u001b[22m\n    at Object.toEqual (C:\\Users\\T\\directorymonster\\tests\\api\\listings.test.ts:371:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Listings API POST /api/sites/[siteSlug]/listings should return 404 when category is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should return 404 when category is not found"
        },
        {
          "ancestorTitles": [
            "Listings API",
            "POST /api/sites/[siteSlug]/listings"
          ],
          "duration": 2,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 409,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m409\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m409\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\api\\listings.test.ts:453:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Listings API POST /api/sites/[siteSlug]/listings should return 409 when listing slug already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should return 409 when listing slug already exists"
        },
        {
          "ancestorTitles": [
            "Listings API",
            "POST /api/sites/[siteSlug]/listings"
          ],
          "duration": 4,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 201,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\api\\listings.test.ts:542:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Listings API POST /api/sites/[siteSlug]/listings should create a new listing successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should create a new listing successfully"
        },
        {
          "ancestorTitles": [
            "Listings API",
            "POST /api/sites/[siteSlug]/listings"
          ],
          "duration": 4,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 500,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\api\\listings.test.ts:648:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Listings API POST /api/sites/[siteSlug]/listings should handle errors in Redis transaction",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle errors in Redis transaction"
        },
        {
          "ancestorTitles": [
            "Listings API",
            "POST /api/sites/[siteSlug]/listings"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 500,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\api\\listings.test.ts:740:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Listings API POST /api/sites/[siteSlug]/listings should handle search indexing errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle search indexing errors gracefully"
        },
        {
          "ancestorTitles": [
            "Listings API",
            "POST /api/sites/[siteSlug]/listings"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listings API POST /api/sites/[siteSlug]/listings should handle JSON parsing errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle JSON parsing errors"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mListings API › GET /api/sites/[siteSlug]/listings › should return 404 when site is not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m\"test:site:slug:non-existent\"\u001b[39m\n    Received: \u001b[31m\"site:slug:non-existent\"\u001b[39m\n\n    Number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 44 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m       \u001b[90m// Verify the Redis client was called correctly\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 46 |\u001b[39m       expect(kv\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m'test:site:slug:non-existent'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m     it(\u001b[32m'should return listings for a valid site'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/listings.test.ts\u001b[39m\u001b[0m\u001b[2m:46:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mListings API › GET /api/sites/[siteSlug]/listings › should return listings for a valid site\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 126 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 127 |\u001b[39m       \u001b[90m// Verify the response\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 128 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 129 |\u001b[39m       expect(data\u001b[33m.\u001b[39mresults)\u001b[33m.\u001b[39mtoEqual(mockListings)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 130 |\u001b[39m       expect(data\u001b[33m.\u001b[39mpagination)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 131 |\u001b[39m       expect(data\u001b[33m.\u001b[39mpagination\u001b[33m.\u001b[39mtotalResults)\u001b[33m.\u001b[39mtoBe(mockListings\u001b[33m.\u001b[39mlength)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/listings.test.ts\u001b[39m\u001b[0m\u001b[2m:128:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mListings API › GET /api/sites/[siteSlug]/listings › should handle Redis errors gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m500\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 170 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 171 |\u001b[39m       \u001b[90m// Verify the response\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 172 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 173 |\u001b[39m       expect(data)\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m 174 |\u001b[39m         error\u001b[33m:\u001b[39m \u001b[32m'Failed to fetch listings'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 175 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/listings.test.ts\u001b[39m\u001b[0m\u001b[2m:172:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mListings API › GET /api/sites/[siteSlug]/listings › should handle individual listing fetch errors\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 241 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 242 |\u001b[39m       \u001b[90m// Verify the response - should still get the successful listing\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 243 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 244 |\u001b[39m       expect(data\u001b[33m.\u001b[39mresults)\u001b[33m.\u001b[39mtoEqual([mockListing])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 245 |\u001b[39m       expect(data\u001b[33m.\u001b[39mpagination)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 246 |\u001b[39m       expect(data\u001b[33m.\u001b[39mpagination\u001b[33m.\u001b[39mtotalResults)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/listings.test.ts\u001b[39m\u001b[0m\u001b[2m:243:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mListings API › POST /api/sites/[siteSlug]/listings › should return 404 when category is not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"error\": \"Category not found\",\u001b[39m\n    \u001b[31m+   \"error\": \"Site not found\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 369 |\u001b[39m       \u001b[90m// Verify the response\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 370 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 371 |\u001b[39m       expect(data)\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 372 |\u001b[39m         error\u001b[33m:\u001b[39m \u001b[32m'Category not found'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 373 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 374 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/listings.test.ts\u001b[39m\u001b[0m\u001b[2m:371:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mListings API › POST /api/sites/[siteSlug]/listings › should return 409 when listing slug already exists\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m409\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 451 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 452 |\u001b[39m       \u001b[90m// Verify the response\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 453 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m409\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 454 |\u001b[39m       expect(data)\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m 455 |\u001b[39m         error\u001b[33m:\u001b[39m \u001b[32m'A listing with a similar title already exists'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 456 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/listings.test.ts\u001b[39m\u001b[0m\u001b[2m:453:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mListings API › POST /api/sites/[siteSlug]/listings › should create a new listing successfully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m201\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 540 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 541 |\u001b[39m       \u001b[90m// Verify the response\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 542 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 543 |\u001b[39m       expect(data)\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m 544 |\u001b[39m         id\u001b[33m:\u001b[39m \u001b[32m'listing_1234567890'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 545 |\u001b[39m         siteId\u001b[33m:\u001b[39m \u001b[32m'site1'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/listings.test.ts\u001b[39m\u001b[0m\u001b[2m:542:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mListings API › POST /api/sites/[siteSlug]/listings › should handle errors in Redis transaction\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m500\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 646 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 647 |\u001b[39m       \u001b[90m// Verify the response\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 648 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 649 |\u001b[39m       expect(data)\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m 650 |\u001b[39m         error\u001b[33m:\u001b[39m \u001b[32m'Failed to save listing data'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 651 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/listings.test.ts\u001b[39m\u001b[0m\u001b[2m:648:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mListings API › POST /api/sites/[siteSlug]/listings › should handle search indexing errors gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m500\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 738 |\u001b[39m       \u001b[90m// However, in our test, the mock is causing the route to fail\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 739 |\u001b[39m       \u001b[90m// So we'll verify that the response is a 500 error\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 740 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 741 |\u001b[39m       expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 742 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 743 |\u001b[39m       \u001b[90m// Skip error logging verification as the implementation might have changed\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/listings.test.ts\u001b[39m\u001b[0m\u001b[2m:740:31)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/tenant-membership-service.ts\u001b[2m:22:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/app/api/middleware/secureTenantContext.ts\u001b[2m:29:73)\u001b[22m\n      \u001b[2mat requireActual (\u001b[22m\u001b[0m\u001b[36mtests/unit/middleware/secure-tenant-permission-middleware.test.ts\u001b[39m\u001b[0m\u001b[2m:22:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/middleware/secure-tenant-permission-middleware.test.ts\u001b[39m\u001b[0m\u001b[2m:88:30)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\middleware\\secure-tenant-permission-middleware.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678509,
        "runtime": 422,
        "slow": false,
        "start": 1744009678087
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\alerts\\__tests__\\AlertsList.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "AlertsList"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsList renders a list of alerts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders a list of alerts"
        },
        {
          "ancestorTitles": [
            "AlertsList"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsList shows a loading indicator when isLoading is true and no alerts are present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows a loading indicator when isLoading is true and no alerts are present"
        },
        {
          "ancestorTitles": [
            "AlertsList"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsList shows an error message when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows an error message when there is an error"
        },
        {
          "ancestorTitles": [
            "AlertsList"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsList shows a message when there are no alerts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows a message when there are no alerts"
        },
        {
          "ancestorTitles": [
            "AlertsList"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsList shows a load more button when hasMore is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows a load more button when hasMore is true"
        },
        {
          "ancestorTitles": [
            "AlertsList"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsList calls onLoadMore when the load more button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onLoadMore when the load more button is clicked"
        },
        {
          "ancestorTitles": [
            "AlertsList"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsList passes the correct handlers to AlertCard",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "passes the correct handlers to AlertCard"
        },
        {
          "ancestorTitles": [
            "AlertsList"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsList shows a loading indicator when loading more alerts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows a loading indicator when loading more alerts"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 3,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678510,
        "runtime": 605,
        "slow": false,
        "start": 1744009677905
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\user-flows\\data-retrieval.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Data Retrieval User Flow"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Data Retrieval User Flow should retrieve site configuration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should retrieve site configuration"
        },
        {
          "ancestorTitles": [
            "Data Retrieval User Flow"
          ],
          "duration": 2,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.toBeGreaterThan (C:\\Users\\T\\directorymonster\\tests\\integration\\user-flows\\data-retrieval.test.ts:72:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Data Retrieval User Flow should retrieve categories for a site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "failed",
          "title": "should retrieve categories for a site"
        },
        {
          "ancestorTitles": [
            "Data Retrieval User Flow"
          ],
          "duration": 2,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.toBeGreaterThan (C:\\Users\\T\\directorymonster\\tests\\integration\\user-flows\\data-retrieval.test.ts:107:33)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Data Retrieval User Flow should retrieve listings for a site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "failed",
          "title": "should retrieve listings for a site"
        },
        {
          "ancestorTitles": [
            "Data Retrieval User Flow"
          ],
          "duration": 3,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBeDefined (C:\\Users\\T\\directorymonster\\tests\\integration\\user-flows\\data-retrieval.test.ts:143:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Data Retrieval User Flow should follow the complete data retrieval flow",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should follow the complete data retrieval flow"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mData Retrieval User Flow › should retrieve categories for a site\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 70 |\u001b[39m     \u001b[90m// Verify categories were retrieved\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 71 |\u001b[39m     expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(data))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 72 |\u001b[39m     expect(data\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 73 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 74 |\u001b[39m     \u001b[90m// Verify these are the correct categories for this site\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 75 |\u001b[39m     data\u001b[33m.\u001b[39mforEach((category\u001b[33m:\u001b[39m \u001b[33mCategory\u001b[39m) \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/user-flows/data-retrieval.test.ts\u001b[39m\u001b[0m\u001b[2m:72:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mData Retrieval User Flow › should retrieve listings for a site\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 |\u001b[39m     expect(data\u001b[33m.\u001b[39mresults)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 106 |\u001b[39m     expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(data\u001b[33m.\u001b[39mresults))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 107 |\u001b[39m     expect(data\u001b[33m.\u001b[39mresults\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 109 |\u001b[39m     \u001b[90m// Verify these are the correct listings for this site\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 110 |\u001b[39m     data\u001b[33m.\u001b[39mresults\u001b[33m.\u001b[39mforEach((listing\u001b[33m:\u001b[39m \u001b[33mListing\u001b[39m) \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/user-flows/data-retrieval.test.ts\u001b[39m\u001b[0m\u001b[2m:107:33)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mData Retrieval User Flow › should follow the complete data retrieval flow\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 141 |\u001b[39m     \u001b[90m// Select a category from the response\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 142 |\u001b[39m     \u001b[36mconst\u001b[39m category \u001b[33m=\u001b[39m categoriesData[\u001b[35m0\u001b[39m]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 143 |\u001b[39m     expect(category)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 144 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 145 |\u001b[39m     \u001b[90m// Verify the category belongs to the site\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 146 |\u001b[39m     expect(category\u001b[33m.\u001b[39msiteId)\u001b[33m.\u001b[39mtoBe(site\u001b[33m.\u001b[39mid)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeDefined (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/user-flows/data-retrieval.test.ts\u001b[39m\u001b[0m\u001b[2m:143:22)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678520,
        "runtime": 410,
        "slow": false,
        "start": 1744009678110
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\alerts\\__tests__\\AlertCard.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "AlertCard"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertCard renders alert information correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "renders alert information correctly"
        },
        {
          "ancestorTitles": [
            "AlertCard"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertCard renders action buttons for new alerts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders action buttons for new alerts"
        },
        {
          "ancestorTitles": [
            "AlertCard"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertCard calls the appropriate handler when a button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "calls the appropriate handler when a button is clicked"
        },
        {
          "ancestorTitles": [
            "AlertCard"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertCard does not render buttons when handlers are not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "does not render buttons when handlers are not provided"
        },
        {
          "ancestorTitles": [
            "AlertCard"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertCard renders different buttons based on alert status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders different buttons based on alert status"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678526,
        "runtime": 251,
        "slow": false,
        "start": 1744009678275
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\context-test.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Context Test API",
            "GET /api/admin/context-test"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Context Test API GET /api/admin/context-test should return the context information",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the context information"
        },
        {
          "ancestorTitles": [
            "Context Test API",
            "POST /api/admin/context-test"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Context Test API POST /api/admin/context-test should return the context information when site ID is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the context information when site ID is provided"
        },
        {
          "ancestorTitles": [
            "Context Test API",
            "POST /api/admin/context-test"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Context Test API POST /api/admin/context-test should return 400 when site ID is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 400 when site ID is not provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678526,
        "runtime": 232,
        "slow": false,
        "start": 1744009678294
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\navigation\\SideNav.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SideNav"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SideNav renders SideNav component",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "renders SideNav component"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678577,
        "runtime": 252,
        "slow": false,
        "start": 1744009678325
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\categories\\post.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Categories API - POST"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Categories API - POST should return 404 when site is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 when site is not found"
        },
        {
          "ancestorTitles": [
            "Categories API - POST"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Categories API - POST should return 400 when required fields are missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 400 when required fields are missing"
        },
        {
          "ancestorTitles": [
            "Categories API - POST"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Categories API - POST should return 409 when category slug already exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 409 when category slug already exists"
        },
        {
          "ancestorTitles": [
            "Categories API - POST"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Categories API - POST should create a new category successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a new category successfully"
        },
        {
          "ancestorTitles": [
            "Categories API - POST"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Categories API - POST should handle errors in Redis transaction",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors in Redis transaction"
        },
        {
          "ancestorTitles": [
            "Categories API - POST"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Categories API - POST should handle JSON parsing errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle JSON parsing errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678662,
        "runtime": 392,
        "slow": false,
        "start": 1744009678270
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\activity\\__tests__\\ActivityTable.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ActivityTable"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityTable renders the table with headers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the table with headers"
        },
        {
          "ancestorTitles": [
            "ActivityTable"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityTable renders activity data correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "renders activity data correctly"
        },
        {
          "ancestorTitles": [
            "ActivityTable"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityTable shows a loading indicator when isLoading is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows a loading indicator when isLoading is true"
        },
        {
          "ancestorTitles": [
            "ActivityTable"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityTable shows an error message when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows an error message when there is an error"
        },
        {
          "ancestorTitles": [
            "ActivityTable"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityTable shows a message when there are no activities",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows a message when there are no activities"
        },
        {
          "ancestorTitles": [
            "ActivityTable"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityTable shows a load more button when hasMore is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows a load more button when hasMore is true"
        },
        {
          "ancestorTitles": [
            "ActivityTable"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityTable does not show a load more button when hasMore is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not show a load more button when hasMore is false"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678663,
        "runtime": 381,
        "slow": false,
        "start": 1744009678282
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\alerts\\__tests__\\AlertsFilter.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "AlertsFilter"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsFilter renders correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correctly"
        },
        {
          "ancestorTitles": [
            "AlertsFilter"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsFilter calls onStartDateChange when start date is changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onStartDateChange when start date is changed"
        },
        {
          "ancestorTitles": [
            "AlertsFilter"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsFilter calls onEndDateChange when end date is changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onEndDateChange when end date is changed"
        },
        {
          "ancestorTitles": [
            "AlertsFilter"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsFilter calls onApplyDateFilter when apply button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onApplyDateFilter when apply button is clicked"
        },
        {
          "ancestorTitles": [
            "AlertsFilter"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AlertsFilter displays the selected severity filter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays the selected severity filter"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678685,
        "runtime": 357,
        "slow": false,
        "start": 1744009678328
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\cross-cutting\\DataPersistence.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Data Persistence Across Page Refreshes"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Data Persistence Across Page Refreshes should save form data to localStorage when user types",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should save form data to localStorage when user types"
        },
        {
          "ancestorTitles": [
            "Integration: Data Persistence Across Page Refreshes"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Data Persistence Across Page Refreshes should load saved form data from localStorage on page load",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should load saved form data from localStorage on page load"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/redis/memory-store.ts\u001b[2m:16:10)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/connection-manager.ts\u001b[2m:60:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/client.ts\u001b[2m:36:28)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/index.ts\u001b[2m:9:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis.ts\u001b[2m:7:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/redis/integration.test.ts\u001b[39m\u001b[0m\u001b[2m:5:16)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\redis\\integration.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678701,
        "runtime": 280,
        "slow": false,
        "start": 1744009678421
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useLoginAttempts.debug.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useLoginAttempts debug test"
          ],
          "duration": 35,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttempts debug test debug test with logging",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "debug test with logging"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678755,
        "runtime": 222,
        "slow": false,
        "start": 1744009678533
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\middleware\\tenant-context.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "TenantContext Class"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantContext Class should initialize with correct tenant ID and user ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize with correct tenant ID and user ID"
        },
        {
          "ancestorTitles": [
            "TenantContext Class"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantContext Class should create context from request",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should create context from request"
        },
        {
          "ancestorTitles": [
            "TenantContext Class"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantContext Class should return null if tenant ID is missing from headers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null if tenant ID is missing from headers"
        },
        {
          "ancestorTitles": [
            "TenantContext Class"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantContext Class should return null if auth header is missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null if auth header is missing"
        },
        {
          "ancestorTitles": [
            "TenantContext Class"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantContext Class should return null if auth header does not start with Bearer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null if auth header does not start with Bearer"
        },
        {
          "ancestorTitles": [
            "TenantContext Class"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantContext Class should return null if tenant ID is not a valid UUID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null if tenant ID is not a valid UUID"
        },
        {
          "ancestorTitles": [
            "TenantContext Class"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantContext Class should return null if token verification fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null if token verification fails"
        },
        {
          "ancestorTitles": [
            "TenantContext Class"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantContext Class should return null if decoded token has no userId",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null if decoded token has no userId"
        },
        {
          "ancestorTitles": [
            "TenantContext Class"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantContext Class should return null if user is not a member of the tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null if user is not a member of the tenant"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678771,
        "runtime": 369,
        "slow": false,
        "start": 1744009678402
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\search\\removed.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Search API Removal"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search API Removal should not have a global search API route file",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not have a global search API route file"
        },
        {
          "ancestorTitles": [
            "Search API Removal"
          ],
          "duration": 107,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search API Removal should use the site-specific search API instead",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should use the site-specific search API instead"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678778,
        "runtime": 226,
        "slow": false,
        "start": 1744009678552
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\users\\delete-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "DELETE /api/admin/users/[id] ACL Protection"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DELETE /api/admin/users/[id] ACL Protection should use withSecureTenantPermission with user:delete",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with user:delete"
        },
        {
          "ancestorTitles": [
            "DELETE /api/admin/users/[id] ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DELETE /api/admin/users/[id] ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678784,
        "runtime": 192,
        "slow": false,
        "start": 1744009678592
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\lib\\role-service\\__tests__\\dummy.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Role Service - Dummy Test"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Role Service - Dummy Test should pass a simple test",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass a simple test"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 13,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678802,
        "runtime": 235,
        "slow": false,
        "start": 1744009678567
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\components\\admin\\auth\\utils\\roles.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Roles Utilities",
            "Key generation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles Utilities Key generation should generate correct role key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate correct role key"
        },
        {
          "ancestorTitles": [
            "Roles Utilities",
            "Key generation"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles Utilities Key generation should generate correct user roles key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate correct user roles key"
        },
        {
          "ancestorTitles": [
            "Roles Utilities",
            "Key generation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles Utilities Key generation should generate correct tenant users key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate correct tenant users key"
        },
        {
          "ancestorTitles": [
            "Roles Utilities",
            "convertToTenantACL"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles Utilities convertToTenantACL should convert legacy ACL to tenant ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should convert legacy ACL to tenant ACL"
        },
        {
          "ancestorTitles": [
            "Roles Utilities",
            "hasPermissionInTenant"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles Utilities hasPermissionInTenant should return true when user has exact permission in tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true when user has exact permission in tenant"
        },
        {
          "ancestorTitles": [
            "Roles Utilities",
            "hasPermissionInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles Utilities hasPermissionInTenant should return true when user has global permission for resource type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true when user has global permission for resource type"
        },
        {
          "ancestorTitles": [
            "Roles Utilities",
            "hasPermissionInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles Utilities hasPermissionInTenant should ignore roles from different tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should ignore roles from different tenants"
        },
        {
          "ancestorTitles": [
            "Roles Utilities",
            "hasPermissionInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles Utilities hasPermissionInTenant should consider global roles for any tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should consider global roles for any tenant"
        },
        {
          "ancestorTitles": [
            "Roles Utilities",
            "hasPermissionInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles Utilities hasPermissionInTenant should return false when no roles have the permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when no roles have the permission"
        },
        {
          "ancestorTitles": [
            "Roles Utilities",
            "createTenantAdminRole"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles Utilities createTenantAdminRole should create a tenant admin role with all permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 29,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a tenant admin role with all permissions"
        },
        {
          "ancestorTitles": [
            "Roles Utilities",
            "createTenantAdminRole"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles Utilities createTenantAdminRole should accept custom name and description",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should accept custom name and description"
        },
        {
          "ancestorTitles": [
            "Roles Utilities",
            "createSuperAdminRole"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles Utilities createSuperAdminRole should create a global super admin role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 28,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a global super admin role"
        },
        {
          "ancestorTitles": [
            "Roles Utilities",
            "createSuperAdminRole"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles Utilities createSuperAdminRole should accept custom name and description",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should accept custom name and description"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/redis/memory-store.ts\u001b[2m:16:10)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/connection-manager.ts\u001b[2m:60:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/redis/reconnection.test.ts\u001b[39m\u001b[0m\u001b[2m:5:28)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\redis\\reconnection.test.ts",
      "testResults": []
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/audit-integration.test.ts\u001b[39m\u001b[0m\u001b[2m:10:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\audit-integration.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678830,
        "runtime": 207,
        "slow": false,
        "start": 1744009678623
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\middleware\\withAuthentication.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Authentication Middleware",
            "withAuthentication"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Middleware withAuthentication should reject requests without authentication",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject requests without authentication"
        },
        {
          "ancestorTitles": [
            "Authentication Middleware",
            "withAuthentication"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Middleware withAuthentication should reject requests with invalid token format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject requests with invalid token format"
        },
        {
          "ancestorTitles": [
            "Authentication Middleware",
            "withAuthentication"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Middleware withAuthentication should reject requests with invalid token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject requests with invalid token"
        },
        {
          "ancestorTitles": [
            "Authentication Middleware",
            "withAuthentication"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Middleware withAuthentication should allow requests with valid token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow requests with valid token"
        },
        {
          "ancestorTitles": [
            "Authentication Middleware",
            "withAuthentication"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Middleware withAuthentication should handle unexpected errors in the handler",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle unexpected errors in the handler"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678895,
        "runtime": 200,
        "slow": false,
        "start": 1744009678695
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\crypto\\zkp-privacy.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKP Circuit Privacy",
            "Circuit Signal Privacy"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Circuit Privacy Circuit Signal Privacy should mark password as private input in Main template",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should mark password as private input in Main template"
        },
        {
          "ancestorTitles": [
            "ZKP Circuit Privacy",
            "Circuit Signal Privacy"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Circuit Privacy Circuit Signal Privacy should not expose password in public signals",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not expose password in public signals"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678909,
        "runtime": 212,
        "slow": false,
        "start": 1744009678697
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\types\\submission.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Submission Type",
            "SubmissionStatus enum"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Type SubmissionStatus enum should have the correct status values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should have the correct status values"
        },
        {
          "ancestorTitles": [
            "Submission Type",
            "validateSubmission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Type validateSubmission should validate a valid submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate a valid submission"
        },
        {
          "ancestorTitles": [
            "Submission Type",
            "validateSubmission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Type validateSubmission should reject a submission without required fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject a submission without required fields"
        },
        {
          "ancestorTitles": [
            "Submission Type",
            "validateSubmission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Type validateSubmission should reject a submission with invalid status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject a submission with invalid status"
        },
        {
          "ancestorTitles": [
            "Submission Type",
            "transformToListing"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Type transformToListing should transform a submission to a listing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 12,
          "retryReasons": [],
          "status": "passed",
          "title": "should transform a submission to a listing"
        },
        {
          "ancestorTitles": [
            "Submission Type",
            "transformToListing"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Type transformToListing should only transform approved submissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should only transform approved submissions"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678938,
        "runtime": 210,
        "slow": false,
        "start": 1744009678728
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\page-rendering.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Page Rendering Tests",
            "Site Hostname Resolution for Page Rendering"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Page Rendering Tests Site Hostname Resolution for Page Rendering should resolve site based on domain hostname for fishing site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should resolve site based on domain hostname for fishing site"
        },
        {
          "ancestorTitles": [
            "Page Rendering Tests",
            "Site Hostname Resolution for Page Rendering"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Page Rendering Tests Site Hostname Resolution for Page Rendering should resolve site based on domain hostname for hiking site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should resolve site based on domain hostname for hiking site"
        },
        {
          "ancestorTitles": [
            "Page Rendering Tests",
            "Site Hostname Resolution for Page Rendering"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Page Rendering Tests Site Hostname Resolution for Page Rendering should resolve site based on subdomain hostname",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should resolve site based on subdomain hostname"
        },
        {
          "ancestorTitles": [
            "Page Rendering Tests",
            "Site Hostname Resolution for Page Rendering"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Page Rendering Tests Site Hostname Resolution for Page Rendering should normalize hostname by removing port and protocol",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should normalize hostname by removing port and protocol"
        },
        {
          "ancestorTitles": [
            "Page Rendering Tests",
            "Homepage Rendering"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Page Rendering Tests Homepage Rendering should retrieve categories for the correct site based on hostname",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should retrieve categories for the correct site based on hostname"
        },
        {
          "ancestorTitles": [
            "Page Rendering Tests",
            "Homepage Rendering"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Page Rendering Tests Homepage Rendering should retrieve different categories for a different site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should retrieve different categories for a different site"
        },
        {
          "ancestorTitles": [
            "Page Rendering Tests",
            "Category Page Rendering"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Page Rendering Tests Category Page Rendering should retrieve listings for the correct category",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should retrieve listings for the correct category"
        },
        {
          "ancestorTitles": [
            "Page Rendering Tests",
            "Listing Page Rendering"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Page Rendering Tests Listing Page Rendering should retrieve the correct listing details",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should retrieve the correct listing details"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678940,
        "runtime": 204,
        "slow": false,
        "start": 1744009678736
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\middleware\\withRedis.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "withRedis Middleware Integration Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withRedis Middleware Integration Tests should allow requests when Redis is connected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow requests when Redis is connected"
        },
        {
          "ancestorTitles": [
            "withRedis Middleware Integration Tests"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withRedis Middleware Integration Tests should still proceed with the request when Redis is not connected but add a header",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should still proceed with the request when Redis is not connected but add a header"
        },
        {
          "ancestorTitles": [
            "withRedis Middleware Integration Tests"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withRedis Middleware Integration Tests should return a 503 error when an exception is thrown during execution",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a 503 error when an exception is thrown during execution"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009678967,
        "runtime": 174,
        "slow": false,
        "start": 1744009678793
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\Button.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Button"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Button renders Button component",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "renders Button component"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679001,
        "runtime": 180,
        "slow": false,
        "start": 1744009678821
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\security\\LoginAttemptsMap.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "LoginAttemptsMap"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsMap renders the map correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the map correctly"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsMap"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsMap shows loading state when isLoading is true and no data is available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows loading state when isLoading is true and no data is available"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsMap"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsMap shows error state when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows error state when there is an error"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsMap"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsMap shows empty state when there is no data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "shows empty state when there is no data"
        },
        {
          "ancestorTitles": [
            "LoginAttemptsMap"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "LoginAttemptsMap displays a popup when a marker is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays a popup when a marker is clicked"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679005,
        "runtime": 187,
        "slow": false,
        "start": 1744009678818
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\app\\api\\admin\\roles\\global\\[id]\\users\\__tests__\\route.pagination.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/roles/global/[id]/users with pagination"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/roles/global/[id]/users with pagination should return all users when no pagination parameters are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all users when no pagination parameters are provided"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/roles/global/[id]/users with pagination"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/roles/global/[id]/users with pagination should return paginated users when pagination parameters are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return paginated users when pagination parameters are provided"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/roles/global/[id]/users with pagination"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/roles/global/[id]/users with pagination should handle invalid pagination parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle invalid pagination parameters"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679024,
        "runtime": 284,
        "slow": false,
        "start": 1744009678740
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\products\\removed.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Products API Removal"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Products API Removal should not have a products API route file",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not have a products API route file"
        },
        {
          "ancestorTitles": [
            "Products API Removal"
          ],
          "duration": 85,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Products API Removal should use the site-specific listings API instead",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should use the site-specific listings API instead"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/secure-redis-client.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/security/cross-tenant-isolation.jest.test.ts\u001b[39m\u001b[0m\u001b[2m:18:28)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\security\\cross-tenant-isolation.jest.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679052,
        "runtime": 190,
        "slow": false,
        "start": 1744009678862
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\utils\\__tests__\\ip-validator.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "IP Address Validation",
            "isValidIPv4"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Address Validation isValidIPv4 should return true for valid IPv4 addresses",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true for valid IPv4 addresses"
        },
        {
          "ancestorTitles": [
            "IP Address Validation",
            "isValidIPv4"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Address Validation isValidIPv4 should return false for invalid IPv4 addresses",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 17,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for invalid IPv4 addresses"
        },
        {
          "ancestorTitles": [
            "IP Address Validation",
            "isValidIPv6"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Address Validation isValidIPv6 should return true for valid IPv6 addresses",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 10,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true for valid IPv6 addresses"
        },
        {
          "ancestorTitles": [
            "IP Address Validation",
            "isValidIPv6"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Address Validation isValidIPv6 should return false for invalid IPv6 addresses",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 14,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for invalid IPv6 addresses"
        },
        {
          "ancestorTitles": [
            "IP Address Validation",
            "isValidIPv6"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Address Validation isValidIPv6 should handle IPv4-mapped IPv6 addresses correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle IPv4-mapped IPv6 addresses correctly"
        },
        {
          "ancestorTitles": [
            "IP Address Validation",
            "isValidIP"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Address Validation isValidIP should return true for valid IP addresses (both IPv4 and IPv6)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true for valid IP addresses (both IPv4 and IPv6)"
        },
        {
          "ancestorTitles": [
            "IP Address Validation",
            "isValidIP"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "IP Address Validation isValidIP should return false for invalid IP addresses",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for invalid IP addresses"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 15,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679058,
        "runtime": 203,
        "slow": false,
        "start": 1744009678855
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\auth\\captcha-service.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "Threshold Configuration"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service Threshold Configuration should get the CAPTCHA threshold based on risk level",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should get the CAPTCHA threshold based on risk level"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "Threshold Configuration"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service Threshold Configuration should handle errors when getting the threshold",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors when getting the threshold"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "CAPTCHA Requirement"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service CAPTCHA Requirement should check if CAPTCHA is required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check if CAPTCHA is required"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "CAPTCHA Requirement"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service CAPTCHA Requirement should return false if CAPTCHA is not required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if CAPTCHA is not required"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "CAPTCHA Requirement"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service CAPTCHA Requirement should record a failed attempt for CAPTCHA",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should record a failed attempt for CAPTCHA"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "CAPTCHA Requirement"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service CAPTCHA Requirement should require CAPTCHA after threshold is reached",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should require CAPTCHA after threshold is reached"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "CAPTCHA Requirement"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service CAPTCHA Requirement should reset CAPTCHA requirement",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset CAPTCHA requirement"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "CAPTCHA Verification"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service CAPTCHA Verification should verify a CAPTCHA token with reCAPTCHA",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify a CAPTCHA token with reCAPTCHA"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "CAPTCHA Verification"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service CAPTCHA Verification should return true if CAPTCHA is not required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if CAPTCHA is not required"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "CAPTCHA Verification"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service CAPTCHA Verification should return false for invalid tokens",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for invalid tokens"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "CAPTCHA Verification"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service CAPTCHA Verification should use fallback verification if reCAPTCHA API fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use fallback verification if reCAPTCHA API fails"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "CAPTCHA Verification"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service CAPTCHA Verification should use simple verification if no reCAPTCHA secret key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should use simple verification if no reCAPTCHA secret key"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "Error Handling"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service Error Handling should handle Redis errors when checking if CAPTCHA is required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors when checking if CAPTCHA is required"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "Error Handling"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service Error Handling should handle Redis errors when recording failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors when recording failed attempts"
        },
        {
          "ancestorTitles": [
            "CAPTCHA Service",
            "Error Handling"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CAPTCHA Service Error Handling should handle Redis errors when resetting CAPTCHA requirement",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors when resetting CAPTCHA requirement"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/category-service.ts\u001b[2m:11:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/lib/category-service.early.test/cacheCategories.early.test.ts\u001b[39m\u001b[0m\u001b[2m:5:26)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\lib\\category-service.early.test\\cacheCategories.early.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679119,
        "runtime": 279,
        "slow": false,
        "start": 1744009678840
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\security\\advanced-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Advanced ACL Tests",
            "Permission Level Tests"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Advanced ACL Tests Permission Level Tests should allow access with exact resource permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow access with exact resource permission"
        },
        {
          "ancestorTitles": [
            "Advanced ACL Tests",
            "Permission Level Tests"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Advanced ACL Tests Permission Level Tests should allow access with type-level permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow access with type-level permission"
        },
        {
          "ancestorTitles": [
            "Advanced ACL Tests",
            "Permission Level Tests"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Advanced ACL Tests Permission Level Tests should allow access with manage permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow access with manage permission"
        },
        {
          "ancestorTitles": [
            "Advanced ACL Tests",
            "Permission Level Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Advanced ACL Tests Permission Level Tests should deny access when permission is missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should deny access when permission is missing"
        },
        {
          "ancestorTitles": [
            "Advanced ACL Tests",
            "Cross-Tenant Access Prevention"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Advanced ACL Tests Cross-Tenant Access Prevention should deny access when accessing resource from another tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should deny access when accessing resource from another tenant"
        },
        {
          "ancestorTitles": [
            "Advanced ACL Tests",
            "Cross-Tenant Access Prevention"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Advanced ACL Tests Cross-Tenant Access Prevention should deny access when tenant ID in query params does not match context",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should deny access when tenant ID in query params does not match context"
        },
        {
          "ancestorTitles": [
            "Advanced ACL Tests",
            "Cross-Tenant Access Prevention"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Advanced ACL Tests Cross-Tenant Access Prevention should allow access when accessing own tenant resources",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow access when accessing own tenant resources"
        },
        {
          "ancestorTitles": [
            "Advanced ACL Tests",
            "User Role Access Patterns"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Advanced ACL Tests User Role Access Patterns Super Admin should have access to all resources",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Super Admin should have access to all resources"
        },
        {
          "ancestorTitles": [
            "Advanced ACL Tests",
            "User Role Access Patterns"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Advanced ACL Tests User Role Access Patterns Tenant Admin should have access to all resources within their tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Tenant Admin should have access to all resources within their tenant"
        },
        {
          "ancestorTitles": [
            "Advanced ACL Tests",
            "User Role Access Patterns"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Advanced ACL Tests User Role Access Patterns Site Admin should have access only to their site resources",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Site Admin should have access only to their site resources"
        },
        {
          "ancestorTitles": [
            "Advanced ACL Tests",
            "User Role Access Patterns"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Advanced ACL Tests User Role Access Patterns Regular User should have limited permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Regular User should have limited permissions"
        },
        {
          "ancestorTitles": [
            "Advanced ACL Tests",
            "User Role Access Patterns"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Advanced ACL Tests User Role Access Patterns Unauthorized User should be denied access",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Unauthorized User should be denied access"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679147,
        "runtime": 200,
        "slow": false,
        "start": 1744009678947
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\lib\\audit\\__tests__\\audit-service-mock-cross-site.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Mock AuditService Cross-Site Access"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Mock AuditService Cross-Site Access should have logCrossSiteAccessAttempt method",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have logCrossSiteAccessAttempt method"
        },
        {
          "ancestorTitles": [
            "Mock AuditService Cross-Site Access"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Mock AuditService Cross-Site Access should log cross-site access attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log cross-site access attempts"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 4,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679150,
        "runtime": 227,
        "slow": false,
        "start": 1744009678923
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\categories\\get.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Categories API - GET"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"test:site:slug:non-existent\"\u001b[39m\nReceived: \u001b[31m\"site:slug:non-existent\"\u001b[39m\n\nNumber of calls: \u001b[31m1\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"test:site:slug:non-existent\"\u001b[39m\nReceived: \u001b[31m\"site:slug:non-existent\"\u001b[39m\n\nNumber of calls: \u001b[31m1\u001b[39m\n    at Object.toHaveBeenCalledWith (C:\\Users\\T\\directorymonster\\tests\\api\\categories\\get.test.ts:60:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Categories API - GET should return 404 when site is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "failed",
          "title": "should return 404 when site is not found"
        },
        {
          "ancestorTitles": [
            "Categories API - GET"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 200,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\api\\categories\\get.test.ts:131:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Categories API - GET should return categories for a valid site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should return categories for a valid site"
        },
        {
          "ancestorTitles": [
            "Categories API - GET"
          ],
          "duration": 1,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 500,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\api\\categories\\get.test.ts:176:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Categories API - GET should handle Redis keys error gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle Redis keys error gracefully"
        },
        {
          "ancestorTitles": [
            "Categories API - GET"
          ],
          "duration": 0,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 500,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\T\\directorymonster\\tests\\api\\categories\\get.test.ts:227:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Categories API - GET should handle Redis errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle Redis errors gracefully"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCategories API - GET › should return 404 when site is not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m\"test:site:slug:non-existent\"\u001b[39m\n    Received: \u001b[31m\"site:slug:non-existent\"\u001b[39m\n\n    Number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 58 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 59 |\u001b[39m     \u001b[90m// Verify the Redis client was called correctly\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 60 |\u001b[39m     expect(kv\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m'test:site:slug:non-existent'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 61 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 62 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 63 |\u001b[39m   it(\u001b[32m'should return categories for a valid site'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/categories/get.test.ts\u001b[39m\u001b[0m\u001b[2m:60:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCategories API - GET › should return categories for a valid site\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 129 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 130 |\u001b[39m     \u001b[90m// Verify the response\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 131 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 132 |\u001b[39m     expect(data)\u001b[33m.\u001b[39mtoEqual(mockCategories)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 133 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 134 |\u001b[39m     \u001b[90m// Verify the Redis client was called correctly\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/categories/get.test.ts\u001b[39m\u001b[0m\u001b[2m:131:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCategories API - GET › should handle Redis keys error gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m500\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 174 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 175 |\u001b[39m     \u001b[90m// Verify the response\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 176 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 177 |\u001b[39m     expect(data)\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m 178 |\u001b[39m       error\u001b[33m:\u001b[39m \u001b[32m'Failed to fetch categories'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 179 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/categories/get.test.ts\u001b[39m\u001b[0m\u001b[2m:176:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCategories API - GET › should handle Redis errors gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m500\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 225 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 226 |\u001b[39m     \u001b[90m// Verify the response status is 500 for server error\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 227 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 228 |\u001b[39m     expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 229 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 230 |\u001b[39m     \u001b[90m// Verify error was logged\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/categories/get.test.ts\u001b[39m\u001b[0m\u001b[2m:227:29)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679164,
        "runtime": 193,
        "slow": false,
        "start": 1744009678971
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\security\\login-attempts-map-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/security/login-attempts-map ACL Protection"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/security/login-attempts-map ACL Protection should use withSecureTenantPermission with security:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with security:read"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/security/login-attempts-map ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/security/login-attempts-map ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679169,
        "runtime": 201,
        "slow": false,
        "start": 1744009678968
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\healthcheck.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Healthcheck API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Healthcheck API should return healthy status when Redis is healthy",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return healthy status when Redis is healthy"
        },
        {
          "ancestorTitles": [
            "Healthcheck API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Healthcheck API should return unhealthy status when Redis is unhealthy",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return unhealthy status when Redis is unhealthy"
        },
        {
          "ancestorTitles": [
            "Healthcheck API"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Healthcheck API should use default values when environment variables are not set",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use default values when environment variables are not set"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679213,
        "runtime": 215,
        "slow": false,
        "start": 1744009678998
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\lib\\audit\\__tests__\\audit-service.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "AuditService",
            "logEvent"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuditService logEvent should create an audit event with all required fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 11,
          "retryReasons": [],
          "status": "passed",
          "title": "should create an audit event with all required fields"
        },
        {
          "ancestorTitles": [
            "AuditService",
            "logEvent"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuditService logEvent should use default severity if not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use default severity if not provided"
        },
        {
          "ancestorTitles": [
            "AuditService",
            "logEvent"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuditService logEvent should handle errors gracefully in production",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors gracefully in production"
        },
        {
          "ancestorTitles": [
            "AuditService",
            "logPermissionEvent"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuditService logPermissionEvent should log successful permission checks",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should log successful permission checks"
        },
        {
          "ancestorTitles": [
            "AuditService",
            "logPermissionEvent"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuditService logPermissionEvent should log failed permission checks",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should log failed permission checks"
        },
        {
          "ancestorTitles": [
            "AuditService",
            "queryEvents"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuditService queryEvents should query events with basic filters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should query events with basic filters"
        },
        {
          "ancestorTitles": [
            "AuditService",
            "queryEvents"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuditService queryEvents should enforce tenant isolation for non-admin users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should enforce tenant isolation for non-admin users"
        },
        {
          "ancestorTitles": [
            "AuditService",
            "queryEvents"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuditService queryEvents should allow global admins to see cross-tenant events",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow global admins to see cross-tenant events"
        },
        {
          "ancestorTitles": [
            "AuditService",
            "queryEvents"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuditService queryEvents should filter events by action",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter events by action"
        },
        {
          "ancestorTitles": [
            "AuditService",
            "getRecentEvents"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuditService getRecentEvents should retrieve recent events for a tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should retrieve recent events for a tenant"
        },
        {
          "ancestorTitles": [
            "AuditService",
            "pruneOldEvents"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuditService pruneOldEvents should delete events older than the retention period",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should delete events older than the retention period"
        },
        {
          "ancestorTitles": [
            "AuditService",
            "pruneOldEvents"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuditService pruneOldEvents should handle no events to delete",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle no events to delete"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679227,
        "runtime": 187,
        "slow": false,
        "start": 1744009679040
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\multitenant-integration.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Multitenancy Integration Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Multitenancy Integration Tests Domain and subdomain resolution tests",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Domain and subdomain resolution tests"
        },
        {
          "ancestorTitles": [
            "Multitenancy Integration Tests"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Multitenancy Integration Tests Multiple hostnames should resolve to correct sites",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "Multiple hostnames should resolve to correct sites"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679260,
        "runtime": 208,
        "slow": false,
        "start": 1744009679052
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\roles\\global-id-assign.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Global Role Assign API",
            "POST /api/admin/roles/global/[id]/assign"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role Assign API POST /api/admin/roles/global/[id]/assign should assign a global role to a user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should assign a global role to a user"
        },
        {
          "ancestorTitles": [
            "Global Role Assign API",
            "POST /api/admin/roles/global/[id]/assign"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role Assign API POST /api/admin/roles/global/[id]/assign should validate required fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate required fields"
        },
        {
          "ancestorTitles": [
            "Global Role Assign API",
            "POST /api/admin/roles/global/[id]/assign"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role Assign API POST /api/admin/roles/global/[id]/assign should return 404 if role not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 if role not found"
        },
        {
          "ancestorTitles": [
            "Global Role Assign API",
            "POST /api/admin/roles/global/[id]/assign"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role Assign API POST /api/admin/roles/global/[id]/assign should handle errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679275,
        "runtime": 189,
        "slow": false,
        "start": 1744009679086
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\acl-operations.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "ACL Operations",
            "addACLEntry"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations addACLEntry should add an ACL entry to a tenant role and log an audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should add an ACL entry to a tenant role and log an audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "addACLEntry"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations addACLEntry should add an ACL entry to a global role and log an audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should add an ACL entry to a global role and log an audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "addACLEntry"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations addACLEntry should not add a duplicate ACL entry",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should not add a duplicate ACL entry"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "removeACLEntry"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations removeACLEntry should remove an ACL entry from a tenant role and log an audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove an ACL entry from a tenant role and log an audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "removeACLEntry"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations removeACLEntry should remove an ACL entry from a global role and log an audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove an ACL entry from a global role and log an audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "removeACLEntry"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations removeACLEntry should return false if the ACL entry does not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if the ACL entry does not exist"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "updateRoleACL"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations updateRoleACL should update all ACL entries for a tenant role and log an audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should update all ACL entries for a tenant role and log an audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "updateRoleACL"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations updateRoleACL should update all ACL entries for a global role and log an audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should update all ACL entries for a global role and log an audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "updateRoleACL"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations updateRoleACL should include detailed change information in the audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should include detailed change information in the audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "hasACLEntry"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations hasACLEntry should return true if the role has the ACL entry",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if the role has the ACL entry"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "hasACLEntry"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations hasACLEntry should return false if the role does not have the ACL entry",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if the role does not have the ACL entry"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "hasACLEntry"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations hasACLEntry should check for resource ID if provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should check for resource ID if provided"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/redis/memory-store.ts\u001b[2m:16:10)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis/connection-manager.ts\u001b[2m:60:22)\u001b[22m\n      \u001b[2mat requireActual (\u001b[22m\u001b[0m\u001b[36mtests/redis/connection-manager.test.ts\u001b[39m\u001b[0m\u001b[2m:13:29)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/redis/connection-manager.test.ts\u001b[39m\u001b[0m\u001b[2m:32:28)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\redis\\connection-manager.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679282,
        "runtime": 202,
        "slow": false,
        "start": 1744009679080
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\users\\acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "POST /api/admin/users ACL Protection"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/users ACL Protection should use withSecureTenantPermission with user:create",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with user:create"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/users ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/users ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679306,
        "runtime": 213,
        "slow": false,
        "start": 1744009679093
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\auth\\authentication-flow.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Authentication Flow Integration",
            "Successful Authentication"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Flow Integration Successful Authentication should authenticate a user with valid credentials",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 11,
          "retryReasons": [],
          "status": "passed",
          "title": "should authenticate a user with valid credentials"
        },
        {
          "ancestorTitles": [
            "Authentication Flow Integration",
            "Failed Authentication"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Flow Integration Failed Authentication should reject authentication with invalid credentials",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject authentication with invalid credentials"
        },
        {
          "ancestorTitles": [
            "Authentication Flow Integration",
            "Failed Authentication"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Flow Integration Failed Authentication should require CAPTCHA after multiple failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should require CAPTCHA after multiple failed attempts"
        },
        {
          "ancestorTitles": [
            "Authentication Flow Integration",
            "Failed Authentication"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Flow Integration Failed Authentication should accept authentication with valid CAPTCHA",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should accept authentication with valid CAPTCHA"
        },
        {
          "ancestorTitles": [
            "Authentication Flow Integration",
            "Rate Limiting"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Flow Integration Rate Limiting should apply rate limiting for repeated failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply rate limiting for repeated failed attempts"
        },
        {
          "ancestorTitles": [
            "Authentication Flow Integration",
            "IP Blocking"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Authentication Flow Integration IP Blocking should block authentication attempts from blocked IPs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should block authentication attempts from blocked IPs"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679336,
        "runtime": 205,
        "slow": false,
        "start": 1744009679131
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\roles\\global.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Global Roles API",
            "GET /api/admin/roles/global"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Roles API GET /api/admin/roles/global should return global roles",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return global roles"
        },
        {
          "ancestorTitles": [
            "Global Roles API",
            "GET /api/admin/roles/global"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Roles API GET /api/admin/roles/global should handle errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors"
        },
        {
          "ancestorTitles": [
            "Global Roles API",
            "POST /api/admin/roles/global"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Roles API POST /api/admin/roles/global should create a new global role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a new global role"
        },
        {
          "ancestorTitles": [
            "Global Roles API",
            "POST /api/admin/roles/global"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Roles API POST /api/admin/roles/global should validate required fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate required fields"
        },
        {
          "ancestorTitles": [
            "Global Roles API",
            "POST /api/admin/roles/global"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Roles API POST /api/admin/roles/global should handle errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679354,
        "runtime": 208,
        "slow": false,
        "start": 1744009679146
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\submissions\\acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/submissions ACL Protection"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/submissions ACL Protection should use withSecureTenantPermission with submission:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with submission:read"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/submissions ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/submissions ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/submissions ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/submissions ACL Protection should use withSecureTenantPermission with submission:create",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with submission:create"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/submissions ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/submissions ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679368,
        "runtime": 184,
        "slow": false,
        "start": 1744009679184
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\dashboard\\hooks\\useActivityFeed.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useActivityFeed Hook"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useActivityFeed Hook returns loading state initially",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns loading state initially"
        },
        {
          "ancestorTitles": [
            "useActivityFeed Hook"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useActivityFeed Hook returns activities after loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns activities after loading"
        },
        {
          "ancestorTitles": [
            "useActivityFeed Hook"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useActivityFeed Hook applies filters correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies filters correctly"
        },
        {
          "ancestorTitles": [
            "useActivityFeed Hook"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useActivityFeed Hook returns empty array when no activities match filters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns empty array when no activities match filters"
        },
        {
          "ancestorTitles": [
            "useActivityFeed Hook"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useActivityFeed Hook handles loadMore correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles loadMore correctly"
        },
        {
          "ancestorTitles": [
            "useActivityFeed Hook"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useActivityFeed Hook refreshes data when refresh is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "refreshes data when refresh is called"
        },
        {
          "ancestorTitles": [
            "useActivityFeed Hook"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useActivityFeed Hook sorts activities by timestamp (newest first)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "sorts activities by timestamp (newest first)"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679381,
        "runtime": 205,
        "slow": false,
        "start": 1744009679176
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\sites\\domains\\verify.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API returns 400 if domain is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns 400 if domain is not provided"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API returns 404 if site is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns 404 if site is not found"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API returns 400 if domain is not associated with the site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns 400 if domain is not associated with the site"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API automatically verifies test domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "automatically verifies test domains"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API verifies domain with correct DNS records",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "verifies domain with correct DNS records"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API fails verification with incorrect A record",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "fails verification with incorrect A record"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API fails verification with incorrect CNAME record",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "fails verification with incorrect CNAME record"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API handles DNS resolution errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles DNS resolution errors gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679394,
        "runtime": 194,
        "slow": false,
        "start": 1744009679200
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\auth\\progressive-delay.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Progressive Delay",
            "getProgressiveDelay"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Progressive Delay getProgressiveDelay should return 0 for no failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 0 for no failed attempts"
        },
        {
          "ancestorTitles": [
            "Progressive Delay",
            "getProgressiveDelay"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Progressive Delay getProgressiveDelay should return base delay for first failed attempt",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return base delay for first failed attempt"
        },
        {
          "ancestorTitles": [
            "Progressive Delay",
            "getProgressiveDelay"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Progressive Delay getProgressiveDelay should apply exponential backoff for multiple failed attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 12,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply exponential backoff for multiple failed attempts"
        },
        {
          "ancestorTitles": [
            "Progressive Delay",
            "getProgressiveDelay"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Progressive Delay getProgressiveDelay should apply jitter to the delay",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply jitter to the delay"
        },
        {
          "ancestorTitles": [
            "Progressive Delay",
            "getProgressiveDelay"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Progressive Delay getProgressiveDelay should handle Redis errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors"
        },
        {
          "ancestorTitles": [
            "Progressive Delay",
            "recordFailedAttemptForDelay"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Progressive Delay recordFailedAttemptForDelay should record a failed attempt and return the new delay",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should record a failed attempt and return the new delay"
        },
        {
          "ancestorTitles": [
            "Progressive Delay",
            "recordFailedAttemptForDelay"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Progressive Delay recordFailedAttemptForDelay should handle first failed attempt",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle first failed attempt"
        },
        {
          "ancestorTitles": [
            "Progressive Delay",
            "recordFailedAttemptForDelay"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Progressive Delay recordFailedAttemptForDelay should handle Redis errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors"
        },
        {
          "ancestorTitles": [
            "Progressive Delay",
            "resetDelay"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Progressive Delay resetDelay should reset the delay for an IP address",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset the delay for an IP address"
        },
        {
          "ancestorTitles": [
            "Progressive Delay",
            "resetDelay"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Progressive Delay resetDelay should handle Redis errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/role-operations.ts\u001b[2m:33:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role/index.ts\u001b[2m:96:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/role-service.ts\u001b[2m:27:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/audit-simple.test.ts\u001b[39m\u001b[0m\u001b[2m:7:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\audit-simple.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679502,
        "runtime": 256,
        "slow": false,
        "start": 1744009679246
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\crypto\\file-integrity.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "File Integrity Checks",
            "generateChecksum function"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "File Integrity Checks generateChecksum function should generate a SHA-256 checksum for a file",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a SHA-256 checksum for a file"
        },
        {
          "ancestorTitles": [
            "File Integrity Checks",
            "generateChecksum function"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "File Integrity Checks generateChecksum function should throw an error if the file does not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error if the file does not exist"
        },
        {
          "ancestorTitles": [
            "File Integrity Checks",
            "verifyFileIntegrity function"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "File Integrity Checks verifyFileIntegrity function should return true if the file checksum matches the expected checksum",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if the file checksum matches the expected checksum"
        },
        {
          "ancestorTitles": [
            "File Integrity Checks",
            "verifyFileIntegrity function"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "File Integrity Checks verifyFileIntegrity function should return false if the file checksum does not match the expected checksum",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if the file checksum does not match the expected checksum"
        },
        {
          "ancestorTitles": [
            "File Integrity Checks",
            "verifyFileIntegrity function"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "File Integrity Checks verifyFileIntegrity function should throw an error if the file does not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error if the file does not exist"
        },
        {
          "ancestorTitles": [
            "File Integrity Checks",
            "Cryptographic file integrity"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "File Integrity Checks Cryptographic file integrity should have a list of cryptographic files to check",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should have a list of cryptographic files to check"
        },
        {
          "ancestorTitles": [
            "File Integrity Checks",
            "Cryptographic file integrity"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "File Integrity Checks Cryptographic file integrity should verify the integrity of all cryptographic files",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify the integrity of all cryptographic files"
        },
        {
          "ancestorTitles": [
            "File Integrity Checks",
            "Cryptographic file integrity"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "File Integrity Checks Cryptographic file integrity should detect tampered files",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect tampered files"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679613,
        "runtime": 296,
        "slow": false,
        "start": 1744009679317
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\security\\metrics.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Security Metrics API",
            "GET /api/admin/security/metrics"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Metrics API GET /api/admin/security/metrics should return security metrics",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return security metrics"
        },
        {
          "ancestorTitles": [
            "Security Metrics API",
            "GET /api/admin/security/metrics"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Metrics API GET /api/admin/security/metrics should handle errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679636,
        "runtime": 328,
        "slow": false,
        "start": 1744009679308
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\auth\\utils\\accessControl.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "accessControl utility",
            "hasPermission function"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "accessControl utility hasPermission function returns true for exact resource and permission match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns true for exact resource and permission match"
        },
        {
          "ancestorTitles": [
            "accessControl utility",
            "hasPermission function"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "accessControl utility hasPermission function returns false for non-matching resource type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false for non-matching resource type"
        },
        {
          "ancestorTitles": [
            "accessControl utility",
            "hasPermission function"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "accessControl utility hasPermission function returns false for non-matching permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false for non-matching permission"
        },
        {
          "ancestorTitles": [
            "accessControl utility",
            "hasPermission function"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "accessControl utility hasPermission function returns false for non-matching resource ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false for non-matching resource ID"
        },
        {
          "ancestorTitles": [
            "accessControl utility",
            "hasPermission function"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "accessControl utility hasPermission function handles site-wide permissions correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles site-wide permissions correctly"
        },
        {
          "ancestorTitles": [
            "accessControl utility",
            "hasPermission function"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "accessControl utility hasPermission function handles global permissions correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles global permissions correctly"
        },
        {
          "ancestorTitles": [
            "accessControl utility",
            "grantPermission function"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "accessControl utility grantPermission function adds a new permission to ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "adds a new permission to ACL"
        },
        {
          "ancestorTitles": [
            "accessControl utility",
            "grantPermission function"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "accessControl utility grantPermission function does not duplicate existing permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not duplicate existing permissions"
        },
        {
          "ancestorTitles": [
            "accessControl utility",
            "revokePermission function"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "accessControl utility revokePermission function removes a permission from ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "removes a permission from ACL"
        },
        {
          "ancestorTitles": [
            "accessControl utility",
            "revokePermission function"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "accessControl utility revokePermission function handles non-existent permissions gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles non-existent permissions gracefully"
        },
        {
          "ancestorTitles": [
            "accessControl utility",
            "createSiteAdminACL function"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "accessControl utility createSiteAdminACL function creates full admin permissions for a specific site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 16,
          "retryReasons": [],
          "status": "passed",
          "title": "creates full admin permissions for a specific site"
        },
        {
          "ancestorTitles": [
            "accessControl utility",
            "createSuperAdminACL function"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "accessControl utility createSuperAdminACL function creates global permissions for all resource types",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 101,
          "retryReasons": [],
          "status": "passed",
          "title": "creates global permissions for all resource types"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679642,
        "runtime": 334,
        "slow": false,
        "start": 1744009679308
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\search\\listing-indexer.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "ListingIndexer",
            "indexListing"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer indexListing adds listing to main index and term indices",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "adds listing to main index and term indices"
        },
        {
          "ancestorTitles": [
            "ListingIndexer",
            "updateListing"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer updateListing removes old references and re-indexes listing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "removes old references and re-indexes listing"
        },
        {
          "ancestorTitles": [
            "ListingIndexer",
            "removeListing"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer removeListing removes listing from all indices when siteId provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "removes listing from all indices when siteId provided"
        },
        {
          "ancestorTitles": [
            "ListingIndexer",
            "removeListing"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer removeListing looks up listing first when siteId not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "looks up listing first when siteId not provided"
        },
        {
          "ancestorTitles": [
            "ListingIndexer",
            "searchListings"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer searchListings searches by query terms",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "searches by query terms"
        },
        {
          "ancestorTitles": [
            "ListingIndexer",
            "searchListings"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer searchListings filters by category",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "filters by category"
        },
        {
          "ancestorTitles": [
            "ListingIndexer",
            "searchListings"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer searchListings applies featured filter correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies featured filter correctly"
        },
        {
          "ancestorTitles": [
            "ListingIndexer",
            "searchListings"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer searchListings applies status filter correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies status filter correctly"
        },
        {
          "ancestorTitles": [
            "ListingIndexer",
            "searchListings"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer searchListings applies pagination correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies pagination correctly"
        },
        {
          "ancestorTitles": [
            "ListingIndexer",
            "searchListings"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer searchListings sorts results by different criteria",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "sorts results by different criteria"
        },
        {
          "ancestorTitles": [
            "ListingIndexer",
            "countSearchResults"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer countSearchResults counts results with query and featured filter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "counts results with query and featured filter"
        },
        {
          "ancestorTitles": [
            "ListingIndexer",
            "countSearchResults"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingIndexer countSearchResults filters by category when no query is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "filters by category when no query is provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679651,
        "runtime": 335,
        "slow": false,
        "start": 1744009679316
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\sites\\submissions\\id-route.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Submission Detail API Routes",
            "GET /api/sites/[siteSlug]/submissions/[submissionId]"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Detail API Routes GET /api/sites/[siteSlug]/submissions/[submissionId] should return 404 if site not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 if site not found"
        },
        {
          "ancestorTitles": [
            "Submission Detail API Routes",
            "GET /api/sites/[siteSlug]/submissions/[submissionId]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Detail API Routes GET /api/sites/[siteSlug]/submissions/[submissionId] should return 404 if submission not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 if submission not found"
        },
        {
          "ancestorTitles": [
            "Submission Detail API Routes",
            "GET /api/sites/[siteSlug]/submissions/[submissionId]"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Detail API Routes GET /api/sites/[siteSlug]/submissions/[submissionId] should return 403 if submission does not belong to user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 403 if submission does not belong to user"
        },
        {
          "ancestorTitles": [
            "Submission Detail API Routes",
            "GET /api/sites/[siteSlug]/submissions/[submissionId]"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Detail API Routes GET /api/sites/[siteSlug]/submissions/[submissionId] should return the submission if it belongs to the user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the submission if it belongs to the user"
        },
        {
          "ancestorTitles": [
            "Submission Detail API Routes",
            "PUT /api/sites/[siteSlug]/submissions/[submissionId]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Detail API Routes PUT /api/sites/[siteSlug]/submissions/[submissionId] should return 404 if submission not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 if submission not found"
        },
        {
          "ancestorTitles": [
            "Submission Detail API Routes",
            "PUT /api/sites/[siteSlug]/submissions/[submissionId]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Detail API Routes PUT /api/sites/[siteSlug]/submissions/[submissionId] should return 403 if submission does not belong to user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 403 if submission does not belong to user"
        },
        {
          "ancestorTitles": [
            "Submission Detail API Routes",
            "PUT /api/sites/[siteSlug]/submissions/[submissionId]"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Detail API Routes PUT /api/sites/[siteSlug]/submissions/[submissionId] should return 400 if submission cannot be updated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 400 if submission cannot be updated"
        },
        {
          "ancestorTitles": [
            "Submission Detail API Routes",
            "PUT /api/sites/[siteSlug]/submissions/[submissionId]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Detail API Routes PUT /api/sites/[siteSlug]/submissions/[submissionId] should update the submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should update the submission"
        },
        {
          "ancestorTitles": [
            "Submission Detail API Routes",
            "DELETE /api/sites/[siteSlug]/submissions/[submissionId]"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Detail API Routes DELETE /api/sites/[siteSlug]/submissions/[submissionId] should return 404 if submission not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 if submission not found"
        },
        {
          "ancestorTitles": [
            "Submission Detail API Routes",
            "DELETE /api/sites/[siteSlug]/submissions/[submissionId]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Detail API Routes DELETE /api/sites/[siteSlug]/submissions/[submissionId] should return 403 if submission does not belong to user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 403 if submission does not belong to user"
        },
        {
          "ancestorTitles": [
            "Submission Detail API Routes",
            "DELETE /api/sites/[siteSlug]/submissions/[submissionId]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Detail API Routes DELETE /api/sites/[siteSlug]/submissions/[submissionId] should return 400 if submission cannot be withdrawn",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 400 if submission cannot be withdrawn"
        },
        {
          "ancestorTitles": [
            "Submission Detail API Routes",
            "DELETE /api/sites/[siteSlug]/submissions/[submissionId]"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Submission Detail API Routes DELETE /api/sites/[siteSlug]/submissions/[submissionId] should withdraw the submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should withdraw the submission"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679657,
        "runtime": 392,
        "slow": false,
        "start": 1744009679265
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\security\\hooks\\useSecurityMetrics.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useSecurityMetrics"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSecurityMetrics initializes with default values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "initializes with default values"
        },
        {
          "ancestorTitles": [
            "useSecurityMetrics"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSecurityMetrics fetches metrics successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches metrics successfully"
        },
        {
          "ancestorTitles": [
            "useSecurityMetrics"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSecurityMetrics handles API errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors"
        },
        {
          "ancestorTitles": [
            "useSecurityMetrics"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSecurityMetrics updates when date range changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "updates when date range changes"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679722,
        "runtime": 378,
        "slow": false,
        "start": 1744009679344
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\audit-mock.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "RoleService Audit Logging with Complete Mocking"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging with Complete Mocking should log audit events when updating global roles",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log audit events when updating global roles"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679757,
        "runtime": 385,
        "slow": false,
        "start": 1744009679372
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\auth\\cross-tenant-detection.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Cross-Tenant Reference Detection Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Cross-Tenant Reference Detection Tests should detect and reject cross-tenant references in request body",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect and reject cross-tenant references in request body"
        },
        {
          "ancestorTitles": [
            "Cross-Tenant Reference Detection Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Cross-Tenant Reference Detection Tests should allow valid requests with matching tenant IDs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow valid requests with matching tenant IDs"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679774,
        "runtime": 367,
        "slow": false,
        "start": 1744009679407
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\acl-operations-simple.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "ACL Operations",
            "addACLEntry"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations addACLEntry should add an ACL entry to a tenant role and log an audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should add an ACL entry to a tenant role and log an audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "addACLEntry"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations addACLEntry should add an ACL entry to a global role and log an audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should add an ACL entry to a global role and log an audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "addACLEntry"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations addACLEntry should not add a duplicate ACL entry",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should not add a duplicate ACL entry"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "removeACLEntry"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations removeACLEntry should remove an ACL entry from a tenant role and log an audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove an ACL entry from a tenant role and log an audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "removeACLEntry"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations removeACLEntry should remove an ACL entry from a global role and log an audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove an ACL entry from a global role and log an audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "removeACLEntry"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations removeACLEntry should return false if the ACL entry does not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if the ACL entry does not exist"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "updateRoleACL"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations updateRoleACL should update all ACL entries for a tenant role and log an audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should update all ACL entries for a tenant role and log an audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "updateRoleACL"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations updateRoleACL should update all ACL entries for a global role and log an audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should update all ACL entries for a global role and log an audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "updateRoleACL"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations updateRoleACL should include detailed change information in the audit event",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should include detailed change information in the audit event"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "hasACLEntry"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations hasACLEntry should return true if the role has the ACL entry",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if the role has the ACL entry"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "hasACLEntry"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations hasACLEntry should return false if the role does not have the ACL entry",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if the role does not have the ACL entry"
        },
        {
          "ancestorTitles": [
            "ACL Operations",
            "hasACLEntry"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Operations hasACLEntry should check for resource ID if provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check for resource ID if provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679775,
        "runtime": 387,
        "slow": false,
        "start": 1744009679388
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\submissions\\id-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/submissions/[id] ACL Protection"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/submissions/[id] ACL Protection should use withSecureTenantPermission with submission:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with submission:read"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/submissions/[id] ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/submissions/[id] ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "PATCH /api/admin/submissions/[id] ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PATCH /api/admin/submissions/[id] ACL Protection should use withSecureTenantPermission with submission:update",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with submission:update"
        },
        {
          "ancestorTitles": [
            "PATCH /api/admin/submissions/[id] ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PATCH /api/admin/submissions/[id] ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "DELETE /api/admin/submissions/[id] ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DELETE /api/admin/submissions/[id] ACL Protection should use withSecureTenantPermission with submission:delete",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with submission:delete"
        },
        {
          "ancestorTitles": [
            "DELETE /api/admin/submissions/[id] ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DELETE /api/admin/submissions/[id] ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/redis/memory-store.ts\u001b[2m:16:10)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/redis/hash-operations.test.ts\u001b[39m\u001b[0m\u001b[2m:10:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\redis\\hash-operations.test.ts",
      "testResults": []
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/redis/integration-hash.test.ts\u001b[39m\u001b[0m\u001b[2m:10:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\redis\\integration-hash.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679874,
        "runtime": 304,
        "slow": false,
        "start": 1744009679570
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\api-client.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "API Client",
            "apiRequest"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "API Client apiRequest should make a request without context when includeContext is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should make a request without context when includeContext is false"
        },
        {
          "ancestorTitles": [
            "API Client",
            "apiRequest"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "API Client apiRequest should include tenant and site context in headers when available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should include tenant and site context in headers when available"
        },
        {
          "ancestorTitles": [
            "API Client",
            "apiRequest"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "API Client apiRequest should not include site context when not available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not include site context when not available"
        },
        {
          "ancestorTitles": [
            "API Client",
            "apiRequest"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "API Client apiRequest should not include tenant context when not available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not include tenant context when not available"
        },
        {
          "ancestorTitles": [
            "API Client",
            "apiRequest"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "API Client apiRequest should pass retry options to fetchWithRetry",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass retry options to fetchWithRetry"
        },
        {
          "ancestorTitles": [
            "API Client",
            "apiGet"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "API Client apiGet should make a GET request",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should make a GET request"
        },
        {
          "ancestorTitles": [
            "API Client",
            "apiPost"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "API Client apiPost should make a POST request with JSON data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should make a POST request with JSON data"
        },
        {
          "ancestorTitles": [
            "API Client",
            "apiPut"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "API Client apiPut should make a PUT request with JSON data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should make a PUT request with JSON data"
        },
        {
          "ancestorTitles": [
            "API Client",
            "apiDelete"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "API Client apiDelete should make a DELETE request",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should make a DELETE request"
        },
        {
          "ancestorTitles": [
            "API Client",
            "apiPatch"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "API Client apiPatch should make a PATCH request with JSON data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should make a PATCH request with JSON data"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679882,
        "runtime": 308,
        "slow": false,
        "start": 1744009679574
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\crypto\\hash-truncation.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Hash Truncation"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Hash Truncation should not truncate hash values to 64 bits",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not truncate hash values to 64 bits"
        },
        {
          "ancestorTitles": [
            "Hash Truncation"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Hash Truncation should use the full hash value",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should use the full hash value"
        },
        {
          "ancestorTitles": [
            "Hash Truncation"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Hash Truncation should use a secure hash function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use a secure hash function"
        },
        {
          "ancestorTitles": [
            "Hash Truncation"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Hash Truncation should demonstrate the security risk of hash truncation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should demonstrate the security risk of hash truncation"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679933,
        "runtime": 206,
        "slow": false,
        "start": 1744009679727
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\utils\\__tests__\\url-validator.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "isValidReturnUrl"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "isValidReturnUrl should return false for empty URLs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for empty URLs"
        },
        {
          "ancestorTitles": [
            "isValidReturnUrl"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "isValidReturnUrl should return false for absolute URLs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for absolute URLs"
        },
        {
          "ancestorTitles": [
            "isValidReturnUrl"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "isValidReturnUrl should return false for protocol-relative URLs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for protocol-relative URLs"
        },
        {
          "ancestorTitles": [
            "isValidReturnUrl"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "isValidReturnUrl should return false for URLs with javascript protocol",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for URLs with javascript protocol"
        },
        {
          "ancestorTitles": [
            "isValidReturnUrl"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "isValidReturnUrl should return false for URLs with data protocol",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for URLs with data protocol"
        },
        {
          "ancestorTitles": [
            "isValidReturnUrl"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "isValidReturnUrl should return true for valid relative URLs in the whitelist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true for valid relative URLs in the whitelist"
        },
        {
          "ancestorTitles": [
            "isValidReturnUrl"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "isValidReturnUrl should return false for paths not in the whitelist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for paths not in the whitelist"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 14,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679944,
        "runtime": 258,
        "slow": false,
        "start": 1744009679686
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\utils\\__tests__\\accessControl.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "hasPermission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context hasPermission should return true when user has exact permission in tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true when user has exact permission in tenant"
        },
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "hasPermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context hasPermission should return false when permission is in different tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when permission is in different tenant"
        },
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "hasPermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context hasPermission should return true for site-wide permission in correct tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true for site-wide permission in correct tenant"
        },
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "hasPermission"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context hasPermission should return true for tenant-wide permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true for tenant-wide permission"
        },
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "grantPermission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context grantPermission should add permission with tenant context",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should add permission with tenant context"
        },
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "grantPermission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context grantPermission should not add duplicate permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not add duplicate permission"
        },
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "revokePermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context revokePermission should remove permission with matching tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove permission with matching tenant"
        },
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "revokePermission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context revokePermission should not remove permission with non-matching tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not remove permission with non-matching tenant"
        },
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "createSiteAdminACL"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context createSiteAdminACL should create ACL with site permissions in tenant context",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 16,
          "retryReasons": [],
          "status": "passed",
          "title": "should create ACL with site permissions in tenant context"
        },
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "createTenantAdminACL"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context createTenantAdminACL should create ACL with tenant-wide permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 38,
          "retryReasons": [],
          "status": "passed",
          "title": "should create ACL with tenant-wide permissions"
        },
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "createSuperAdminACL"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context createSuperAdminACL should create ACL with system-level permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 39,
          "retryReasons": [],
          "status": "passed",
          "title": "should create ACL with system-level permissions"
        },
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "detectCrossTenantAccess"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context detectCrossTenantAccess should detect when ACL references multiple non-system tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect when ACL references multiple non-system tenants"
        },
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "detectCrossTenantAccess"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context detectCrossTenantAccess should allow system tenant references",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow system tenant references"
        },
        {
          "ancestorTitles": [
            "Access Control with Tenant Context",
            "getReferencedTenants"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control with Tenant Context getReferencedTenants should return all tenant IDs referenced in ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all tenant IDs referenced in ACL"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679953,
        "runtime": 228,
        "slow": false,
        "start": 1744009679725
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\crypto\\poseidon-rounds.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Poseidon Round Parameters"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Poseidon Round Parameters should have sufficient full rounds for security",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have sufficient full rounds for security"
        },
        {
          "ancestorTitles": [
            "Poseidon Round Parameters"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Poseidon Round Parameters should have sufficient partial rounds for security",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have sufficient partial rounds for security"
        },
        {
          "ancestorTitles": [
            "Poseidon Round Parameters"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Poseidon Round Parameters should use all available constants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use all available constants"
        },
        {
          "ancestorTitles": [
            "Poseidon Round Parameters"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Poseidon Round Parameters should have a secure number of total rounds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have a secure number of total rounds"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679996,
        "runtime": 231,
        "slow": false,
        "start": 1744009679765
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\crypto\\montgomery.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Montgomery Curve Operations",
            "Division by Zero Protection"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Montgomery Curve Operations Division by Zero Protection should check for division by zero in Edwards2Montgomery template",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check for division by zero in Edwards2Montgomery template"
        },
        {
          "ancestorTitles": [
            "Montgomery Curve Operations",
            "Division by Zero Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Montgomery Curve Operations Division by Zero Protection should check for division by zero in Montgomery2Edwards template",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check for division by zero in Montgomery2Edwards template"
        },
        {
          "ancestorTitles": [
            "Montgomery Curve Operations",
            "Division by Zero Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Montgomery Curve Operations Division by Zero Protection should check for division by zero in MontgomeryAdd template",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should check for division by zero in MontgomeryAdd template"
        },
        {
          "ancestorTitles": [
            "Montgomery Curve Operations",
            "Division by Zero Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Montgomery Curve Operations Division by Zero Protection should check for division by zero in MontgomeryDouble template",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should check for division by zero in MontgomeryDouble template"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009679998,
        "runtime": 262,
        "slow": false,
        "start": 1744009679736
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\admin\\security\\hooks\\useReportSuspiciousActivity.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useReportSuspiciousActivity"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useReportSuspiciousActivity initializes with default values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "initializes with default values"
        },
        {
          "ancestorTitles": [
            "useReportSuspiciousActivity"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useReportSuspiciousActivity submits a report successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "submits a report successfully"
        },
        {
          "ancestorTitles": [
            "useReportSuspiciousActivity"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useReportSuspiciousActivity handles validation errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles validation errors"
        },
        {
          "ancestorTitles": [
            "useReportSuspiciousActivity"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useReportSuspiciousActivity handles API errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors"
        },
        {
          "ancestorTitles": [
            "useReportSuspiciousActivity"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useReportSuspiciousActivity resets state before submitting",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "resets state before submitting"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680014,
        "runtime": 265,
        "slow": false,
        "start": 1744009679749
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\layout\\index.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Admin Layout Components Exports"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Admin Layout Components Exports exports all layout components correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 16,
          "retryReasons": [],
          "status": "passed",
          "title": "exports all layout components correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680049,
        "runtime": 257,
        "slow": false,
        "start": 1744009679792
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\context-test-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/context-test ACL Protection"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/context-test ACL Protection should use withSecureTenantPermission with setting:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with setting:read"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/context-test ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/context-test ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/context-test ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/context-test ACL Protection should use withSecureTenantPermission with setting:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with setting:read"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/context-test ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/context-test ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680097,
        "runtime": 278,
        "slow": false,
        "start": 1744009679819
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\page-flow-integration.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Complete User Flow Integration Tests",
            "Complete User Flow: Homepage -> Category -> Listing"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Complete User Flow Integration Tests Complete User Flow: Homepage -> Category -> Listing should successfully navigate from homepage to category to listing page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 16,
          "retryReasons": [],
          "status": "passed",
          "title": "should successfully navigate from homepage to category to listing page"
        },
        {
          "ancestorTitles": [
            "Complete User Flow Integration Tests",
            "Complete User Flow: Homepage -> Category -> Listing"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Complete User Flow Integration Tests Complete User Flow: Homepage -> Category -> Listing should handle 404 errors when category does not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle 404 errors when category does not exist"
        },
        {
          "ancestorTitles": [
            "Complete User Flow Integration Tests",
            "Complete User Flow: Homepage -> Category -> Listing"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Complete User Flow Integration Tests Complete User Flow: Homepage -> Category -> Listing should handle 404 errors when listing does not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle 404 errors when listing does not exist"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 23,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680103,
        "runtime": 285,
        "slow": false,
        "start": 1744009679818
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\hooks\\useSites.validation.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Site Validation - Complete Site"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Complete Site validates a fully valid site without errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates a fully valid site without errors"
        },
        {
          "ancestorTitles": [
            "Site Validation - Complete Site"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Complete Site validates all sections when no section is specified",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "validates all sections when no section is specified"
        },
        {
          "ancestorTitles": [
            "Site Validation - Basic Info Section"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Basic Info Section requires a name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "requires a name"
        },
        {
          "ancestorTitles": [
            "Site Validation - Basic Info Section"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Basic Info Section limits name length to 50 characters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "limits name length to 50 characters"
        },
        {
          "ancestorTitles": [
            "Site Validation - Basic Info Section"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Basic Info Section requires a slug",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "requires a slug"
        },
        {
          "ancestorTitles": [
            "Site Validation - Basic Info Section"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Basic Info Section validates slug format (lowercase, numbers, hyphens only)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates slug format (lowercase, numbers, hyphens only)"
        },
        {
          "ancestorTitles": [
            "Site Validation - Basic Info Section"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Basic Info Section limits slug length to 50 characters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "limits slug length to 50 characters"
        },
        {
          "ancestorTitles": [
            "Site Validation - Basic Info Section"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Basic Info Section limits description length to 500 characters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "limits description length to 500 characters"
        },
        {
          "ancestorTitles": [
            "Site Validation - Basic Info Section"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Basic Info Section accepts valid basic info",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "accepts valid basic info"
        },
        {
          "ancestorTitles": [
            "Site Validation - Domains Section"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Domains Section requires at least one domain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "requires at least one domain"
        },
        {
          "ancestorTitles": [
            "Site Validation - Domains Section"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Domains Section accepts valid domain configurations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "accepts valid domain configurations"
        },
        {
          "ancestorTitles": [
            "Site Validation - Domains Section"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Domains Section only validates domains section when specified",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "only validates domains section when specified"
        },
        {
          "ancestorTitles": [
            "Site Validation - Theme Section"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Theme Section validates CSS syntax for balanced braces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates CSS syntax for balanced braces"
        },
        {
          "ancestorTitles": [
            "Site Validation - Theme Section"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Theme Section accepts valid CSS syntax",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "accepts valid CSS syntax"
        },
        {
          "ancestorTitles": [
            "Site Validation - Theme Section"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Theme Section accepts empty CSS",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "accepts empty CSS"
        },
        {
          "ancestorTitles": [
            "Site Validation - SEO Section"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - SEO Section limits SEO title length to 60 characters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "limits SEO title length to 60 characters"
        },
        {
          "ancestorTitles": [
            "Site Validation - SEO Section"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - SEO Section limits SEO description length to 160 characters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "limits SEO description length to 160 characters"
        },
        {
          "ancestorTitles": [
            "Site Validation - SEO Section"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - SEO Section accepts valid SEO data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "accepts valid SEO data"
        },
        {
          "ancestorTitles": [
            "Site Validation - Settings Section"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Settings Section validates listings per page range",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "validates listings per page range"
        },
        {
          "ancestorTitles": [
            "Site Validation - Settings Section"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Settings Section validates email format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates email format"
        },
        {
          "ancestorTitles": [
            "Site Validation - Settings Section"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Settings Section accepts valid settings data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "accepts valid settings data"
        },
        {
          "ancestorTitles": [
            "Site Validation - Multiple Sections"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Multiple Sections validates across multiple sections when no specific section is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "validates across multiple sections when no specific section is provided"
        },
        {
          "ancestorTitles": [
            "Site Validation - Multiple Sections"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Validation - Multiple Sections ignores other section errors when specific section is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "ignores other section errors when specific section is provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680159,
        "runtime": 277,
        "slow": false,
        "start": 1744009679882
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\sites\\search.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API gets site ID from the site slug parameter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "gets site ID from the site slug parameter"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API returns 404 when site is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns 404 when site is not found"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API returns error when no search criteria provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error when no search criteria provided"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API returns error when search query is too short",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error when search query is too short"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API handles query with category filter correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles query with category filter correctly"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API handles featured filter correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles featured filter correctly"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API handles pagination parameters correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles pagination parameters correctly"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API handles search errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles search errors gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680167,
        "runtime": 238,
        "slow": false,
        "start": 1744009679929
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\tenant-role-audit.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Tenant Role Audit Logging",
            "logTenantRoleUpdate"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Role Audit Logging logTenantRoleUpdate should log an audit event for tenant role update",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log an audit event for tenant role update"
        },
        {
          "ancestorTitles": [
            "Tenant Role Audit Logging",
            "logTenantRoleDelete"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Role Audit Logging logTenantRoleDelete should log an audit event for tenant role deletion",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log an audit event for tenant role deletion"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680192,
        "runtime": 271,
        "slow": false,
        "start": 1744009679921
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\audit-skip.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "RoleService Audit Logging"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging should log events for role operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should log events for role operations"
        },
        {
          "ancestorTitles": [
            "RoleService Audit Logging"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging should log events for global role operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should log events for global role operations"
        },
        {
          "ancestorTitles": [
            "RoleService Audit Logging"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging should log events when assigning roles to users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should log events when assigning roles to users"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680210,
        "runtime": 282,
        "slow": false,
        "start": 1744009679928
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\sites\\[siteSlug]\\domains\\verify\\route.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API returns 400 if domain is not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns 400 if domain is not provided"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API returns 404 if site is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns 404 if site is not found"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API returns 400 if domain is not associated with the site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns 400 if domain is not associated with the site"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API automatically verifies test domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "automatically verifies test domains"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API verifies domain with correct DNS records",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "verifies domain with correct DNS records"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API fails verification with incorrect A record",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "fails verification with incorrect A record"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API handles DNS resolution errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles DNS resolution errors gracefully"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API updates domain verification status in site configuration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updates domain verification status in site configuration"
        },
        {
          "ancestorTitles": [
            "Domain Verification API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Domain Verification API handles domains that are already objects with verification status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles domains that are already objects with verification status"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680248,
        "runtime": 265,
        "slow": false,
        "start": 1744009679983
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\users\\get-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/users ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/users ACL Protection should use withSecureTenantPermission with user:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with user:read"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/users ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/users ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680252,
        "runtime": 257,
        "slow": false,
        "start": 1744009679995
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\crypto\\poseidon-constants.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Poseidon Hash Constants"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Poseidon Hash Constants should have at least 10 round constants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have at least 10 round constants"
        },
        {
          "ancestorTitles": [
            "Poseidon Hash Constants"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Poseidon Hash Constants should have constants with high entropy",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 22,
          "retryReasons": [],
          "status": "passed",
          "title": "should have constants with high entropy"
        },
        {
          "ancestorTitles": [
            "Poseidon Hash Constants"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Poseidon Hash Constants should have constants derived from a secure source",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should have constants derived from a secure source"
        },
        {
          "ancestorTitles": [
            "Poseidon Hash Constants"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Poseidon Hash Constants should have a proper MDS matrix",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should have a proper MDS matrix"
        },
        {
          "ancestorTitles": [
            "Poseidon Hash Constants"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Poseidon Hash Constants should have constants that are not easily predictable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should have constants that are not easily predictable"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680253,
        "runtime": 287,
        "slow": false,
        "start": 1744009679966
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\roles\\global-id-remove.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Global Role Remove API",
            "POST /api/admin/roles/global/[id]/remove"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role Remove API POST /api/admin/roles/global/[id]/remove should remove a global role from a user",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a global role from a user"
        },
        {
          "ancestorTitles": [
            "Global Role Remove API",
            "POST /api/admin/roles/global/[id]/remove"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role Remove API POST /api/admin/roles/global/[id]/remove should validate required fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate required fields"
        },
        {
          "ancestorTitles": [
            "Global Role Remove API",
            "POST /api/admin/roles/global/[id]/remove"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role Remove API POST /api/admin/roles/global/[id]/remove should return 404 if role not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 if role not found"
        },
        {
          "ancestorTitles": [
            "Global Role Remove API",
            "POST /api/admin/roles/global/[id]/remove"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Global Role Remove API POST /api/admin/roles/global/[id]/remove should handle errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 14,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680302,
        "runtime": 259,
        "slow": false,
        "start": 1744009680043
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\utils\\tenantAccessControl.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasPermissionInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasPermissionInTenant should return false if user is not a tenant member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user is not a tenant member"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasPermissionInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasPermissionInTenant should check permissions using RoleService if user is a tenant member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should check permissions using RoleService if user is a tenant member"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasPermissionInTenant"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasPermissionInTenant should handle errors and return false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors and return false"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasAnyPermissionInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasAnyPermissionInTenant should return false if user is not a tenant member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user is not a tenant member"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasAnyPermissionInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasAnyPermissionInTenant should return true if user has at least one permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if user has at least one permission"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasAnyPermissionInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasAnyPermissionInTenant should return false if user has none of the permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user has none of the permissions"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasAllPermissionsInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasAllPermissionsInTenant should return false if user is not a tenant member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user is not a tenant member"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasAllPermissionsInTenant"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasAllPermissionsInTenant should return true if user has all permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if user has all permissions"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasAllPermissionsInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasAllPermissionsInTenant should return false if user is missing any permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user is missing any permission"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "getAccessibleResourcesInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control getAccessibleResourcesInTenant should return empty array if user is not a tenant member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return empty array if user is not a tenant member"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "getAccessibleResourcesInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control getAccessibleResourcesInTenant should return resources from matching ACL entries",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should return resources from matching ACL entries"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasGlobalPermissionInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasGlobalPermissionInTenant should return false if user is not a tenant member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user is not a tenant member"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasGlobalPermissionInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasGlobalPermissionInTenant should return true if user has global permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if user has global permission"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasGlobalPermissionInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasGlobalPermissionInTenant should return false if user has no global permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user has no global permission"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680316,
        "runtime": 276,
        "slow": false,
        "start": 1744009680040
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\security\\hooks\\__tests__\\useLoginAttempts.fixed.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "useLoginAttempts (fixed)"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useLoginAttempts (fixed) fetches login attempts on initial render",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 11,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches login attempts on initial render"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 13,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680316,
        "runtime": 248,
        "slow": false,
        "start": 1744009680068
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\auth\\concurrency.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Concurrency Management",
            "Distributed Locking"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrency Management Distributed Locking should acquire a lock successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should acquire a lock successfully"
        },
        {
          "ancestorTitles": [
            "Concurrency Management",
            "Distributed Locking"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrency Management Distributed Locking should return null if lock acquisition fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null if lock acquisition fails"
        },
        {
          "ancestorTitles": [
            "Concurrency Management",
            "Distributed Locking"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrency Management Distributed Locking should release a lock successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should release a lock successfully"
        },
        {
          "ancestorTitles": [
            "Concurrency Management",
            "Distributed Locking"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrency Management Distributed Locking should not release a lock if the lock ID does not match",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not release a lock if the lock ID does not match"
        },
        {
          "ancestorTitles": [
            "Concurrency Management",
            "Request Tracking"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrency Management Request Tracking should track an authentication request",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should track an authentication request"
        },
        {
          "ancestorTitles": [
            "Concurrency Management",
            "Request Tracking"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrency Management Request Tracking should reject tracking if too many concurrent requests",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject tracking if too many concurrent requests"
        },
        {
          "ancestorTitles": [
            "Concurrency Management",
            "Request Tracking"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrency Management Request Tracking should complete an authentication request",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should complete an authentication request"
        },
        {
          "ancestorTitles": [
            "Concurrency Management",
            "Request Tracking"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrency Management Request Tracking should get user concurrent requests",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should get user concurrent requests"
        },
        {
          "ancestorTitles": [
            "Concurrency Management",
            "Request Tracking"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrency Management Request Tracking should get total concurrent requests",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should get total concurrent requests"
        },
        {
          "ancestorTitles": [
            "Concurrency Management",
            "Error Handling"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrency Management Error Handling should handle Redis errors during lock acquisition",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors during lock acquisition"
        },
        {
          "ancestorTitles": [
            "Concurrency Management",
            "Error Handling"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrency Management Error Handling should handle Redis errors during lock release",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors during lock release"
        },
        {
          "ancestorTitles": [
            "Concurrency Management",
            "Error Handling"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrency Management Error Handling should handle Redis errors during request tracking",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors during request tracking"
        },
        {
          "ancestorTitles": [
            "Concurrency Management",
            "Error Handling"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Concurrency Management Error Handling should handle Redis errors during request completion",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors during request completion"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680358,
        "runtime": 218,
        "slow": false,
        "start": 1744009680140
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\site-utils.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Site Utilities",
            "getSiteByHostname"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Utilities getSiteByHostname should return site when domain matches",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return site when domain matches"
        },
        {
          "ancestorTitles": [
            "Site Utilities",
            "getSiteByHostname"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Utilities getSiteByHostname should normalize hostname by removing port and protocol",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should normalize hostname by removing port and protocol"
        },
        {
          "ancestorTitles": [
            "Site Utilities",
            "getSiteByHostname"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Utilities getSiteByHostname should check for subdomain when direct domain not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should check for subdomain when direct domain not found"
        },
        {
          "ancestorTitles": [
            "Site Utilities",
            "getSiteByHostname"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Utilities getSiteByHostname should fall back to direct slug lookup if previous methods fail",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should fall back to direct slug lookup if previous methods fail"
        },
        {
          "ancestorTitles": [
            "Site Utilities",
            "URL generation utilities",
            "generateSiteBaseUrl"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Utilities URL generation utilities generateSiteBaseUrl should generate base URL with custom domain when available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate base URL with custom domain when available"
        },
        {
          "ancestorTitles": [
            "Site Utilities",
            "URL generation utilities",
            "generateSiteBaseUrl"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Utilities URL generation utilities generateSiteBaseUrl should generate base URL with platform subdomain when no custom domain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate base URL with platform subdomain when no custom domain"
        },
        {
          "ancestorTitles": [
            "Site Utilities",
            "URL generation utilities",
            "generateCategoryUrl"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Utilities URL generation utilities generateCategoryUrl should generate category URL with custom domain when available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate category URL with custom domain when available"
        },
        {
          "ancestorTitles": [
            "Site Utilities",
            "URL generation utilities",
            "generateCategoryUrl"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Utilities URL generation utilities generateCategoryUrl should generate category URL with platform subdomain when no custom domain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate category URL with platform subdomain when no custom domain"
        },
        {
          "ancestorTitles": [
            "Site Utilities",
            "URL generation utilities",
            "generateListingUrl"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Utilities URL generation utilities generateListingUrl should generate listing URL with custom domain when available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate listing URL with custom domain when available"
        },
        {
          "ancestorTitles": [
            "Site Utilities",
            "URL generation utilities",
            "generateListingUrl"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Utilities URL generation utilities generateListingUrl should generate listing URL with platform subdomain when no custom domain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate listing URL with platform subdomain when no custom domain"
        },
        {
          "ancestorTitles": [
            "Site Utilities",
            "URL generation utilities",
            "generateCategoryHref"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Utilities URL generation utilities generateCategoryHref should generate category href for use in Link components",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate category href for use in Link components"
        },
        {
          "ancestorTitles": [
            "Site Utilities",
            "URL generation utilities",
            "generateListingHref"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site Utilities URL generation utilities generateListingHref should generate listing href for use in Link components",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate listing href for use in Link components"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680392,
        "runtime": 236,
        "slow": false,
        "start": 1744009680156
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\category-listings.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Category Listings API"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Category Listings API should return listings for a category",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should return listings for a category"
        },
        {
          "ancestorTitles": [
            "Category Listings API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Category Listings API should return 404 when site is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 when site is not found"
        },
        {
          "ancestorTitles": [
            "Category Listings API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Category Listings API should return 404 when category is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 when category is not found"
        },
        {
          "ancestorTitles": [
            "Category Listings API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Category Listings API should filter listings by featured flag",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter listings by featured flag"
        },
        {
          "ancestorTitles": [
            "Category Listings API"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Category Listings API should sort listings by creation date",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should sort listings by creation date"
        },
        {
          "ancestorTitles": [
            "Category Listings API"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Category Listings API should paginate listings correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should paginate listings correctly"
        },
        {
          "ancestorTitles": [
            "Category Listings API"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Category Listings API should return empty array if no listings found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return empty array if no listings found"
        },
        {
          "ancestorTitles": [
            "Category Listings API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Category Listings API should return 500 if ListingService throws an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 500 if ListingService throws an error"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680412,
        "runtime": 215,
        "slow": false,
        "start": 1744009680197
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\sites\\info.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Site-Specific Info API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Info API should return 404 when site is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 when site is not found"
        },
        {
          "ancestorTitles": [
            "Site-Specific Info API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Info API should return site information when site exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return site information when site exists"
        },
        {
          "ancestorTitles": [
            "Site-Specific Info API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Info API should handle errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/unit/lib/role-service/get-user-roles.test.ts\u001b[39m\u001b[0m\u001b[2m:7:22)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\get-user-roles.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 40,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680502,
        "runtime": 260,
        "slow": false,
        "start": 1744009680242
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\listings\\components\\form\\listingFormValidation.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateString"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateString returns error for empty string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for empty string"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateString"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateString returns error for string shorter than minimum length",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for string shorter than minimum length"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateString"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateString returns error for string longer than maximum length",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for string longer than maximum length"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateString"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateString returns undefined for valid string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns undefined for valid string"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateString"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateString uses custom field name in error messages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "uses custom field name in error messages"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateUrl"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateUrl returns error for empty URL when required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for empty URL when required"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateUrl"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateUrl returns undefined for empty URL when not required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns undefined for empty URL when not required"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateUrl"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateUrl returns error for invalid URL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for invalid URL"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateUrl"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateUrl returns undefined for valid URL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns undefined for valid URL"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateEmail"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateEmail returns error for empty email when required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for empty email when required"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateEmail"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateEmail returns undefined for empty email when not required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns undefined for empty email when not required"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateEmail"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateEmail returns error for invalid email",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for invalid email"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateEmail"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateEmail returns undefined for valid email",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns undefined for valid email"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validatePhone"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validatePhone returns error for empty phone when required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for empty phone when required"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validatePhone"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validatePhone returns undefined for empty phone when not required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns undefined for empty phone when not required"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validatePhone"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validatePhone returns error for invalid phone",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for invalid phone"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validatePhone"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validatePhone returns undefined for valid phone",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns undefined for valid phone"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validatePrice"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validatePrice returns error for missing price type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for missing price type"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validatePrice"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validatePrice returns undefined for FREE or CONTACT price types regardless of amount",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns undefined for FREE or CONTACT price types regardless of amount"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validatePrice"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validatePrice returns error for missing amount with non-FREE price types",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for missing amount with non-FREE price types"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validatePrice"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validatePrice returns error for invalid amount",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for invalid amount"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validatePrice"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validatePrice returns undefined for valid price",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns undefined for valid price"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateCategories"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateCategories returns error for empty categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for empty categories"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateCategories"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateCategories returns undefined for valid categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns undefined for valid categories"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateMedia"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateMedia returns error for empty media",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for empty media"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateMedia"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateMedia returns undefined for valid media",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns undefined for valid media"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateFutureDate"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateFutureDate returns error for past date",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error for past date"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateFutureDate"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateFutureDate returns undefined for future date",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns undefined for future date"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateStep"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateStep validates step 1 (Basic Info)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "validates step 1 (Basic Info)"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateStep"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateStep validates step 2 (Categories)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates step 2 (Categories)"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateStep"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateStep validates step 3 (Media)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates step 3 (Media)"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateStep"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateStep validates step 4 (Pricing)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates step 4 (Pricing)"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateStep"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateStep validates step 5 (Backlink)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates step 5 (Backlink)"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateStep"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateStep returns empty object for unknown step",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns empty object for unknown step"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateListingForm"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateListingForm validates the entire form data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "validates the entire form data"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "validateListingForm"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation validateListingForm validates featured listings with end date",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates featured listings with end date"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "isStepValid"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation isStepValid returns true for valid step",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "returns true for valid step"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "isStepValid"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation isStepValid returns false for invalid step",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false for invalid step"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "isFormValid"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation isFormValid returns true for valid form data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns true for valid form data"
        },
        {
          "ancestorTitles": [
            "Listing Form Validation",
            "isFormValid"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Listing Form Validation isFormValid returns false for invalid form data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns false for invalid form data"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/site-utils.ts\u001b[2m:52:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/url-construction.test.ts\u001b[39m\u001b[0m\u001b[2m:5:20)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\url-construction.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680537,
        "runtime": 254,
        "slow": false,
        "start": 1744009680283
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\security\\login-attempts-map.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Security Login Attempts Map API",
            "GET /api/admin/security/login-attempts-map"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Login Attempts Map API GET /api/admin/security/login-attempts-map should return login attempts map data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 35,
          "retryReasons": [],
          "status": "passed",
          "title": "should return login attempts map data"
        },
        {
          "ancestorTitles": [
            "Security Login Attempts Map API",
            "GET /api/admin/security/login-attempts-map"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Login Attempts Map API GET /api/admin/security/login-attempts-map should apply IP risk level filters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply IP risk level filters"
        },
        {
          "ancestorTitles": [
            "Security Login Attempts Map API",
            "GET /api/admin/security/login-attempts-map"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Login Attempts Map API GET /api/admin/security/login-attempts-map should handle errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680541,
        "runtime": 247,
        "slow": false,
        "start": 1744009680294
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\middleware\\secureTenantSiteContext.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "secureTenantSiteContext Middleware"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "secureTenantSiteContext Middleware should allow access when tenant and site context match URL parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow access when tenant and site context match URL parameters"
        },
        {
          "ancestorTitles": [
            "secureTenantSiteContext Middleware"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "secureTenantSiteContext Middleware should block cross-tenant access attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should block cross-tenant access attempts"
        },
        {
          "ancestorTitles": [
            "secureTenantSiteContext Middleware"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "secureTenantSiteContext Middleware should block cross-site access attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should block cross-site access attempts"
        },
        {
          "ancestorTitles": [
            "secureTenantSiteContext Middleware"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "secureTenantSiteContext Middleware should allow access when no URL parameters are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow access when no URL parameters are provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 11,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680550,
        "runtime": 264,
        "slow": false,
        "start": 1744009680286
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\multitenancy\\tenant-service.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "TenantService Integration Tests"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantService Integration Tests should create a tenant with proper data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 13,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a tenant with proper data"
        },
        {
          "ancestorTitles": [
            "TenantService Integration Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantService Integration Tests should retrieve a tenant by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should retrieve a tenant by ID"
        },
        {
          "ancestorTitles": [
            "TenantService Integration Tests"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantService Integration Tests should retrieve a tenant by hostname",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should retrieve a tenant by hostname"
        },
        {
          "ancestorTitles": [
            "TenantService Integration Tests"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantService Integration Tests should update a tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should update a tenant"
        },
        {
          "ancestorTitles": [
            "TenantService Integration Tests"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantService Integration Tests should update tenant hostnames",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should update tenant hostnames"
        },
        {
          "ancestorTitles": [
            "TenantService Integration Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantService Integration Tests should delete a tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should delete a tenant"
        },
        {
          "ancestorTitles": [
            "TenantService Integration Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantService Integration Tests should add and remove hostnames",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should add and remove hostnames"
        },
        {
          "ancestorTitles": [
            "TenantService Integration Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantService Integration Tests should correctly normalize hostnames",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should correctly normalize hostnames"
        },
        {
          "ancestorTitles": [
            "TenantService Integration Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantService Integration Tests should create a default tenant for development",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a default tenant for development"
        },
        {
          "ancestorTitles": [
            "TenantService Integration Tests"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantService Integration Tests should prevent duplicate hostnames across tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should prevent duplicate hostnames across tenants"
        },
        {
          "ancestorTitles": [
            "TenantService Integration Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantService Integration Tests should reject lookups with invalid tenant IDs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject lookups with invalid tenant IDs"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680592,
        "runtime": 248,
        "slow": false,
        "start": 1744009680344
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\app\\api\\middleware\\__tests__\\apiTokenHandler.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "apiTokenHandler middleware"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiTokenHandler middleware should handle missing API token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing API token"
        },
        {
          "ancestorTitles": [
            "apiTokenHandler middleware"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiTokenHandler middleware should handle invalid API token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle invalid API token"
        },
        {
          "ancestorTitles": [
            "apiTokenHandler middleware"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiTokenHandler middleware should handle expired API token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle expired API token"
        },
        {
          "ancestorTitles": [
            "apiTokenHandler middleware"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiTokenHandler middleware should pass through other errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass through other errors"
        },
        {
          "ancestorTitles": [
            "apiTokenHandler middleware"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiTokenHandler middleware should pass through successful responses",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should pass through successful responses"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680617,
        "runtime": 263,
        "slow": false,
        "start": 1744009680354
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\app\\api\\middleware\\__tests__\\validateTenantSiteContext.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "validateTenantSiteContext"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateTenantSiteContext should call handler when tenant ID is present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call handler when tenant ID is present"
        },
        {
          "ancestorTitles": [
            "validateTenantSiteContext"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateTenantSiteContext should return error when tenant ID is missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return error when tenant ID is missing"
        },
        {
          "ancestorTitles": [
            "validateTenantSiteContext"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateTenantSiteContext should call handler when site ID is present and required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call handler when site ID is present and required"
        },
        {
          "ancestorTitles": [
            "validateTenantSiteContext"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateTenantSiteContext should return error when site ID is missing and required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return error when site ID is missing and required"
        },
        {
          "ancestorTitles": [
            "validateTenantSiteContext"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateTenantSiteContext should call handler when site ID is missing but not required",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should call handler when site ID is missing but not required"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 21,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680636,
        "runtime": 285,
        "slow": false,
        "start": 1744009680351
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\category-service.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "CategoryService",
            "getCategoryWithValidation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService getCategoryWithValidation should return null when category does not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null when category does not exist"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "getCategoryWithValidation"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService getCategoryWithValidation should return null when category belongs to a different tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null when category belongs to a different tenant"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "getCategoryWithValidation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService getCategoryWithValidation should return null when category belongs to a different site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null when category belongs to a different site"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "getCategoryWithValidation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService getCategoryWithValidation should return the category when it belongs to the correct tenant and site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the category when it belongs to the correct tenant and site"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "getCategoriesBySite"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService getCategoriesBySite should return only categories belonging to the specified tenant and site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should return only categories belonging to the specified tenant and site"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "updateCategory"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService updateCategory should return null when category does not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null when category does not exist"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "updateCategory"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService updateCategory should return null when category belongs to a different tenant or site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null when category belongs to a different tenant or site"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "updateCategory"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService updateCategory should update the category when it belongs to the correct tenant and site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should update the category when it belongs to the correct tenant and site"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "updateCategory"
          ],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService updateCategory should detect and prevent circular references when updating parent",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect and prevent circular references when updating parent"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "updateCategory"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService updateCategory should validate that parent category belongs to the same site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate that parent category belongs to the same site"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "deleteCategory"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService deleteCategory should return false when category does not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when category does not exist"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "deleteCategory"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService deleteCategory should return false when category belongs to a different tenant or site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when category belongs to a different tenant or site"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "deleteCategory"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService deleteCategory should delete the category when it belongs to the correct tenant and site and has no children",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should delete the category when it belongs to the correct tenant and site and has no children"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "deleteCategory"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService deleteCategory should prevent deletion of categories with children",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should prevent deletion of categories with children"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "createCategory"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService createCategory should create a category with the required site ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a category with the required site ID"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "createCategory"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService createCategory should validate parent category exists and belongs to the same site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate parent category exists and belongs to the same site"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "createCategory"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService createCategory should return error when parent category does not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return error when parent category does not exist"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "createCategory"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService createCategory should return error when parent category belongs to a different site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return error when parent category belongs to a different site"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "wouldCreateCircularReference"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService wouldCreateCircularReference should return true when a category tries to set itself as parent",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true when a category tries to set itself as parent"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "wouldCreateCircularReference"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService wouldCreateCircularReference should return true when a circular reference would be created",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true when a circular reference would be created"
        },
        {
          "ancestorTitles": [
            "CategoryService",
            "wouldCreateCircularReference"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryService wouldCreateCircularReference should return false when no circular reference would be created",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when no circular reference would be created"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 5,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680736,
        "runtime": 524,
        "slow": false,
        "start": 1744009680212
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\SiteForm.validation.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteForm Validation"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Validation validates required fields and shows error messages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "validates required fields and shows error messages"
        },
        {
          "ancestorTitles": [
            "SiteForm Validation"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Validation validates field formats with appropriate error messages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "validates field formats with appropriate error messages"
        },
        {
          "ancestorTitles": [
            "SiteForm Validation"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Validation validates domain format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "validates domain format"
        },
        {
          "ancestorTitles": [
            "SiteForm Validation"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Validation prevents adding duplicate domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "prevents adding duplicate domains"
        },
        {
          "ancestorTitles": [
            "SiteForm Validation"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Validation clears field errors when values are changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "clears field errors when values are changed"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680737,
        "runtime": 345,
        "slow": false,
        "start": 1744009680392
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\audit-basic.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "RoleService Audit Logging"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging should log events for role operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log events for role operations"
        },
        {
          "ancestorTitles": [
            "RoleService Audit Logging"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging should log events for global role operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log events for global role operations"
        },
        {
          "ancestorTitles": [
            "RoleService Audit Logging"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging should log events when updating roles",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log events when updating roles"
        },
        {
          "ancestorTitles": [
            "RoleService Audit Logging"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging should log events when deleting roles",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log events when deleting roles"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 13,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680783,
        "runtime": 17479,
        "slow": true,
        "start": 1744009663304
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\crypto\\zkp-setup-verification.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKP Setup Verification"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Setup Verification Powers of Tau file exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Powers of Tau file exists"
        },
        {
          "ancestorTitles": [
            "ZKP Setup Verification"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Setup Verification R1CS file exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "R1CS file exists"
        },
        {
          "ancestorTitles": [
            "ZKP Setup Verification"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Setup Verification WebAssembly file exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "WebAssembly file exists"
        },
        {
          "ancestorTitles": [
            "ZKP Setup Verification"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Setup Verification Proving key exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Proving key exists"
        },
        {
          "ancestorTitles": [
            "ZKP Setup Verification"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Setup Verification Verification key exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Verification key exists"
        },
        {
          "ancestorTitles": [
            "ZKP Setup Verification"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Setup Verification Solidity verifier exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Solidity verifier exists"
        },
        {
          "ancestorTitles": [
            "ZKP Setup Verification"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Setup Verification Input file exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Input file exists"
        },
        {
          "ancestorTitles": [
            "ZKP Setup Verification"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Setup Verification Witness file exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Witness file exists"
        },
        {
          "ancestorTitles": [
            "ZKP Setup Verification"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Setup Verification Proof file exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Proof file exists"
        },
        {
          "ancestorTitles": [
            "ZKP Setup Verification"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Setup Verification Public file exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Public file exists"
        },
        {
          "ancestorTitles": [
            "ZKP Setup Verification"
          ],
          "duration": 1294,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Setup Verification Proof can be verified",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Proof can be verified"
        },
        {
          "ancestorTitles": [
            "ZKP Setup Verification"
          ],
          "duration": 2842,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Setup Verification New proof can be generated and verified",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "New proof can be generated and verified"
        },
        {
          "ancestorTitles": [
            "ZKP Setup Verification"
          ],
          "duration": 12474,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP Setup Verification Setup can be run again without errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Setup can be run again without errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680824,
        "runtime": 392,
        "slow": false,
        "start": 1744009680432
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\tenant-membership-service.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "TenantMembershipService",
            "isTenantMember"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantMembershipService isTenantMember should check if user is a member of a tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should check if user is a member of a tenant"
        },
        {
          "ancestorTitles": [
            "TenantMembershipService",
            "isTenantMember"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantMembershipService isTenantMember should return false if user is not a member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user is not a member"
        },
        {
          "ancestorTitles": [
            "TenantMembershipService",
            "getUserTenants"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantMembershipService getUserTenants should return all tenants a user has access to",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all tenants a user has access to"
        },
        {
          "ancestorTitles": [
            "TenantMembershipService",
            "getUserTenants"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantMembershipService getUserTenants should return empty array if user has no tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return empty array if user has no tenants"
        },
        {
          "ancestorTitles": [
            "TenantMembershipService",
            "addUserToTenant"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantMembershipService addUserToTenant should add user to tenant without role assignment",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should add user to tenant without role assignment"
        },
        {
          "ancestorTitles": [
            "TenantMembershipService",
            "addUserToTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantMembershipService addUserToTenant should add user to tenant with role assignment",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should add user to tenant with role assignment"
        },
        {
          "ancestorTitles": [
            "TenantMembershipService",
            "removeUserFromTenant"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantMembershipService removeUserFromTenant should remove user from tenant and all roles",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove user from tenant and all roles"
        },
        {
          "ancestorTitles": [
            "TenantMembershipService",
            "getTenantUsers"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantMembershipService getTenantUsers should get all users in a tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should get all users in a tenant"
        },
        {
          "ancestorTitles": [
            "TenantMembershipService",
            "getUserRolesAllTenants"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TenantMembershipService getUserRolesAllTenants should get user roles across all tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should get user roles across all tenants"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680841,
        "runtime": 379,
        "slow": false,
        "start": 1744009680462
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\security\\block-ip-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "POST /api/admin/security/block-ip ACL Protection"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/security/block-ip ACL Protection should use withSecureTenantPermission with security:manage",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with security:manage"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/security/block-ip ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/security/block-ip ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680861,
        "runtime": 413,
        "slow": false,
        "start": 1744009680448
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\redis\\redis-health.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Redis Health Check"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Health Check should report healthy status when Redis is connected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should report healthy status when Redis is connected"
        },
        {
          "ancestorTitles": [
            "Redis Health Check"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Health Check should report error status when Redis is disconnected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should report error status when Redis is disconnected"
        },
        {
          "ancestorTitles": [
            "Redis Health Check"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Health Check should handle exceptions during health check",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle exceptions during health check"
        },
        {
          "ancestorTitles": [
            "Redis Health Check"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Health Check should include current connection state in response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should include current connection state in response"
        },
        {
          "ancestorTitles": [
            "Redis Health Check"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Health Check should have timestamp in response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should have timestamp in response"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680939,
        "runtime": 352,
        "slow": false,
        "start": 1744009680587
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\security\\acl-cross-tenant-detection.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "ACL Cross-Tenant Detection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Cross-Tenant Detection detectCrossTenantAccess returns false for tenant-specific ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "detectCrossTenantAccess returns false for tenant-specific ACL"
        },
        {
          "ancestorTitles": [
            "ACL Cross-Tenant Detection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Cross-Tenant Detection detectCrossTenantAccess returns true for ACL without current tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "detectCrossTenantAccess returns true for ACL without current tenant"
        },
        {
          "ancestorTitles": [
            "ACL Cross-Tenant Detection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Cross-Tenant Detection detectCrossTenantAccess returns true for mixed tenant ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "detectCrossTenantAccess returns true for mixed tenant ACL"
        },
        {
          "ancestorTitles": [
            "ACL Cross-Tenant Detection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Cross-Tenant Detection detectCrossTenantAccess allows system tenant access",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "detectCrossTenantAccess allows system tenant access"
        },
        {
          "ancestorTitles": [
            "ACL Cross-Tenant Detection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Cross-Tenant Detection detectCrossTenantAccess allows mixing tenant and system access",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "detectCrossTenantAccess allows mixing tenant and system access"
        },
        {
          "ancestorTitles": [
            "ACL Cross-Tenant Detection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Cross-Tenant Detection detectCrossTenantAccess returns false for empty ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "detectCrossTenantAccess returns false for empty ACL"
        },
        {
          "ancestorTitles": [
            "ACL Cross-Tenant Detection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Cross-Tenant Detection detectCrossTenantAccess returns true when checking non-included tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "detectCrossTenantAccess returns true when checking non-included tenant"
        },
        {
          "ancestorTitles": [
            "ACL Cross-Tenant Detection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Cross-Tenant Detection getReferencedTenants returns all tenant IDs in the ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "getReferencedTenants returns all tenant IDs in the ACL"
        },
        {
          "ancestorTitles": [
            "ACL Cross-Tenant Detection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Cross-Tenant Detection getReferencedTenants returns empty array for empty ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "getReferencedTenants returns empty array for empty ACL"
        },
        {
          "ancestorTitles": [
            "ACL Cross-Tenant Detection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Cross-Tenant Detection Tenant admin ACL does not trigger cross-tenant detection",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "Tenant admin ACL does not trigger cross-tenant detection"
        },
        {
          "ancestorTitles": [
            "ACL Cross-Tenant Detection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Cross-Tenant Detection Site admin ACL does not trigger cross-tenant detection",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "Site admin ACL does not trigger cross-tenant detection"
        },
        {
          "ancestorTitles": [
            "ACL Cross-Tenant Detection"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ACL Cross-Tenant Detection Super admin ACL does not trigger cross-tenant detection for any tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "Super admin ACL does not trigger cross-tenant detection for any tenant"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680932,
        "runtime": 17629,
        "slow": true,
        "start": 1744009663303
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\crypto\\secure-zkp-cli.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Secure ZKP Authentication Tests (CLI)",
            "Proof Generation and Verification"
          ],
          "duration": 3208,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure ZKP Authentication Tests (CLI) Proof Generation and Verification should generate and verify a valid proof",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 12,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate and verify a valid proof"
        },
        {
          "ancestorTitles": [
            "Secure ZKP Authentication Tests (CLI)",
            "Proof Generation and Verification"
          ],
          "duration": 4124,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure ZKP Authentication Tests (CLI) Proof Generation and Verification should generate different proofs for different passwords",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate different proofs for different passwords"
        },
        {
          "ancestorTitles": [
            "Secure ZKP Authentication Tests (CLI)",
            "Security Properties"
          ],
          "duration": 1961,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure ZKP Authentication Tests (CLI) Security Properties should not reveal private inputs in the proof or public signals",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not reveal private inputs in the proof or public signals"
        },
        {
          "ancestorTitles": [
            "Secure ZKP Authentication Tests (CLI)",
            "Security Properties"
          ],
          "duration": 1963,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure ZKP Authentication Tests (CLI) Security Properties should verify the zero-knowledge property",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify the zero-knowledge property"
        },
        {
          "ancestorTitles": [
            "Secure ZKP Authentication Tests (CLI)",
            "Performance"
          ],
          "duration": 2121,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure ZKP Authentication Tests (CLI) Performance should generate proofs within acceptable time limits",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate proofs within acceptable time limits"
        },
        {
          "ancestorTitles": [
            "Secure ZKP Authentication Tests (CLI)",
            "Performance"
          ],
          "duration": 3376,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure ZKP Authentication Tests (CLI) Performance should verify proofs within acceptable time limits",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify proofs within acceptable time limits"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680968,
        "runtime": 399,
        "slow": false,
        "start": 1744009680569
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\submission-service.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "SubmissionService",
            "getSubmissions"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionService getSubmissions should return submissions for a tenant with pagination",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return submissions for a tenant with pagination"
        },
        {
          "ancestorTitles": [
            "SubmissionService",
            "getSubmissions"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionService getSubmissions should apply status filter when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply status filter when provided"
        },
        {
          "ancestorTitles": [
            "SubmissionService",
            "getSubmissions"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionService getSubmissions should apply categoryId filter when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply categoryId filter when provided"
        },
        {
          "ancestorTitles": [
            "SubmissionService",
            "getSubmissionById"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionService getSubmissionById should return a submission by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a submission by ID"
        },
        {
          "ancestorTitles": [
            "SubmissionService",
            "getSubmissionById"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionService getSubmissionById should return null if submission not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null if submission not found"
        },
        {
          "ancestorTitles": [
            "SubmissionService",
            "createSubmission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionService createSubmission should create a new submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a new submission"
        },
        {
          "ancestorTitles": [
            "SubmissionService",
            "updateSubmission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionService updateSubmission should update an existing submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should update an existing submission"
        },
        {
          "ancestorTitles": [
            "SubmissionService",
            "deleteSubmission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionService deleteSubmission should delete a submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should delete a submission"
        },
        {
          "ancestorTitles": [
            "SubmissionService",
            "approveSubmission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionService approveSubmission should approve a submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should approve a submission"
        },
        {
          "ancestorTitles": [
            "SubmissionService",
            "rejectSubmission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionService rejectSubmission should reject a submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject a submission"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680971,
        "runtime": 394,
        "slow": false,
        "start": 1744009680577
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\security\\login-attempts.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Security Login Attempts API",
            "GET /api/admin/security/login-attempts"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Login Attempts API GET /api/admin/security/login-attempts should return login attempts with default pagination",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return login attempts with default pagination"
        },
        {
          "ancestorTitles": [
            "Security Login Attempts API",
            "GET /api/admin/security/login-attempts"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Login Attempts API GET /api/admin/security/login-attempts should apply pagination parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply pagination parameters"
        },
        {
          "ancestorTitles": [
            "Security Login Attempts API",
            "GET /api/admin/security/login-attempts"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Login Attempts API GET /api/admin/security/login-attempts should apply status filters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply status filters"
        },
        {
          "ancestorTitles": [
            "Security Login Attempts API",
            "GET /api/admin/security/login-attempts"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Login Attempts API GET /api/admin/security/login-attempts should apply IP risk level filters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply IP risk level filters"
        },
        {
          "ancestorTitles": [
            "Security Login Attempts API",
            "GET /api/admin/security/login-attempts"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Login Attempts API GET /api/admin/security/login-attempts should apply user ID filter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply user ID filter"
        },
        {
          "ancestorTitles": [
            "Security Login Attempts API",
            "GET /api/admin/security/login-attempts"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Login Attempts API GET /api/admin/security/login-attempts should handle errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680984,
        "runtime": 392,
        "slow": false,
        "start": 1744009680592
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\app\\api\\examples\\secure-endpoint\\__tests__\\route.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Secure Endpoint"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure Endpoint should return user information from headers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return user information from headers"
        },
        {
          "ancestorTitles": [
            "Secure Endpoint"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure Endpoint should handle missing user information",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing user information"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 18,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009680986,
        "runtime": 418,
        "slow": false,
        "start": 1744009680568
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\components\\admin\\auth\\utils\\accessControl.fixed.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "detectCrossTenantAccess"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities detectCrossTenantAccess should return false when user has explicit access to the requested tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when user has explicit access to the requested tenant"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "detectCrossTenantAccess"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities detectCrossTenantAccess should return true when user has no access to the requested tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true when user has no access to the requested tenant"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "detectCrossTenantAccess"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities detectCrossTenantAccess should return false when user has admin access to all tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when user has admin access to all tenants"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "detectCrossTenantAccess"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities detectCrossTenantAccess should handle ACL with empty entries by indicating no cross-tenant access",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle ACL with empty entries by indicating no cross-tenant access"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "getReferencedTenants"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities getReferencedTenants should extract tenant IDs from an ACL object",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should extract tenant IDs from an ACL object"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "getReferencedTenants"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities getReferencedTenants should extract tenant IDs with system tenantId",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should extract tenant IDs with system tenantId"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "getReferencedTenants"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities getReferencedTenants should handle ACL with empty entries",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle ACL with empty entries"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "hasPermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions hasPermission should return true when user has the requested permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true when user has the requested permission"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "hasPermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions hasPermission should return false when user does not have the requested permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when user does not have the requested permission"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "hasPermission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions hasPermission should return false when user does not have access to the tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when user does not have access to the tenant"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "grantPermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions grantPermission should add a new permission to the ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should add a new permission to the ACL"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "grantPermission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions grantPermission should not duplicate existing permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not duplicate existing permissions"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "grantPermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions grantPermission should add permission to different resource type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should add permission to different resource type"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "revokePermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions revokePermission should remove a permission from the ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a permission from the ACL"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "revokePermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions revokePermission should handle non-existent permissions gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle non-existent permissions gracefully"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "ACL Factory Functions"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions ACL Factory Functions should create a super admin ACL with system tenant permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a super admin ACL with system tenant permissions"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "ACL Factory Functions"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions ACL Factory Functions should create a tenant admin ACL with permissions for a specific tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a tenant admin ACL with permissions for a specific tenant"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "ACL Factory Functions"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions ACL Factory Functions should create a site admin ACL with admin permissions for a specific site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a site admin ACL with admin permissions for a specific site"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681032,
        "runtime": 297,
        "slow": false,
        "start": 1744009680735
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\app\\api\\middleware\\__tests__\\validateTenantSiteContext.error.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "validateTenantSiteContext middleware error handling"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateTenantSiteContext middleware error handling should handle errors thrown by withTenantSiteContext",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors thrown by withTenantSiteContext"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681040,
        "runtime": 361,
        "slow": false,
        "start": 1744009680679
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\sites\\search.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API should return 404 when site is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 404 when site is not found"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API should return 400 when no search query or filters are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 400 when no search query or filters are provided"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API should return 400 when search query is too short",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 400 when search query is too short"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API should search listings with the correct site ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should search listings with the correct site ID"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API should apply category filter correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply category filter correctly"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API should apply featured filter correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply featured filter correctly"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API should apply pagination parameters correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply pagination parameters correctly"
        },
        {
          "ancestorTitles": [
            "Site-Specific Search API"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site-Specific Search API should handle search errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle search errors gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681072,
        "runtime": 272,
        "slow": false,
        "start": 1744009680800
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\submissions\\review-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "POST /api/admin/submissions/[id]/approve ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/submissions/[id]/approve ACL Protection should use withSecureTenantPermission with submission:approve",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with submission:approve"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/submissions/[id]/approve ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/submissions/[id]/approve ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/submissions/[id]/reject ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/submissions/[id]/reject ACL Protection should use withSecureTenantPermission with submission:reject",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with submission:reject"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/submissions/[id]/reject ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/submissions/[id]/reject ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681084,
        "runtime": 280,
        "slow": false,
        "start": 1744009680804
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\submission-redis-service.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "SubmissionRedisService",
            "createSubmission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionRedisService createSubmission should create a new submission in Redis",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a new submission in Redis"
        },
        {
          "ancestorTitles": [
            "SubmissionRedisService",
            "getSubmission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionRedisService getSubmission should retrieve a submission from Redis by ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should retrieve a submission from Redis by ID"
        },
        {
          "ancestorTitles": [
            "SubmissionRedisService",
            "getSubmission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionRedisService getSubmission should return null if submission does not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null if submission does not exist"
        },
        {
          "ancestorTitles": [
            "SubmissionRedisService",
            "getSubmissionsBySite"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionRedisService getSubmissionsBySite should retrieve all submissions for a site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should retrieve all submissions for a site"
        },
        {
          "ancestorTitles": [
            "SubmissionRedisService",
            "getSubmissionsBySite"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionRedisService getSubmissionsBySite should return an empty array if no submissions exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty array if no submissions exist"
        },
        {
          "ancestorTitles": [
            "SubmissionRedisService",
            "updateSubmission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionRedisService updateSubmission should update an existing submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should update an existing submission"
        },
        {
          "ancestorTitles": [
            "SubmissionRedisService",
            "updateSubmission"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionRedisService updateSubmission should throw an error if submission does not exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error if submission does not exist"
        },
        {
          "ancestorTitles": [
            "SubmissionRedisService",
            "deleteSubmission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionRedisService deleteSubmission should delete a submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should delete a submission"
        },
        {
          "ancestorTitles": [
            "SubmissionRedisService",
            "approveSubmission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionRedisService approveSubmission should approve a submission and update its status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should approve a submission and update its status"
        },
        {
          "ancestorTitles": [
            "SubmissionRedisService",
            "rejectSubmission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SubmissionRedisService rejectSubmission should reject a submission and update its status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject a submission and update its status"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681178,
        "runtime": 290,
        "slow": false,
        "start": 1744009680888
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\security\\metrics-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/security/metrics ACL Protection"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/security/metrics ACL Protection should use withSecureTenantPermission with security:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with security:read"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/security/metrics ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/security/metrics ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 19,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681183,
        "runtime": 295,
        "slow": false,
        "start": 1744009680888
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\utils\\__tests__\\tenantAccessControl.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasPermissionInTenant"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasPermissionInTenant should return false if user is not a tenant member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user is not a tenant member"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasPermissionInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasPermissionInTenant should check role service if user is a tenant member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should check role service if user is a tenant member"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasPermissionInTenant"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasPermissionInTenant should handle errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors gracefully"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasAnyPermissionInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasAnyPermissionInTenant should return false if user is not a tenant member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user is not a tenant member"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasAnyPermissionInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasAnyPermissionInTenant should return true if user has any of the permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if user has any of the permissions"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasAnyPermissionInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasAnyPermissionInTenant should return false if user has none of the permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user has none of the permissions"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasAllPermissionsInTenant"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasAllPermissionsInTenant should return false if user is not a tenant member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user is not a tenant member"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasAllPermissionsInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasAllPermissionsInTenant should return true if user has all permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if user has all permissions"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasAllPermissionsInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasAllPermissionsInTenant should return false if user is missing any permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user is missing any permission"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "getAccessibleResourcesInTenant"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control getAccessibleResourcesInTenant should return empty array if user is not a tenant member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return empty array if user is not a tenant member"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "getAccessibleResourcesInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control getAccessibleResourcesInTenant should return resource IDs user has permission for",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return resource IDs user has permission for"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "getAccessibleResourcesInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control getAccessibleResourcesInTenant should filter out resources with different permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter out resources with different permissions"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "getAccessibleResourcesInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control getAccessibleResourcesInTenant should filter out resources in different tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter out resources in different tenants"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "getAccessibleResourcesInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control getAccessibleResourcesInTenant should include resources from global roles",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should include resources from global roles"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasGlobalPermissionInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasGlobalPermissionInTenant should return false if user is not a tenant member",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user is not a tenant member"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasGlobalPermissionInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasGlobalPermissionInTenant should return true if user has global permission for resource type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if user has global permission for resource type"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasGlobalPermissionInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasGlobalPermissionInTenant should return false if user has only specific resource permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false if user has only specific resource permissions"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasGlobalPermissionInTenant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasGlobalPermissionInTenant should return true if user has global role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true if user has global role"
        },
        {
          "ancestorTitles": [
            "Tenant Access Control",
            "hasGlobalPermissionInTenant"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Tenant Access Control hasGlobalPermissionInTenant should check for correct permission type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should check for correct permission type"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681179,
        "runtime": 316,
        "slow": false,
        "start": 1744009680863
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\lib\\audit\\__tests__\\audit-service-cross-site.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "AuditService Cross-Site Access"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuditService Cross-Site Access should log cross-site access attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log cross-site access attempts"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681230,
        "runtime": 309,
        "slow": false,
        "start": 1744009680921
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\lib\\auth\\__tests__\\api-token-validator.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "validateApiToken"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateApiToken should throw ApiTokenError if token is missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw ApiTokenError if token is missing"
        },
        {
          "ancestorTitles": [
            "validateApiToken"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateApiToken should throw ApiTokenError if token is invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw ApiTokenError if token is invalid"
        },
        {
          "ancestorTitles": [
            "validateApiToken"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateApiToken should throw ApiTokenError if token is expired",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw ApiTokenError if token is expired"
        },
        {
          "ancestorTitles": [
            "validateApiToken"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateApiToken should throw ApiTokenError if token has no user claim",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw ApiTokenError if token has no user claim"
        },
        {
          "ancestorTitles": [
            "validateApiToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateApiToken should return the decoded token if valid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the decoded token if valid"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 5,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681239,
        "runtime": 559,
        "slow": false,
        "start": 1744009680680
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\SiteForm.submission.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "SiteForm Submission"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Submission submits the form with valid data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "submits the form with valid data"
        },
        {
          "ancestorTitles": [
            "SiteForm Submission"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Submission handles API errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "handles API errors"
        },
        {
          "ancestorTitles": [
            "SiteForm Submission"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Submission uses PUT for edit mode and correct endpoint",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "uses PUT for edit mode and correct endpoint"
        },
        {
          "ancestorTitles": [
            "SiteForm Submission"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Submission handles network errors during submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "handles network errors during submission"
        },
        {
          "ancestorTitles": [
            "SiteForm Submission"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Submission shows loading state during submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "shows loading state during submission"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681263,
        "runtime": 270,
        "slow": false,
        "start": 1744009680993
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\zkp-bcrypt-client.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "ZKP-Bcrypt Client Integration",
            "generateZKPWithBcrypt"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP-Bcrypt Client Integration generateZKPWithBcrypt should hash the password with bcrypt before generating a ZKP proof",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should hash the password with bcrypt before generating a ZKP proof"
        },
        {
          "ancestorTitles": [
            "ZKP-Bcrypt Client Integration",
            "generateZKPWithBcrypt"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP-Bcrypt Client Integration generateZKPWithBcrypt should use the provided username and salt in the ZKP proof",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should use the provided username and salt in the ZKP proof"
        },
        {
          "ancestorTitles": [
            "ZKP-Bcrypt Client Integration",
            "verifyZKPWithBcrypt"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP-Bcrypt Client Integration verifyZKPWithBcrypt should verify a ZKP proof with bcrypt",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify a ZKP proof with bcrypt"
        },
        {
          "ancestorTitles": [
            "ZKP-Bcrypt Client Integration",
            "verifyZKPWithBcrypt"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP-Bcrypt Client Integration verifyZKPWithBcrypt should reject an invalid ZKP proof",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject an invalid ZKP proof"
        },
        {
          "ancestorTitles": [
            "ZKP-Bcrypt Client Integration",
            "hashPassword"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP-Bcrypt Client Integration hashPassword should hash a password with bcrypt",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should hash a password with bcrypt"
        },
        {
          "ancestorTitles": [
            "ZKP-Bcrypt Client Integration",
            "hashPassword"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP-Bcrypt Client Integration hashPassword should use the specified salt rounds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use the specified salt rounds"
        },
        {
          "ancestorTitles": [
            "ZKP-Bcrypt Client Integration",
            "verifyPassword"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP-Bcrypt Client Integration verifyPassword should verify a password against a bcrypt hash",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify a password against a bcrypt hash"
        },
        {
          "ancestorTitles": [
            "ZKP-Bcrypt Client Integration",
            "verifyPassword"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP-Bcrypt Client Integration verifyPassword should reject an incorrect password",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject an incorrect password"
        },
        {
          "ancestorTitles": [
            "ZKP-Bcrypt Client Integration",
            "generateBcryptSalt"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP-Bcrypt Client Integration generateBcryptSalt should generate a valid bcrypt salt",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a valid bcrypt salt"
        },
        {
          "ancestorTitles": [
            "ZKP-Bcrypt Client Integration",
            "generateBcryptSalt"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKP-Bcrypt Client Integration generateBcryptSalt should use the specified rounds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use the specified rounds"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681282,
        "runtime": 251,
        "slow": false,
        "start": 1744009681031
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\audit-real.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "RoleService Audit Logging",
            "Role Creation Audit Logging"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging Role Creation Audit Logging should log audit events when creating a global role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log audit events when creating a global role"
        },
        {
          "ancestorTitles": [
            "RoleService Audit Logging",
            "Role Creation Audit Logging"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging Role Creation Audit Logging should log audit events when creating a regular tenant role",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log audit events when creating a regular tenant role"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 13,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681297,
        "runtime": 268,
        "slow": false,
        "start": 1744009681029
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\utils\\access-control.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Access Control Utilities - Cross-Tenant Security",
            "detectCrossTenantAccess"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities - Cross-Tenant Security detectCrossTenantAccess should return false for ACL with entries from only one tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for ACL with entries from only one tenant"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities - Cross-Tenant Security",
            "detectCrossTenantAccess"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities - Cross-Tenant Security detectCrossTenantAccess should return true when ACL has entries from multiple tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true when ACL has entries from multiple tenants"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities - Cross-Tenant Security",
            "detectCrossTenantAccess"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities - Cross-Tenant Security detectCrossTenantAccess should allow system tenant entries regardless of tenant context",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow system tenant entries regardless of tenant context"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities - Cross-Tenant Security",
            "detectCrossTenantAccess"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities - Cross-Tenant Security detectCrossTenantAccess should return false for empty ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false for empty ACL"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities - Cross-Tenant Security",
            "detectCrossTenantAccess"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities - Cross-Tenant Security detectCrossTenantAccess should detect cross-tenant access in a complex ACL with nested permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect cross-tenant access in a complex ACL with nested permissions"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities - Cross-Tenant Security",
            "getReferencedTenants"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities - Cross-Tenant Security getReferencedTenants should return all tenant IDs referenced in the ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return all tenant IDs referenced in the ACL"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities - Cross-Tenant Security",
            "getReferencedTenants"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities - Cross-Tenant Security getReferencedTenants should return unique tenant IDs even when referenced multiple times",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return unique tenant IDs even when referenced multiple times"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities - Cross-Tenant Security",
            "getReferencedTenants"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities - Cross-Tenant Security getReferencedTenants should return an empty array for empty ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty array for empty ACL"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities - Cross-Tenant Security",
            "ACL management with cross-tenant security"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities - Cross-Tenant Security ACL management with cross-tenant security should detect cross-tenant access after granting permission to another tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect cross-tenant access after granting permission to another tenant"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities - Cross-Tenant Security",
            "ACL management with cross-tenant security"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities - Cross-Tenant Security ACL management with cross-tenant security should no longer detect cross-tenant access after revoking other tenant permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should no longer detect cross-tenant access after revoking other tenant permissions"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities - Cross-Tenant Security",
            "ACL management with cross-tenant security"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities - Cross-Tenant Security ACL management with cross-tenant security should create site admin ACL with no cross-tenant references",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create site admin ACL with no cross-tenant references"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities - Cross-Tenant Security",
            "ACL management with cross-tenant security"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities - Cross-Tenant Security ACL management with cross-tenant security should create tenant admin ACL with no cross-tenant references",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create tenant admin ACL with no cross-tenant references"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities - Cross-Tenant Security",
            "ACL management with cross-tenant security"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities - Cross-Tenant Security ACL management with cross-tenant security should create super admin ACL with system tenant references but no unauthorized cross-tenant access",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should create super admin ACL with system tenant references but no unauthorized cross-tenant access"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681307,
        "runtime": 280,
        "slow": false,
        "start": 1744009681027
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\users\\patch-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "PATCH /api/admin/users/[id] ACL Protection"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PATCH /api/admin/users/[id] ACL Protection should use withSecureTenantPermission with user:update",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with user:update"
        },
        {
          "ancestorTitles": [
            "PATCH /api/admin/users/[id] ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PATCH /api/admin/users/[id] ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 9,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681311,
        "runtime": 285,
        "slow": false,
        "start": 1744009681026
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\sites\\categories\\listings\\category-listings.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings should be implemented",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be implemented"
        },
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings should return all listings for a category",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should return all listings for a category"
        },
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings should filter listings by featured flag",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should filter listings by featured flag"
        },
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings should sort listings by creation date",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should sort listings by creation date"
        },
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings should paginate listings correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should paginate listings correctly"
        },
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings should return 404 if site not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should return 404 if site not found"
        },
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings should return 404 if category not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should return 404 if category not found"
        },
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings should return empty array if no listings found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should return empty array if no listings found"
        },
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings should return 400 for invalid pagination parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should return 400 for invalid pagination parameters"
        },
        {
          "ancestorTitles": [
            "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/sites/[siteSlug]/categories/[categorySlug]/listings should return 500 if Redis throws an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should return 500 if Redis throws an error"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681351,
        "runtime": 280,
        "slow": false,
        "start": 1744009681071
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\users\\get-by-id-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/users/[id] ACL Protection"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/users/[id] ACL Protection should use withSecureTenantPermission with user:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with user:read"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/users/[id] ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/users/[id] ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681373,
        "runtime": 380,
        "slow": false,
        "start": 1744009680993
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\security\\report-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "POST /api/admin/security/report ACL Protection"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/security/report ACL Protection should use withSecureTenantPermission with security:manage",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with security:manage"
        },
        {
          "ancestorTitles": [
            "POST /api/admin/security/report ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "POST /api/admin/security/report ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681387,
        "runtime": 265,
        "slow": false,
        "start": 1744009681122
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\redis\\redis-cache.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Redis Cache"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Cache getOrSet should fetch and store data when cache miss",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "getOrSet should fetch and store data when cache miss"
        },
        {
          "ancestorTitles": [
            "Redis Cache"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Cache getOrSet should use custom TTL when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "getOrSet should use custom TTL when provided"
        },
        {
          "ancestorTitles": [
            "Redis Cache"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Cache getOrSet should return cached data on cache hit",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "getOrSet should return cached data on cache hit"
        },
        {
          "ancestorTitles": [
            "Redis Cache"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Cache getOrSet should handle JSON parse errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "getOrSet should handle JSON parse errors"
        },
        {
          "ancestorTitles": [
            "Redis Cache"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Cache invalidate should delete cache entry",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "invalidate should delete cache entry"
        },
        {
          "ancestorTitles": [
            "Redis Cache"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Cache clear should remove all cache entries",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "clear should remove all cache entries"
        },
        {
          "ancestorTitles": [
            "Redis Cache"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Redis Cache clear should not call del if no cache keys found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "clear should not call del if no cache keys found"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681392,
        "runtime": 313,
        "slow": false,
        "start": 1744009681079
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\rate-limit.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Rate Limit Middleware"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rate Limit Middleware should return rate limit headers to be added to the response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should return rate limit headers to be added to the response"
        },
        {
          "ancestorTitles": [
            "Rate Limit Middleware"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rate Limit Middleware should return a 429 response when rate limit is exceeded",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should return a 429 response when rate limit is exceeded"
        },
        {
          "ancestorTitles": [
            "Rate Limit Middleware"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rate Limit Middleware should set expiration on new keys",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should set expiration on new keys"
        },
        {
          "ancestorTitles": [
            "Rate Limit Middleware"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Rate Limit Middleware should handle Redis errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Redis errors gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681467,
        "runtime": 248,
        "slow": false,
        "start": 1744009681219
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\search.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Search API (Legacy Tests)"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search API (Legacy Tests) returns 404 when site is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns 404 when site is not found"
        },
        {
          "ancestorTitles": [
            "Search API (Legacy Tests)"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search API (Legacy Tests) returns error when no search criteria provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error when no search criteria provided"
        },
        {
          "ancestorTitles": [
            "Search API (Legacy Tests)"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search API (Legacy Tests) returns error when query is too short",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns error when query is too short"
        },
        {
          "ancestorTitles": [
            "Search API (Legacy Tests)"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search API (Legacy Tests) handles query with category filter correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles query with category filter correctly"
        },
        {
          "ancestorTitles": [
            "Search API (Legacy Tests)"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search API (Legacy Tests) handles featured filter correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles featured filter correctly"
        },
        {
          "ancestorTitles": [
            "Search API (Legacy Tests)"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search API (Legacy Tests) handles pagination parameters correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles pagination parameters correctly"
        },
        {
          "ancestorTitles": [
            "Search API (Legacy Tests)"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Search API (Legacy Tests) handles search errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles search errors gracefully"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681483,
        "runtime": 252,
        "slow": false,
        "start": 1744009681231
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\multitenancy-integration.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Multitenancy Integration Tests",
            "getSiteByHostname with realistic hostnames"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Multitenancy Integration Tests getSiteByHostname with realistic hostnames should correctly resolve domain with port",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should correctly resolve domain with port"
        },
        {
          "ancestorTitles": [
            "Multitenancy Integration Tests",
            "getSiteByHostname with realistic hostnames"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Multitenancy Integration Tests getSiteByHostname with realistic hostnames should correctly resolve domain with protocol",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should correctly resolve domain with protocol"
        },
        {
          "ancestorTitles": [
            "Multitenancy Integration Tests",
            "getSiteByHostname with realistic hostnames"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Multitenancy Integration Tests getSiteByHostname with realistic hostnames should correctly resolve domain with protocol and port",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should correctly resolve domain with protocol and port"
        },
        {
          "ancestorTitles": [
            "Multitenancy Integration Tests",
            "getSiteByHostname with realistic hostnames"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Multitenancy Integration Tests getSiteByHostname with realistic hostnames should correctly resolve subdomain format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should correctly resolve subdomain format"
        },
        {
          "ancestorTitles": [
            "Multitenancy Integration Tests",
            "getSiteIdentity with simulated requests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Multitenancy Integration Tests getSiteIdentity with simulated requests should handle direct domain requests",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle direct domain requests"
        },
        {
          "ancestorTitles": [
            "Multitenancy Integration Tests",
            "getSiteIdentity with simulated requests"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Multitenancy Integration Tests getSiteIdentity with simulated requests should handle subdomain requests",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle subdomain requests"
        },
        {
          "ancestorTitles": [
            "Multitenancy Integration Tests",
            "getSiteIdentity with simulated requests"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Multitenancy Integration Tests getSiteIdentity with simulated requests should handle admin requests",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle admin requests"
        },
        {
          "ancestorTitles": [
            "Multitenancy Integration Tests",
            "getSiteIdentity with simulated requests"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Multitenancy Integration Tests getSiteIdentity with simulated requests should handle API requests",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle API requests"
        },
        {
          "ancestorTitles": [
            "Multitenancy Integration Tests",
            "Simulated middleware environment with Headers"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Multitenancy Integration Tests Simulated middleware environment with Headers should properly extract and normalize Host header",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly extract and normalize Host header"
        },
        {
          "ancestorTitles": [
            "Multitenancy Integration Tests",
            "Simulated middleware environment with Headers"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Multitenancy Integration Tests Simulated middleware environment with Headers should properly handle subdomain Host header",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle subdomain Host header"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681495,
        "runtime": 228,
        "slow": false,
        "start": 1744009681267
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\security\\login-attempts-acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/security/login-attempts ACL Protection"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/security/login-attempts ACL Protection should use withSecureTenantPermission with security:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with security:read"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/security/login-attempts ACL Protection"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/security/login-attempts ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681502,
        "runtime": 233,
        "slow": false,
        "start": 1744009681269
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\security\\block-ip.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Security Block IP API",
            "POST /api/admin/security/block-ip"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Block IP API POST /api/admin/security/block-ip should block an IP address",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should block an IP address"
        },
        {
          "ancestorTitles": [
            "Security Block IP API",
            "POST /api/admin/security/block-ip"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Block IP API POST /api/admin/security/block-ip should validate required fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate required fields"
        },
        {
          "ancestorTitles": [
            "Security Block IP API",
            "POST /api/admin/security/block-ip"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Block IP API POST /api/admin/security/block-ip should handle JSON parsing errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle JSON parsing errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681511,
        "runtime": 190,
        "slow": false,
        "start": 1744009681321
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\components\\admin\\auth\\guards\\__tests__\\permission-guard\\test-wrapper.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "TestWrapper"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "TestWrapper should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681516,
        "runtime": 216,
        "slow": false,
        "start": 1744009681300
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\security\\report.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Security Report API",
            "POST /api/admin/security/report"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Report API POST /api/admin/security/report should submit a security report",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should submit a security report"
        },
        {
          "ancestorTitles": [
            "Security Report API",
            "POST /api/admin/security/report"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Report API POST /api/admin/security/report should validate activityType field",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate activityType field"
        },
        {
          "ancestorTitles": [
            "Security Report API",
            "POST /api/admin/security/report"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Report API POST /api/admin/security/report should validate description field",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate description field"
        },
        {
          "ancestorTitles": [
            "Security Report API",
            "POST /api/admin/security/report"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Security Report API POST /api/admin/security/report should handle JSON parsing errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle JSON parsing errors"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 6,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681525,
        "runtime": 373,
        "slow": false,
        "start": 1744009681152
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\dashboard\\StatisticCards.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "StatisticCards Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCards Component renders all statistic cards correctly with hook data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders all statistic cards correctly with hook data"
        },
        {
          "ancestorTitles": [
            "StatisticCards Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCards Component shows loading state when isLoading is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "shows loading state when isLoading is true"
        },
        {
          "ancestorTitles": [
            "StatisticCards Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCards Component displays error message when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "displays error message when there is an error"
        },
        {
          "ancestorTitles": [
            "StatisticCards Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCards Component uses provided metrics from props when available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "uses provided metrics from props when available"
        },
        {
          "ancestorTitles": [
            "StatisticCards Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCards Component does not show search metrics when showSearchMetrics is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "does not show search metrics when showSearchMetrics is false"
        },
        {
          "ancestorTitles": [
            "StatisticCards Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCards Component does not show interaction metrics when showInteractionMetrics is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "does not show interaction metrics when showInteractionMetrics is false"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681533,
        "runtime": 173,
        "slow": false,
        "start": 1744009681360
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\auth\\acl.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Access Control List (ACL) Security Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control List (ACL) Security Tests should respect tenant boundaries when checking permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "should respect tenant boundaries when checking permissions"
        },
        {
          "ancestorTitles": [
            "Access Control List (ACL) Security Tests"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control List (ACL) Security Tests should detect cross-tenant access in ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect cross-tenant access in ACL"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681536,
        "runtime": 193,
        "slow": false,
        "start": 1744009681343
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\lib\\role-service\\audit-working.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "RoleService Audit Logging",
            "Global Role Operations"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging Global Role Operations should log audit events when updating global roles",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log audit events when updating global roles"
        },
        {
          "ancestorTitles": [
            "RoleService Audit Logging",
            "Global Role Operations"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging Global Role Operations should log audit events when deleting global roles",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log audit events when deleting global roles"
        },
        {
          "ancestorTitles": [
            "RoleService Audit Logging",
            "User Role Assignment"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging User Role Assignment should log audit events when assigning global roles to users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log audit events when assigning global roles to users"
        },
        {
          "ancestorTitles": [
            "RoleService Audit Logging",
            "User Role Assignment"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "RoleService Audit Logging User Role Assignment should log audit events when removing global roles from users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should log audit events when removing global roles from users"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 16,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681556,
        "runtime": 204,
        "slow": false,
        "start": 1744009681352
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\hooks\\useSites.api.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Site API Functions - fetchSite"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - fetchSite fetches a single site successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches a single site successfully"
        },
        {
          "ancestorTitles": [
            "Site API Functions - fetchSite"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - fetchSite handles fetch errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles fetch errors gracefully"
        },
        {
          "ancestorTitles": [
            "Site API Functions - fetchSite"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - fetchSite handles network errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors gracefully"
        },
        {
          "ancestorTitles": [
            "Site API Functions - fetchSites"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - fetchSites fetches all sites with no filters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches all sites with no filters"
        },
        {
          "ancestorTitles": [
            "Site API Functions - fetchSites"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - fetchSites applies filters to the query string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "applies filters to the query string"
        },
        {
          "ancestorTitles": [
            "Site API Functions - fetchSites"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - fetchSites handles API errors when fetching sites",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors when fetching sites"
        },
        {
          "ancestorTitles": [
            "Site API Functions - fetchSites"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - fetchSites handles empty or missing response data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty or missing response data"
        },
        {
          "ancestorTitles": [
            "Site API Functions - createSite"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - createSite creates a site successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "creates a site successfully"
        },
        {
          "ancestorTitles": [
            "Site API Functions - createSite"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - createSite handles API errors during creation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors during creation"
        },
        {
          "ancestorTitles": [
            "Site API Functions - createSite"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - createSite handles network errors during creation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors during creation"
        },
        {
          "ancestorTitles": [
            "Site API Functions - updateSite"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - updateSite updates a site successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "updates a site successfully"
        },
        {
          "ancestorTitles": [
            "Site API Functions - updateSite"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - updateSite handles API errors during update",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors during update"
        },
        {
          "ancestorTitles": [
            "Site API Functions - updateSite"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - updateSite handles network errors during update",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors during update"
        },
        {
          "ancestorTitles": [
            "Site API Functions - deleteSite"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - deleteSite deletes a site successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "deletes a site successfully"
        },
        {
          "ancestorTitles": [
            "Site API Functions - deleteSite"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - deleteSite handles API errors during deletion",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors during deletion"
        },
        {
          "ancestorTitles": [
            "Site API Functions - deleteSite"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Site API Functions - deleteSite handles network errors during deletion",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors during deletion"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681559,
        "runtime": 164,
        "slow": false,
        "start": 1744009681395
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\utils\\__tests__\\token-utils.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "decodeToken"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "decodeToken should decode a valid JWT token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should decode a valid JWT token"
        },
        {
          "ancestorTitles": [
            "decodeToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "decodeToken should return null for invalid token format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null for invalid token format"
        },
        {
          "ancestorTitles": [
            "decodeToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "decodeToken should return null for invalid base64 encoding",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null for invalid base64 encoding"
        },
        {
          "ancestorTitles": [
            "decodeToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "decodeToken should return null for incomplete token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null for incomplete token"
        },
        {
          "ancestorTitles": [
            "decodeToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "decodeToken should return null for undefined token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null for undefined token"
        },
        {
          "ancestorTitles": [
            "decodeToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "decodeToken should return null for null token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null for null token"
        },
        {
          "ancestorTitles": [
            "decodeToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "decodeToken should return null for empty string token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null for empty string token"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 2,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681564,
        "runtime": 315,
        "slow": false,
        "start": 1744009681249
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\api\\site\\get.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Site API - GET"
          ],
          "duration": 4,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"test:site:slug:non-existent\"\u001b[39m\nReceived: \u001b[31m\"site:slug:non-existent\"\u001b[39m\n\nNumber of calls: \u001b[31m1\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"test:site:slug:non-existent\"\u001b[39m\nReceived: \u001b[31m\"site:slug:non-existent\"\u001b[39m\n\nNumber of calls: \u001b[31m1\u001b[39m\n    at Object.toHaveBeenCalledWith (C:\\Users\\T\\directorymonster\\tests\\api\\site\\get.test.ts:52:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Site API - GET should return 404 when site is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "failed",
          "title": "should return 404 when site is not found"
        },
        {
          "ancestorTitles": [
            "Site API - GET"
          ],
          "duration": 2,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"test:site:slug:test-site\"\u001b[39m\nReceived: \u001b[31m\"site:slug:test-site\"\u001b[39m\n\nNumber of calls: \u001b[31m1\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"test:site:slug:test-site\"\u001b[39m\nReceived: \u001b[31m\"site:slug:test-site\"\u001b[39m\n\nNumber of calls: \u001b[31m1\u001b[39m\n    at Object.toHaveBeenCalledWith (C:\\Users\\T\\directorymonster\\tests\\api\\site\\get.test.ts:88:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "fullName": "Site API - GET should return site configuration for a valid site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "failed",
          "title": "should return site configuration for a valid site"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSite API - GET › should return 404 when site is not found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m\"test:site:slug:non-existent\"\u001b[39m\n    Received: \u001b[31m\"site:slug:non-existent\"\u001b[39m\n\n    Number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 50 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m     \u001b[90m// Verify the Redis client was called correctly\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 52 |\u001b[39m     expect(kv\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m'test:site:slug:non-existent'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 54 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m   it(\u001b[32m'should return site configuration for a valid site'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/site/get.test.ts\u001b[39m\u001b[0m\u001b[2m:52:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSite API - GET › should return site configuration for a valid site\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m\"test:site:slug:test-site\"\u001b[39m\n    Received: \u001b[31m\"site:slug:test-site\"\u001b[39m\n\n    Number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 86 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 87 |\u001b[39m     \u001b[90m// Verify the Redis client was called correctly\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 88 |\u001b[39m     expect(kv\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m'test:site:slug:test-site'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 89 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 90 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 91 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/api/site/get.test.ts\u001b[39m\u001b[0m\u001b[2m:88:20)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681589,
        "runtime": 155,
        "slow": false,
        "start": 1744009681434
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\middleware\\permissionguard.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Secure Tenant Context Basic Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure Tenant Context Basic Tests should create a TenantContext instance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a TenantContext instance"
        },
        {
          "ancestorTitles": [
            "Secure Tenant Context Basic Tests"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure Tenant Context Basic Tests should call withSecureTenantContext with correct parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should call withSecureTenantContext with correct parameters"
        },
        {
          "ancestorTitles": [
            "Secure Tenant Context Basic Tests"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Secure Tenant Context Basic Tests should call withSecureTenantPermission with correct parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should call withSecureTenantPermission with correct parameters"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681591,
        "runtime": 164,
        "slow": false,
        "start": 1744009681427
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\types\\snarkjs.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "snarkjs TypeScript definitions"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "snarkjs TypeScript definitions should not use reserved keywords as function names",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not use reserved keywords as function names"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 18,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681596,
        "runtime": 176,
        "slow": false,
        "start": 1744009681420
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\components\\admin\\auth\\utils\\accessControl.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "detectCrossTenantAccess"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities detectCrossTenantAccess should return false when user has explicit access to the requested tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when user has explicit access to the requested tenant"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "detectCrossTenantAccess"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities detectCrossTenantAccess should return true when user has no access to the requested tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true when user has no access to the requested tenant"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "detectCrossTenantAccess"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities detectCrossTenantAccess should return false when user has admin access to all tenants",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when user has admin access to all tenants"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "detectCrossTenantAccess"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities detectCrossTenantAccess should handle ACL with empty entries by indicating no cross-tenant access",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle ACL with empty entries by indicating no cross-tenant access"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "getReferencedTenants"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities getReferencedTenants should extract tenant IDs from an ACL object",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should extract tenant IDs from an ACL object"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "getReferencedTenants"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities getReferencedTenants should extract tenant IDs with system tenantId",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should extract tenant IDs with system tenantId"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "getReferencedTenants"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities getReferencedTenants should handle ACL with empty entries",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle ACL with empty entries"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "hasPermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions hasPermission should return true when user has the requested permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return true when user has the requested permission"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "hasPermission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions hasPermission should return false when user does not have the requested permission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when user does not have the requested permission"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "hasPermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions hasPermission should return false when user does not have access to the tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return false when user does not have access to the tenant"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "grantPermission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions grantPermission should add a new permission to the ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should add a new permission to the ACL"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "grantPermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions grantPermission should not duplicate existing permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not duplicate existing permissions"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "grantPermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions grantPermission should add permission to different resource type",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should add permission to different resource type"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "revokePermission"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions revokePermission should remove a permission from the ACL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove a permission from the ACL"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "revokePermission"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions revokePermission should handle non-existent permissions gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle non-existent permissions gracefully"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "ACL Factory Functions"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions ACL Factory Functions should create a super admin ACL with system tenant permissions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a super admin ACL with system tenant permissions"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "ACL Factory Functions"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions ACL Factory Functions should create a tenant admin ACL with permissions for a specific tenant",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a tenant admin ACL with permissions for a specific tenant"
        },
        {
          "ancestorTitles": [
            "Access Control Utilities",
            "Permission Management Functions",
            "ACL Factory Functions"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Access Control Utilities Permission Management Functions ACL Factory Functions should create a site admin ACL with admin permissions for a specific site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should create a site admin ACL with admin permissions for a specific site"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681609,
        "runtime": 112,
        "slow": false,
        "start": 1744009681497
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\unit\\api\\admin\\context-test\\acl.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "GET /api/admin/context-test ACL Protection"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/context-test ACL Protection should use withSecureTenantPermission with setting:read",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should use withSecureTenantPermission with setting:read"
        },
        {
          "ancestorTitles": [
            "GET /api/admin/context-test ACL Protection"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "GET /api/admin/context-test ACL Protection should handle permission denial correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denial correctly"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681628,
        "runtime": 118,
        "slow": false,
        "start": 1744009681510
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\src\\app\\api\\middleware\\__tests__\\withSecureApiToken.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "withSecureApiToken middleware"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withSecureApiToken middleware should call withApiToken and apiTokenHandler in the correct order",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should call withApiToken and apiTokenHandler in the correct order"
        },
        {
          "ancestorTitles": [
            "withSecureApiToken middleware"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "withSecureApiToken middleware should handle ApiTokenError from withApiToken",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle ApiTokenError from withApiToken"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 2,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681628,
        "runtime": 109,
        "slow": false,
        "start": 1744009681519
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-management\\SiteSubmission.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Site Creation - Submission"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Creation - Submission should submit the site creation form successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should submit the site creation form successfully"
        },
        {
          "ancestorTitles": [
            "Integration: Site Creation - Submission"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Creation - Submission should show appropriate notifications during site submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should show appropriate notifications during site submission"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 2,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681636,
        "runtime": 110,
        "slow": false,
        "start": 1744009681526
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-management\\SiteCreationSEO.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Site Creation - SEO Settings Step"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Creation - SEO Settings Step should update SEO settings correctly with validation feedback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should update SEO settings correctly with validation feedback"
        },
        {
          "ancestorTitles": [
            "Integration: Site Creation - SEO Settings Step"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Creation - SEO Settings Step should show validation errors for invalid SEO settings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should show validation errors for invalid SEO settings"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 3,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681658,
        "runtime": 101,
        "slow": false,
        "start": 1744009681557
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\lib\\auth\\worker-pool.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "AuthWorkerPool"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthWorkerPool should create workers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should create workers"
        },
        {
          "ancestorTitles": [
            "AuthWorkerPool"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthWorkerPool should execute tasks",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should execute tasks"
        },
        {
          "ancestorTitles": [
            "AuthWorkerPool"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AuthWorkerPool should handle errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should handle errors"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: setImmediate is not defined\n\n    \u001b[0m \u001b[90m 62 |\u001b[39m     error\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39merror(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 63 |\u001b[39m     warn\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mwarn(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m     info\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39minfo(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 65 |\u001b[39m     http\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mhttp(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 66 |\u001b[39m     debug\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mdebug(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 67 |\u001b[39m     trace\u001b[33m:\u001b[39m (message\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m logger\u001b[33m.\u001b[39mtrace(\u001b[32m`[${namespace}] ${message}`\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Console.log (\u001b[22mnode_modules/winston/lib/winston/transports/console.js\u001b[2m:53:5)\u001b[22m\n      \u001b[2mat Console._write (\u001b[22mnode_modules/winston-transport/modern.js\u001b[2m:82:19)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat Console.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.ondata (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:629:20)\u001b[22m\n      \u001b[2mat addChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:279:12)\u001b[22m\n      \u001b[2mat readableAddChunk (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:262:11)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Readable.push (\u001b[22mnode_modules/readable-stream/lib/_stream_readable.js\u001b[2m:228:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform.push (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:132:32)\u001b[22m\n      \u001b[2mat DerivedLogger._transform (\u001b[22mnode_modules/winston/lib/winston/logger.js\u001b[2m:314:12)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._read (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:166:10)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Transform._write (\u001b[22mnode_modules/readable-stream/lib/_stream_transform.js\u001b[2m:155:83)\u001b[22m\n      \u001b[2mat doWrite (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:390:139)\u001b[22m\n      \u001b[2mat writeOrBuffer (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:381:5)\u001b[22m\n      \u001b[2mat DerivedLogger.Object.<anonymous>.Writable.write (\u001b[22mnode_modules/readable-stream/lib/_stream_writable.js\u001b[2m:302:11)\u001b[22m\n      \u001b[2mat DerivedLogger.<computed> [as info] (\u001b[22mnode_modules/winston/lib/winston/create-logger.js\u001b[2m:81:14)\u001b[22m\n      \u001b[2mat Object.info (\u001b[22msrc/lib/logger.ts\u001b[2m:64:39)\u001b[22m\n      \u001b[2mat new info (\u001b[22msrc/lib/redis-client.ts\u001b[2m:15:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/lib/redis-client.ts\u001b[2m:355:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mtests/integration/auth/acl-test-setup.ts\u001b[2m:34:22)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtests/integration/performance/concurrent-operations/parallel-reads.test.ts\u001b[39m\u001b[0m\u001b[2m:10:23)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": "setImmediate is not defined",
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\integration\\performance\\concurrent-operations\\parallel-reads.test.ts",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 3,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681721,
        "runtime": 184,
        "slow": false,
        "start": 1744009681537
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\site-listing\\SiteListingDataLoading.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Site Listing Data Loading"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Listing Data Loading should show loading state when switching between sites",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should show loading state when switching between sites"
        },
        {
          "ancestorTitles": [
            "Integration: Site Listing Data Loading"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Listing Data Loading should handle errors when loading listings for a site",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should handle errors when loading listings for a site"
        },
        {
          "ancestorTitles": [
            "Integration: Site Listing Data Loading"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Site Listing Data Loading should cache previously loaded site listings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should cache previously loaded site listings"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 5,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681736,
        "runtime": 176,
        "slow": false,
        "start": 1744009681560
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\DomainManager.submission.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "DomainManager Submission"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Submission submits the form with valid data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "submits the form with valid data"
        },
        {
          "ancestorTitles": [
            "DomainManager Submission"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Submission handles API errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "handles API errors"
        },
        {
          "ancestorTitles": [
            "DomainManager Submission"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Submission uses PUT for edit mode and correct endpoint",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "uses PUT for edit mode and correct endpoint"
        },
        {
          "ancestorTitles": [
            "DomainManager Submission"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Submission handles network errors during submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "handles network errors during submission"
        },
        {
          "ancestorTitles": [
            "DomainManager Submission"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Submission shows loading state during submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "shows loading state during submission"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 5,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009681750,
        "runtime": 204,
        "slow": false,
        "start": 1744009681546
      },
      "skipped": true,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\admin\\integration\\filtering\\CombinedFilters.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Integration: Combined Filtering (Category + Site + Status)"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Combined Filtering (Category + Site + Status) should apply multiple filters simultaneously",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should apply multiple filters simultaneously"
        },
        {
          "ancestorTitles": [
            "Integration: Combined Filtering (Category + Site + Status)"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Combined Filtering (Category + Site + Status) should display all active filters in the UI",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should display all active filters in the UI"
        },
        {
          "ancestorTitles": [
            "Integration: Combined Filtering (Category + Site + Status)"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Combined Filtering (Category + Site + Status) should update results when removing one filter while keeping others",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should update results when removing one filter while keeping others"
        },
        {
          "ancestorTitles": [
            "Integration: Combined Filtering (Category + Site + Status)"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Combined Filtering (Category + Site + Status) should clear all filters when the clear all button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should clear all filters when the clear all button is clicked"
        },
        {
          "ancestorTitles": [
            "Integration: Combined Filtering (Category + Site + Status)"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Integration: Combined Filtering (Category + Site + Status) should handle the case when there are no listings matching the combined filters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "should handle the case when there are no listings matching the combined filters"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 1,
      "numPassingTests": 155,
      "numPendingTests": 12,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1744009688778,
        "runtime": 25474,
        "slow": true,
        "start": 1744009663304
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\T\\directorymonster\\tests\\components\\index.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 49,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component renders activity feed with items correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders activity feed with items correctly"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component calls refresh when refresh button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls refresh when refresh button is clicked"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component calls loadMore when load more button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls loadMore when load more button is clicked"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component does not show the header when showHeader is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not show the header when showHeader is false"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component displays loading state when isLoading is true and no activities are available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays loading state when isLoading is true and no activities are available"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component displays error message when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays error message when there is an error"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component displays empty state when there are no activities",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays empty state when there are no activities"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component does not show load more button when hasMore is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not show load more button when hasMore is false"
        },
        {
          "ancestorTitles": [
            "ActivityFeed Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ActivityFeed Component applies custom className when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "applies custom className when provided"
        },
        {
          "ancestorTitles": [
            "StatisticCards Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCards Component renders all statistic cards correctly with hook data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders all statistic cards correctly with hook data"
        },
        {
          "ancestorTitles": [
            "StatisticCards Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCards Component shows loading state when isLoading is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "shows loading state when isLoading is true"
        },
        {
          "ancestorTitles": [
            "StatisticCards Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCards Component displays error message when there is an error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "displays error message when there is an error"
        },
        {
          "ancestorTitles": [
            "StatisticCards Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCards Component uses provided metrics from props when available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "uses provided metrics from props when available"
        },
        {
          "ancestorTitles": [
            "StatisticCards Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCards Component does not show search metrics when showSearchMetrics is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "does not show search metrics when showSearchMetrics is false"
        },
        {
          "ancestorTitles": [
            "StatisticCards Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "StatisticCards Component does not show interaction metrics when showInteractionMetrics is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "does not show interaction metrics when showInteractionMetrics is false"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 29,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component renders the login form correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the login form correctly"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 340,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component handles input changes correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles input changes correctly"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 77,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component shows validation errors for empty fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "shows validation errors for empty fields"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 382,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component shows validation error for short password",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "shows validation error for short password"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 509,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component successfully submits the form and generates ZKP",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "successfully submits the form and generates ZKP"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 492,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component shows an error message on authentication failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows an error message on authentication failure"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 566,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component handles network errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors gracefully"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 557,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component handles ZKP generation errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles ZKP generation errors gracefully"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 656,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component shows a spinner while authenticating",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows a spinner while authenticating"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 558,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component properly stores the authentication token after successful login",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "properly stores the authentication token after successful login"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 589,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component handles the \"remember me\" option correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles the \"remember me\" option correctly"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 62,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component supports \"Forgot Password\" functionality",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "supports \"Forgot Password\" functionality"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 574,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component includes appropriate CSRF protection",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "includes appropriate CSRF protection"
        },
        {
          "ancestorTitles": [
            "ZKPLogin Component"
          ],
          "duration": 2784,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ZKPLogin Component implements rate limiting for failed login attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 12,
          "retryReasons": [],
          "status": "passed",
          "title": "implements rate limiting for failed login attempts"
        },
        {
          "ancestorTitles": [
            "AdminSidebar Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminSidebar Component renders with all navigation items",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with all navigation items"
        },
        {
          "ancestorTitles": [
            "AdminSidebar Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminSidebar Component highlights the active navigation item",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "highlights the active navigation item"
        },
        {
          "ancestorTitles": [
            "AdminSidebar Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminSidebar Component closes the sidebar when clicking the close button on mobile",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "closes the sidebar when clicking the close button on mobile"
        },
        {
          "ancestorTitles": [
            "AdminSidebar Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminSidebar Component has a closeSidebar function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "has a closeSidebar function"
        },
        {
          "ancestorTitles": [
            "AdminSidebar Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminSidebar Component applies the correct classes when sidebar is closed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "applies the correct classes when sidebar is closed"
        },
        {
          "ancestorTitles": [
            "AdminHeader Component"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminHeader Component renders correctly with title and buttons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correctly with title and buttons"
        },
        {
          "ancestorTitles": [
            "AdminHeader Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminHeader Component calls toggleSidebar when menu button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls toggleSidebar when menu button is clicked"
        },
        {
          "ancestorTitles": [
            "AdminHeader Component"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminHeader Component opens the notifications dropdown when clicking the bell icon",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "opens the notifications dropdown when clicking the bell icon"
        },
        {
          "ancestorTitles": [
            "AdminHeader Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminHeader Component opens the user dropdown menu when clicking the user icon",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "opens the user dropdown menu when clicking the user icon"
        },
        {
          "ancestorTitles": [
            "AdminHeader Component"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminHeader Component closes user menu when clicking on a menu item",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "closes user menu when clicking on a menu item"
        },
        {
          "ancestorTitles": [
            "AdminHeader Component"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "AdminHeader Component closes the notifications dropdown when opening user menu",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "closes the notifications dropdown when opening user menu"
        },
        {
          "ancestorTitles": [
            "Breadcrumbs Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Breadcrumbs Component renders nothing when on admin root path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders nothing when on admin root path"
        },
        {
          "ancestorTitles": [
            "Breadcrumbs Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Breadcrumbs Component renders correct breadcrumbs for single-level path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correct breadcrumbs for single-level path"
        },
        {
          "ancestorTitles": [
            "Breadcrumbs Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Breadcrumbs Component renders correct breadcrumbs for multi-level path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correct breadcrumbs for multi-level path"
        },
        {
          "ancestorTitles": [
            "Breadcrumbs Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Breadcrumbs Component formats path segments properly with capitalization and spaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "formats path segments properly with capitalization and spaces"
        },
        {
          "ancestorTitles": [
            "Breadcrumbs Component"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Breadcrumbs Component renders the correct ARIA attributes for accessibility",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the correct ARIA attributes for accessibility"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders the loading state when isLoading is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the loading state when isLoading is true"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 28,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders the error state when error is present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the error state when error is present"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders the empty state when categories is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the empty state when categories is empty"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders the table with correct columns",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders the table with correct columns"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component shows site column in multi-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "shows site column in multi-site mode"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component hides site column in single-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "hides site column in single-site mode"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders the correct number of category rows",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders the correct number of category rows"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders mobile view for small screens",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "renders mobile view for small screens"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders pagination with correct info",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders pagination with correct info"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component calls confirmDelete when delete button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "calls confirmDelete when delete button is clicked"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component renders delete confirmation modal when isDeleteModalOpen is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders delete confirmation modal when isDeleteModalOpen is true"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component calls handleDelete when delete is confirmed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "calls handleDelete when delete is confirmed"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component calls cancelDelete when delete is cancelled",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls cancelDelete when delete is cancelled"
        },
        {
          "ancestorTitles": [
            "CategoryTable Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTable Component calls fetchCategories when retry button is clicked in error state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls fetchCategories when retry button is clicked in error state"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 44,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering renders the category information correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the category information correctly"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 43,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering renders with correct semantic HTML structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with correct semantic HTML structure"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering formats dates in a human-readable format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "formats dates in a human-readable format"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering displays site name when showSiteColumn is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "displays site name when showSiteColumn is true"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering does not display site column when showSiteColumn is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not display site column when showSiteColumn is false"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering handles categories with extremely long names",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles categories with extremely long names"
        },
        {
          "ancestorTitles": [
            "CategoryTableRow Component - Basic Rendering"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableRow Component - Basic Rendering applies proper visual styling to the row",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "applies proper visual styling to the row"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component renders the header with correct category count",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the header with correct category count"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component renders the add new category button with correct href",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the add new category button with correct href"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component uses site-specific URL when siteSlug is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses site-specific URL when siteSlug is provided"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component calls setSearchTerm when search input changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls setSearchTerm when search input changes"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component renders the clear search button when searchTerm has a value",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the clear search button when searchTerm has a value"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component renders parent category filter dropdown with correct options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "renders parent category filter dropdown with correct options"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component calls setParentFilter when parent selection changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls setParentFilter when parent selection changes"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component renders site filter dropdown only in multi-site mode",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders site filter dropdown only in multi-site mode"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component excludes child categories from parent filter options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "excludes child categories from parent filter options"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component shows \"Reset Filters\" button when filters are applied",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "shows \"Reset Filters\" button when filters are applied"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component uses responsive layout for filter controls",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses responsive layout for filter controls"
        },
        {
          "ancestorTitles": [
            "CategoryTableHeader Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableHeader Component displays \"View Hierarchy\" toggle button for tree view",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays \"View Hierarchy\" toggle button for tree view"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component renders with correct current page and total pages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with correct current page and total pages"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component displays correct item range text",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays correct item range text"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component handles last page with fewer items correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles last page with fewer items correctly"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component disables previous button on first page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "disables previous button on first page"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component disables next button on last page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "disables next button on last page"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component disables next button when there are no pages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "disables next button when there are no pages"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component calls goToPage with previous page when previous button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls goToPage with previous page when previous button is clicked"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component calls goToPage with next page when next button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls goToPage with next page when next button is clicked"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component calls setItemsPerPage when items per page dropdown changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls setItemsPerPage when items per page dropdown changes"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component renders all available page size options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "renders all available page size options"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component has proper ARIA attributes for accessibility",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper ARIA attributes for accessibility"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component uses responsive layout for mobile and desktop",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "uses responsive layout for mobile and desktop"
        },
        {
          "ancestorTitles": [
            "CategoryTablePagination Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTablePagination Component properly groups navigation elements for usability",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "properly groups navigation elements for usability"
        },
        {
          "ancestorTitles": [
            "CategoryTableSkeleton Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSkeleton Component renders the skeleton UI with loading text",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the skeleton UI with loading text"
        },
        {
          "ancestorTitles": [
            "CategoryTableSkeleton Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSkeleton Component includes animation classes for visual indication of loading",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "includes animation classes for visual indication of loading"
        },
        {
          "ancestorTitles": [
            "CategoryTableSkeleton Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableSkeleton Component renders the skeleton rows for data representation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the skeleton rows for data representation"
        },
        {
          "ancestorTitles": [
            "CategoryTableEmptyState Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableEmptyState Component renders the empty state message correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the empty state message correctly"
        },
        {
          "ancestorTitles": [
            "CategoryTableEmptyState Component"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableEmptyState Component renders the create button with default URL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the create button with default URL"
        },
        {
          "ancestorTitles": [
            "CategoryTableEmptyState Component"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableEmptyState Component uses site-specific URL when siteSlug is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "uses site-specific URL when siteSlug is provided"
        },
        {
          "ancestorTitles": [
            "CategoryTableEmptyState Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableEmptyState Component has proper styling for the empty state container",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper styling for the empty state container"
        },
        {
          "ancestorTitles": [
            "CategoryTableEmptyState Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CategoryTableEmptyState Component has accessible focus states for the create button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "has accessible focus states for the create button"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component handles null callbacks gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles null callbacks gracefully"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component renders with different title and item name values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with different title and item name values"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 67,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component supports interaction via Enter key on modal buttons",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "supports interaction via Enter key on modal buttons"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component preserves modal structure when handling long item names",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "preserves modal structure when handling long item names"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component renders correctly when open",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correctly when open"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component does not render when closed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not render when closed"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component calls onConfirm when Delete button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onConfirm when Delete button is clicked"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component calls onCancel when Cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel when Cancel button is clicked"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component calls onCancel when backdrop is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel when backdrop is clicked"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component calls onCancel when Escape key is pressed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel when Escape key is pressed"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component does not call onCancel when other keys are pressed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not call onCancel when other keys are pressed"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component properly prevents modal background click propagation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "properly prevents modal background click propagation"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component has proper accessibility attributes and structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 11,
          "retryReasons": [],
          "status": "passed",
          "title": "has proper accessibility attributes and structure"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 73,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component sets focus on cancel button when opened",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "sets focus on cancel button when opened"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 187,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component maintains focus trap within modal when tabbing forward",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "maintains focus trap within modal when tabbing forward"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 171,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component can trigger Cancel button with keyboard",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "can trigger Cancel button with keyboard"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 139,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component can trigger Confirm button with keyboard",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "can trigger Confirm button with keyboard"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 234,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component maintains focus trap within modal when tabbing backward",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "maintains focus trap within modal when tabbing backward"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component handles different keyboard events correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles different keyboard events correctly"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 89,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component restores focus when the modal is closed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "restores focus when the modal is closed"
        },
        {
          "ancestorTitles": [
            "DeleteConfirmationModal Component"
          ],
          "duration": 151,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DeleteConfirmationModal Component properly manages focus when closed and reopened",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "properly manages focus when closed and reopened"
        },
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component renders loading state initially when no data is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders loading state initially when no data is provided"
        },
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 36,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component renders the table with provided listings data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "renders the table with provided listings data"
        },
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 35,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component handles search filtering correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles search filtering correctly"
        },
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 26,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component changes sort order when clicking on column headers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "changes sort order when clicking on column headers"
        },
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component displays an empty state when there are no listings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays an empty state when there are no listings"
        },
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component displays an error state when fetch fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays an error state when fetch fails"
        },
        {
          "ancestorTitles": [
            "ListingTable Component"
          ],
          "duration": 46,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ListingTable Component shows delete confirmation dialog when delete is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "shows delete confirmation dialog when delete is clicked"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component renders in create mode correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "renders in create mode correctly"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component renders in edit mode with initial data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders in edit mode with initial data"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 518,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component navigates to domains step when clicking next",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "navigates to domains step when clicking next"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 61,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component calls onCancel callback when cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel callback when cancel button is clicked"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 65,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component validates required fields when trying to proceed to next step",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates required fields when trying to proceed to next step"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 546,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component validates slug format when trying to proceed to next step",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates slug format when trying to proceed to next step"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 62,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component clears validation errors when fields are changed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "clears validation errors when fields are changed"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 1147,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SiteForm Component completes the first step of the multi-step form",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "completes the first step of the multi-step form"
        },
        {
          "ancestorTitles": [
            "SiteForm Component"
          ],
          "duration": 1516,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m\n\nIgnored nodes: comments, script, style\n\u001b[36m<html>\u001b[39m\n  \u001b[36m<head />\u001b[39m\n  \u001b[36m<body>\u001b[39m\n    \u001b[36m<button\u001b[39m\n      \u001b[33mid\u001b[39m=\u001b[32m\"external-button\"\u001b[39m\n    \u001b[36m>\u001b[39m\n      \u001b[0mExternal Button\u001b[0m\n    \u001b[36m</button>\u001b[39m\n    \u001b[36m<div>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mclass\u001b[39m=\u001b[32m\"w-full max-w-2xl mx-auto p-6 bg-white rounded shadow\"\u001b[39m\n        \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-form\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[36m<h1\u001b[39m\n          \u001b[33mclass\u001b[39m=\u001b[32m\"text-xl font-bold mb-6\"\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"siteForm-header\"\u001b[39m\n          \u001b[33mid\u001b[39m=\u001b[32m\"siteForm-header\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mCreate\u001b[0m\n          \u001b[0m Site\u001b[0m\n        \u001b[36m</h1>\u001b[39m\n        \u001b[36m<nav\u001b[39m\n          \u001b[33maria-label\u001b[39m=\u001b[32m\"Form Steps\"\u001b[39m\n          \u001b[33mclass\u001b[39m=\u001b[32m\"mb-6\"\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-form-steps-navigation\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[36m<ol\u001b[39m\n            \u001b[33mclass\u001b[39m=\u001b[32m\"flex flex-wrap border-b border-gray-200\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<li\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-basic_info\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"\n                  py-3 w-full text-sm font-medium\n                  text-gray-700 hover:text-blue-500\n                \"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-basic_info\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<svg\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"w-4 h-4 text-green-500\"\u001b[39m\n                    \u001b[33mfill\u001b[39m=\u001b[32m\"currentColor\"\u001b[39m\n                    \u001b[33mviewBox\u001b[39m=\u001b[32m\"0 0 20 20\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[36m<path\u001b[39m\n                      \u001b[33mclip-rule\u001b[39m=\u001b[32m\"evenodd\"\u001b[39m\n                      \u001b[33md\u001b[39m=\u001b[32m\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\u001b[39m\n                      \u001b[33mfill-rule\u001b[39m=\u001b[32m\"evenodd\"\u001b[39m\n                    \u001b[36m/>\u001b[39m\n                  \u001b[36m</svg>\u001b[39m\n                \u001b[36m</span>\u001b[39m\n                \u001b[0mBasic Information\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</li>\u001b[39m\n            \u001b[36m<li\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-domains\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33maria-current\u001b[39m=\u001b[32m\"step\"\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"\n                  py-3 w-full text-sm font-medium\n                  text-blue-600 border-b-2 border-blue-600\n                \"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-domains\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<span\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"text-blue-600\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0m2\u001b[0m\n                  \u001b[36m</span>\u001b[39m\n                \u001b[36m</span>\u001b[39m\n                \u001b[0mDomains\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</li>\u001b[39m\n            \u001b[36m<li\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-theme\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"\n                  py-3 w-full text-sm font-medium\n                  text-gray-400\n                \"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-theme\"\u001b[39m\n                \u001b[33mdisabled\u001b[39m=\u001b[32m\"\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<span\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"text-gray-400\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0m3\u001b[0m\n                  \u001b[36m</span>\u001b[39m\n                \u001b[36m</span>\u001b[39m\n                \u001b[0mAppearance\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</li>\u001b[39m\n            \u001b[36m<li\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-seo\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"\n                  py-3 w-full text-sm font-medium\n                  text-gray-400\n                \"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-seo\"\u001b[39m\n                \u001b[33mdisabled\u001b[39m=\u001b[32m\"\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<span\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"text-gray-400\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0m4\u001b[0m\n                  \u001b[36m</span>\u001b[39m\n                \u001b[36m</span>\u001b[39m\n                \u001b[0mSEO\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</li>\u001b[39m\n            \u001b[36m<li\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-preview\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"\n                  py-3 w-full text-sm font-medium\n                  text-gray-400\n                \"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-preview\"\u001b[39m\n                \u001b[33mdisabled\u001b[39m=\u001b[32m\"\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<span\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"text-gray-400\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0m5\u001b[0m\n                  \u001b[36m</span>\u001b[39m\n                \u001b[36m</span>\u001b[39m\n                \u001b[0mPreview\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</li>\u001b[39m\n          \u001b[36m</ol>\u001b[39m\n        \u001b[36m</nav>\u001b[39m\n        \u001b[36m<form\u001b[39m\n          \u001b[33maria-labelledby\u001b[39m=\u001b[32m\"siteForm-header\"\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"siteForm-form\"\u001b[39m\n          \u001b[33mrole\u001b[39m=\u001b[32m\"form\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mclass\u001b[39m=\u001b[32m\"mb-6\"\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-content\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<div\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"domain-step\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<h2>\u001b[39m\n                \u001b[0mDomain Configuration\u001b[0m\n              \u001b[36m</h2>\u001b[39m\n              \u001b[36m<div>\u001b[39m\n                \u001b[0mNo domains configured\u001b[0m\n              \u001b[36m</div>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"add-domain-button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mAdd Domain\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</div>\u001b[39m\n          \u001b[36m</div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mclass\u001b[39m=\u001b[32m\"flex justify-between mt-8\"\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"form-actions\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<div\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"flex justify-start\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded focus:outline-none focus:ring-2\"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"form-back-button\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m← Back\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</div>\u001b[39m\n            \u001b[36m<div\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"flex justify-end space-x-3\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-4 py-2 bg-gray-200 hover:bg-gray-300 rounded focus:outline-none focus:ring-2\"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"cancel-button\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mCancel\u001b[0m\n              \u001b[36m</button>\u001b[39m\n              \u001b[36m<button\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded focus:outline-none focus:ring-2 disabled:opacity-50\"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"next-button\"\u001b[39m\n                \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mNext →\u001b[0m\n              \u001b[36m</button>\u001b[39m\n            \u001b[36m</div>\u001b[39m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</form>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</div>\u001b[39m\n  \u001b[36m</body>\u001b[39m\n\u001b[36m</html>\u001b[39m\n    at toHaveBeenCalled (C:\\Users\\T\\directorymonster\\tests\\admin\\sites\\SiteForm.test.tsx:297:30)\n    at runWithExpensiveErrorDiagnosticsDisabled (C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\config.js:47:12)\n    at checkCallback (C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\wait-for.js:124:77)\n    at checkRealTimersCallback (C:\\Users\\T\\directorymonster\\node_modules\\@testing-library\\dom\\dist\\wait-for.js:118:16)\n    at Timeout.task [as _onTimeout] (C:\\Users\\T\\directorymonster\\node_modules\\jsdom\\lib\\jsdom\\browser\\Window.js:520:19)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"
          ],
          "fullName": "SiteForm Component calls onSuccess callback when form submission succeeds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "calls onSuccess callback when form submission succeeds"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component renders in create mode correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "renders in create mode correctly"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component renders in edit mode with initial domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "renders in edit mode with initial domains"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 314,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component allows adding a valid domain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "allows adding a valid domain"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 415,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component shows an error for an invalid domain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "shows an error for an invalid domain"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 311,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component prevents adding duplicate domains",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "prevents adding duplicate domains"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 91,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component allows removing a domain",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "allows removing a domain"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 60,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component calls onCancel callback when cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel callback when cancel button is clicked"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component directly tests useDomains hook submission functionality",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "directly tests useDomains hook submission functionality"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component tests useDomains hook error handling",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "tests useDomains hook error handling"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component tests useDomains hook network error handling",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "tests useDomains hook network error handling"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 54,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component prevents submission when no domains are added",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "prevents submission when no domains are added"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component uses custom API endpoint when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses custom API endpoint when provided"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": null,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component tests domain validation with custom validation function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "pending",
          "title": "tests domain validation with custom validation function"
        },
        {
          "ancestorTitles": [
            "DomainManager Component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "DomainManager Component tests domain handling with empty input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "tests domain handling with empty input"
        },
        {
          "ancestorTitles": [
            "SEOSettings Component"
          ],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Component renders correctly with default values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "renders correctly with default values"
        },
        {
          "ancestorTitles": [
            "SEOSettings Component"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Component renders with provided initial data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with provided initial data"
        },
        {
          "ancestorTitles": [
            "SEOSettings Component"
          ],
          "duration": 67,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Component calls onCancel when cancel button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onCancel when cancel button is clicked"
        },
        {
          "ancestorTitles": [
            "SEOSettings Validation"
          ],
          "duration": 1090,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Validation validates SEO title length (max 60 chars)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates SEO title length (max 60 chars)"
        },
        {
          "ancestorTitles": [
            "SEOSettings Validation"
          ],
          "duration": 2555,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Validation validates SEO description length (max 160 chars)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates SEO description length (max 160 chars)"
        },
        {
          "ancestorTitles": [
            "SEOSettings Validation"
          ],
          "duration": 293,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Validation validates Twitter site handle format (must start with @)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates Twitter site handle format (must start with @)"
        },
        {
          "ancestorTitles": [
            "SEOSettings Validation"
          ],
          "duration": 61,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Validation validates structured data JSON format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates structured data JSON format"
        },
        {
          "ancestorTitles": [
            "SEOSettings Validation"
          ],
          "duration": 1303,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Validation clears validation errors when fields are corrected",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "clears validation errors when fields are corrected"
        },
        {
          "ancestorTitles": [
            "SEOSettings Noindex Pages Management"
          ],
          "duration": 571,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Noindex Pages Management allows adding noindex pages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "allows adding noindex pages"
        },
        {
          "ancestorTitles": [
            "SEOSettings Noindex Pages Management"
          ],
          "duration": 309,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Noindex Pages Management validates noindex path must start with /",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates noindex path must start with /"
        },
        {
          "ancestorTitles": [
            "SEOSettings Noindex Pages Management"
          ],
          "duration": 545,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Noindex Pages Management prevents adding duplicate noindex paths",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "prevents adding duplicate noindex paths"
        },
        {
          "ancestorTitles": [
            "SEOSettings Noindex Pages Management"
          ],
          "duration": 79,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Noindex Pages Management allows removing noindex pages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "allows removing noindex pages"
        },
        {
          "ancestorTitles": [
            "SEOSettings Noindex Pages Management"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Noindex Pages Management renders with pre-populated noindex pages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with pre-populated noindex pages"
        },
        {
          "ancestorTitles": [
            "SEOSettings Noindex Pages Management"
          ],
          "duration": 243,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings Noindex Pages Management maintains empty input after adding a path",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "maintains empty input after adding a path"
        },
        {
          "ancestorTitles": [
            "SEOSettings API Interactions"
          ],
          "duration": 1048,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings API Interactions submits form data to API with correct values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "submits form data to API with correct values"
        },
        {
          "ancestorTitles": [
            "SEOSettings API Interactions"
          ],
          "duration": 75,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings API Interactions handles API errors properly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles API errors properly"
        },
        {
          "ancestorTitles": [
            "SEOSettings API Interactions"
          ],
          "duration": 62,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings API Interactions handles network errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles network errors gracefully"
        },
        {
          "ancestorTitles": [
            "SEOSettings API Interactions"
          ],
          "duration": 79,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "SEOSettings API Interactions uses the provided API endpoint",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses the provided API endpoint"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSiteForm Component › calls onSuccess callback when form submission succeeds\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\n    Expected number of calls: >= \u001b[32m1\u001b[39m\n    Received number of calls:    \u001b[31m0\u001b[39m\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<button\u001b[39m\n          \u001b[33mid\u001b[39m=\u001b[32m\"external-button\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mExternal Button\u001b[0m\n        \u001b[36m</button>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mclass\u001b[39m=\u001b[32m\"w-full max-w-2xl mx-auto p-6 bg-white rounded shadow\"\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-form\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<h1\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"text-xl font-bold mb-6\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"siteForm-header\"\u001b[39m\n              \u001b[33mid\u001b[39m=\u001b[32m\"siteForm-header\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[0mCreate\u001b[0m\n              \u001b[0m Site\u001b[0m\n            \u001b[36m</h1>\u001b[39m\n            \u001b[36m<nav\u001b[39m\n              \u001b[33maria-label\u001b[39m=\u001b[32m\"Form Steps\"\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"mb-6\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"site-form-steps-navigation\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<ol\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"flex flex-wrap border-b border-gray-200\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<li\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n                  \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-basic_info\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"\n                      py-3 w-full text-sm font-medium\n                      text-gray-700 hover:text-blue-500\n                    \"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-basic_info\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[36m<span\u001b[39m\n                      \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                    \u001b[36m>\u001b[39m\n                      \u001b[36m<svg\u001b[39m\n                        \u001b[33mclass\u001b[39m=\u001b[32m\"w-4 h-4 text-green-500\"\u001b[39m\n                        \u001b[33mfill\u001b[39m=\u001b[32m\"currentColor\"\u001b[39m\n                        \u001b[33mviewBox\u001b[39m=\u001b[32m\"0 0 20 20\"\u001b[39m\n                      \u001b[36m>\u001b[39m\n                        \u001b[36m<path\u001b[39m\n                          \u001b[33mclip-rule\u001b[39m=\u001b[32m\"evenodd\"\u001b[39m\n                          \u001b[33md\u001b[39m=\u001b[32m\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\u001b[39m\n                          \u001b[33mfill-rule\u001b[39m=\u001b[32m\"evenodd\"\u001b[39m\n                        \u001b[36m/>\u001b[39m\n                      \u001b[36m</svg>\u001b[39m\n                    \u001b[36m</span>\u001b[39m\n                    \u001b[0mBasic Information\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</li>\u001b[39m\n                \u001b[36m<li\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n                  \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-domains\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33maria-current\u001b[39m=\u001b[32m\"step\"\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"\n                      py-3 w-full text-sm font-medium\n                      text-blue-600 border-b-2 border-blue-600\n                    \"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-domains\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[36m<span\u001b[39m\n                      \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                    \u001b[36m>\u001b[39m\n                      \u001b[36m<span\u001b[39m\n                        \u001b[33mclass\u001b[39m=\u001b[32m\"text-blue-600\"\u001b[39m\n                      \u001b[36m>\u001b[39m\n                        \u001b[0m2\u001b[0m\n                      \u001b[36m</span>\u001b[39m\n                    \u001b[36m</span>\u001b[39m\n                    \u001b[0mDomains\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</li>\u001b[39m\n                \u001b[36m<li\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n                  \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-theme\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"\n                      py-3 w-full text-sm font-medium\n                      text-gray-400\n                    \"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-theme\"\u001b[39m\n                    \u001b[33mdisabled\u001b[39m=\u001b[32m\"\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[36m<span\u001b[39m\n                      \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                    \u001b[36m>\u001b[39m\n                      \u001b[36m<span\u001b[39m\n                        \u001b[33mclass\u001b[39m=\u001b[32m\"text-gray-400\"\u001b[39m\n                      \u001b[36m>\u001b[39m\n                        \u001b[0m3\u001b[0m\n                      \u001b[36m</span>\u001b[39m\n                    \u001b[36m</span>\u001b[39m\n                    \u001b[0mAppearance\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</li>\u001b[39m\n                \u001b[36m<li\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n                  \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-seo\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"\n                      py-3 w-full text-sm font-medium\n                      text-gray-400\n                    \"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-seo\"\u001b[39m\n                    \u001b[33mdisabled\u001b[39m=\u001b[32m\"\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[36m<span\u001b[39m\n                      \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                    \u001b[36m>\u001b[39m\n                      \u001b[36m<span\u001b[39m\n                        \u001b[33mclass\u001b[39m=\u001b[32m\"text-gray-400\"\u001b[39m\n                      \u001b[36m>\u001b[39m\n                        \u001b[0m4\u001b[0m\n                      \u001b[36m</span>\u001b[39m\n                    \u001b[36m</span>\u001b[39m\n                    \u001b[0mSEO\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</li>\u001b[39m\n                \u001b[36m<li\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"relative flex-grow px-2 text-center\"\u001b[39m\n                  \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-item-preview\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"\n                      py-3 w-full text-sm font-medium\n                      text-gray-400\n                    \"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-button-preview\"\u001b[39m\n                    \u001b[33mdisabled\u001b[39m=\u001b[32m\"\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[36m<span\u001b[39m\n                      \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center mr-2 w-5 h-5 rounded-full text-xs\"\u001b[39m\n                    \u001b[36m>\u001b[39m\n                      \u001b[36m<span\u001b[39m\n                        \u001b[33mclass\u001b[39m=\u001b[32m\"text-gray-400\"\u001b[39m\n                      \u001b[36m>\u001b[39m\n                        \u001b[0m5\u001b[0m\n                      \u001b[36m</span>\u001b[39m\n                    \u001b[36m</span>\u001b[39m\n                    \u001b[0mPreview\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</li>\u001b[39m\n              \u001b[36m</ol>\u001b[39m\n            \u001b[36m</nav>\u001b[39m\n            \u001b[36m<form\u001b[39m\n              \u001b[33maria-labelledby\u001b[39m=\u001b[32m\"siteForm-header\"\u001b[39m\n              \u001b[33mdata-testid\u001b[39m=\u001b[32m\"siteForm-form\"\u001b[39m\n              \u001b[33mrole\u001b[39m=\u001b[32m\"form\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<div\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"mb-6\"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"step-content\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<div\u001b[39m\n                  \u001b[33mdata-testid\u001b[39m=\u001b[32m\"domain-step\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<h2>\u001b[39m\n                    \u001b[0mDomain Configuration\u001b[0m\n                  \u001b[36m</h2>\u001b[39m\n                  \u001b[36m<div>\u001b[39m\n                    \u001b[0mNo domains configured\u001b[0m\n                  \u001b[36m</div>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"add-domain-button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0mAdd Domain\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</div>\u001b[39m\n              \u001b[36m</div>\u001b[39m\n              \u001b[36m<div\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"flex justify-between mt-8\"\u001b[39m\n                \u001b[33mdata-testid\u001b[39m=\u001b[32m\"form-actions\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<div\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"flex justify-start\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded focus:outline-none focus:ring-2\"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"form-back-button\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0m← Back\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</div>\u001b[39m\n                \u001b[36m<div\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"flex justify-end space-x-3\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"px-4 py-2 bg-gray-200 hover:bg-gray-300 rounded focus:outline-none focus:ring-2\"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"cancel-button\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0mCancel\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                  \u001b[36m<button\u001b[39m\n                    \u001b[33mclass\u001b[39m=\u001b[32m\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded focus:outline-none focus:ring-2 disabled:opacity-50\"\u001b[39m\n                    \u001b[33mdata-testid\u001b[39m=\u001b[32m\"next-button\"\u001b[39m\n                    \u001b[33mtype\u001b[39m=\u001b[32m\"button\"\u001b[39m\n                  \u001b[36m>\u001b[39m\n                    \u001b[0mNext →\u001b[0m\n                  \u001b[36m</button>\u001b[39m\n                \u001b[36m</div>\u001b[39m\n              \u001b[36m</div>\u001b[39m\n            \u001b[36m</form>\u001b[39m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 295 |\u001b[39m     \u001b[90m// Verify createSite was called\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 296 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 297 |\u001b[39m       expect(mockCreateSite)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 298 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 299 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 300 |\u001b[39m     \u001b[90m// Verify callback was called with response data\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toHaveBeenCalled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/admin/sites/SiteForm.test.tsx\u001b[39m\u001b[0m\u001b[2m:297:30)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat runWithExpensiveErrorDiagnosticsDisabled (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/config.js\u001b[2m:47:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat checkCallback (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/wait-for.js\u001b[2m:124:77)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat checkRealTimersCallback (\u001b[22m\u001b[2mnode_modules/@testing-library/dom/dist/wait-for.js\u001b[2m:118:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Timeout.task [as _onTimeout] (\u001b[22m\u001b[2mnode_modules/jsdom/lib/jsdom/browser/Window.js\u001b[2m:520:19)\u001b[22m\u001b[2m\u001b[22m\n"
    }
  ],
  "wasInterrupted": false
}