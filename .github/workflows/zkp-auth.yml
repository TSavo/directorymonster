name: ZKP Authentication System

on:
  push:
    branches: [ main, feature/*, develop ]
    paths:
      - 'circuits/**'
      - 'scripts/zkp-setup.ts'
      - 'scripts/update-zkp-implementation.js'
      - 'src/lib/zkp/**'
      - 'tests/crypto/**'
      - '.github/workflows/zkp-auth.yml'
      - 'docker-compose.zkp.yml'
      - 'Dockerfile.zkp'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'circuits/**'
      - 'scripts/zkp-setup.ts'
      - 'scripts/update-zkp-implementation.js'
      - 'src/lib/zkp/**'
      - 'tests/crypto/**'
      - '.github/workflows/zkp-auth.yml'
      - 'docker-compose.zkp.yml'
      - 'Dockerfile.zkp'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Set up ZKP authentication system
      run: npm run zkp:setup

    - name: Run secure ZKP tests
      run: npm run test:crypto:secure

    - name: Run simplified ZKP tests
      run: npm run test:crypto:simplified

    - name: Run all crypto tests
      run: npm run test:crypto

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: zkp-auth
        path: |
          circuits/zkp_auth/zkp_auth_final.zkey
          circuits/zkp_auth/verification_key.json
          circuits/zkp_auth/verifier.sol
          circuits/zkp_auth/zkp_auth_js/zkp_auth.wasm

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: zkp-auth
        path: circuits/zkp_auth

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.zkp
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/zkp-auth:latest
          ghcr.io/${{ github.repository }}/zkp-auth:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security-scan:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --production

    - name: Run SAST scan
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  deploy:
    runs-on: ubuntu-latest
    needs: [docker, security-scan]
    if: github.ref == 'refs/heads/main'
    # You need to create this environment in your GitHub repository settings
    environment: production

    steps:
    - uses: actions/checkout@v4

    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Add deployment steps here
        # This is a placeholder for actual deployment steps
        echo "Deployment complete!"
