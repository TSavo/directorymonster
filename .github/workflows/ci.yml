name: DirectoryMonster CI

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]

jobs:
  docker-tests:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      # Cache npm dependencies
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Ensure Docker Compose is available
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
      
      - name: Configure hostname resolution
        run: |
          # Add local domain entries to /etc/hosts for testing
          sudo bash -c 'echo "127.0.0.1 fishinggearreviews.com" >> /etc/hosts'
          sudo bash -c 'echo "127.0.0.1 hikinggearreviews.com" >> /etc/hosts'
          sudo bash -c 'echo "127.0.0.1 fishing-gear.mydirectory.com" >> /etc/hosts'
          sudo bash -c 'echo "127.0.0.1 hiking-gear.mydirectory.com" >> /etc/hosts'
          sudo bash -c 'echo "127.0.0.1 mydirectory.com" >> /etc/hosts'
      
      # Skip Docker build for now and focus on testing
      - name: Install dependencies
        run: |
          npm ci
          npm install --save-dev @testing-library/react
      
      # Run tests directly without Docker
      - name: Run linting and type checking
        run: |
          echo "Running linting and type checking..."
          npm run lint || true
          npm run typecheck || true
      
      - name: Run unit tests
        run: |
          echo "Running unit tests..."
          npm test
      
      - name: Upload logs as artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            *_test_output.log
            test_output.log
          retention-days: 7