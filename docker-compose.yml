version: '3.3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - AUTH_SECRET=development-auth-secret
      - NEXT_PUBLIC_BASE_URL=http://localhost:3000
      - NEXT_RUNTIME=nodejs
      - PORT=3000
      - HOSTNAME=0.0.0.0
    depends_on:
      - redis
    # Add hostname aliases for multitenancy testing
    extra_hosts:
      - "fishinggearreviews.com:127.0.0.1"
      - "hikinggearreviews.com:127.0.0.1"
      - "fishing-gear.mydirectory.com:127.0.0.1"
      - "hiking-gear.mydirectory.com:127.0.0.1"
      - "mydirectory.com:127.0.0.1"
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/healthcheck', (res) => res.statusCode === 200 ? process.exit(0) : process.exit(1))"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    restart: unless-stopped

volumes:
  redis-data: